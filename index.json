{
  "index.html": {
    "href": "index.html",
    "title": "CK-ActivityMonitor | CK-Text",
    "keywords": "CK-ActivityMonitor .NET Framework and .NET Core monitoring and logging utilities Getting started Check out the Getting started article. The API documentation is also available. NuGet packages CK.ActivityMonitor on nuget.org : core package CK.ActivityMonitor.SimpleSender on nuget.org : logging extension methods CK.ActivityMonitor.StandardSender on nuget.org (deprecated): old logging extension methods"
  },
  "api/CK.Core.ActivityMonitorSimpleSenderExtension.html": {
    "href": "api/CK.Core.ActivityMonitorSimpleSenderExtension.html",
    "title": "Class ActivityMonitorSimpleSenderExtension | CK-Text",
    "keywords": "Class ActivityMonitorSimpleSenderExtension Provides OpenXXX and XXX (Debug, Trace, Info,...Fatal) extension methods for IActivityMonitor . Inheritance Object ActivityMonitorSimpleSenderExtension Inherited Members Object.ToString() Object.Equals(Object) Object.Equals(Object, Object) Object.ReferenceEquals(Object, Object) Object.GetHashCode() Object.GetType() Object.MemberwiseClone() Namespace : CK.Core Assembly : CK.ActivityMonitor.SimpleSender.dll Syntax public static class ActivityMonitorSimpleSenderExtension Methods | Improve this Doc View Source Debug(IActivityMonitor, Exception, CKTrait, Int32, String) Emits a Debug with an exception and tags if it must be emitted (this depends on ActualFilter , the global default DefaultFilter and may also depend on fileName and lineNumber ). Declaration public static void Debug(this IActivityMonitor this, Exception ex, CKTrait tags, int lineNumber = 0, string fileName = null) Parameters Type Name Description IActivityMonitor this This IActivityMonitor . Exception ex The exception to log. CKTrait tags The tags for this log. Int32 lineNumber Line number in the source file (automatically injected by C# compiler). String fileName Source file name of the emitter (automatically injected by C# compiler). | Improve this Doc View Source Debug(IActivityMonitor, Exception, Int32, String) Emits a Debug with an exception if it must be emitted (this depends on ActualFilter , the global default DefaultFilter and may also depend on fileName and lineNumber ). Declaration public static void Debug(this IActivityMonitor this, Exception ex, int lineNumber = 0, string fileName = null) Parameters Type Name Description IActivityMonitor this This IActivityMonitor . Exception ex The exception to log. Int32 lineNumber Line number in the source file (automatically injected by C# compiler). String fileName Source file name of the emitter (automatically injected by C# compiler). | Improve this Doc View Source Debug(IActivityMonitor, Func<String>, CKTrait, Int32, String) Generates and emits a Debug string and tags if it must be emitted (this depends on ActualFilter , the global default DefaultFilter and may also depend on fileName and lineNumber ). Declaration public static void Debug(this IActivityMonitor this, Func<string> text, CKTrait tags, int lineNumber = 0, string fileName = null) Parameters Type Name Description IActivityMonitor this This IActivityMonitor . Func < String > text A function (that will be called only if required) that returns the text to log. CKTrait tags The tags for this log. Int32 lineNumber Line number in the source file (automatically injected by C# compiler). String fileName Source file name of the emitter (automatically injected by C# compiler). | Improve this Doc View Source Debug(IActivityMonitor, Func<String>, Exception, CKTrait, Int32, String) Generates and emits a Debug string associated to an exception and tags if it must be emitted (this depends on ActualFilter , the global default DefaultFilter and may also depend on fileName and lineNumber ). Declaration public static void Debug(this IActivityMonitor this, Func<string> text, Exception ex, CKTrait tags, int lineNumber = 0, string fileName = null) Parameters Type Name Description IActivityMonitor this This IActivityMonitor . Func < String > text A function (that will be called only if required) that returns the text to log. Exception ex The exception to log. CKTrait tags The tags for this log. Int32 lineNumber Line number in the source file (automatically injected by C# compiler). String fileName Source file name of the emitter (automatically injected by C# compiler). | Improve this Doc View Source Debug(IActivityMonitor, Func<String>, Exception, Int32, String) Generates and emits a Debug string associated to an exception if it must be emitted (this depends on ActualFilter , the global default DefaultFilter and may also depend on fileName and lineNumber ). Declaration public static void Debug(this IActivityMonitor this, Func<string> text, Exception ex, int lineNumber = 0, string fileName = null) Parameters Type Name Description IActivityMonitor this This IActivityMonitor . Func < String > text A function (that will be called only if required) that returns the text to log. Exception ex The exception to log. Int32 lineNumber Line number in the source file (automatically injected by C# compiler). String fileName Source file name of the emitter (automatically injected by C# compiler). | Improve this Doc View Source Debug(IActivityMonitor, Func<String>, Int32, String) Generates and emits a Debug string if it must be emitted (this depends on ActualFilter , the global default DefaultFilter and may also depend on fileName and lineNumber ). Declaration public static void Debug(this IActivityMonitor this, Func<string> text, int lineNumber = 0, string fileName = null) Parameters Type Name Description IActivityMonitor this This IActivityMonitor . Func < String > text A function (that will be called only if required) that returns the text to log. Int32 lineNumber Line number in the source file (automatically injected by C# compiler). String fileName Source file name of the emitter (automatically injected by C# compiler). | Improve this Doc View Source Debug(IActivityMonitor, String, CKTrait, Int32, String) Emits a Debug string and tags if it must be emitted (this depends on ActualFilter , the global default DefaultFilter and may also depend on fileName and lineNumber ). Declaration public static void Debug(this IActivityMonitor this, string text, CKTrait tags, int lineNumber = 0, string fileName = null) Parameters Type Name Description IActivityMonitor this This IActivityMonitor . String text The text to log. CKTrait tags The tags for this log. Int32 lineNumber Line number in the source file (automatically injected by C# compiler). String fileName Source file name of the emitter (automatically injected by C# compiler). | Improve this Doc View Source Debug(IActivityMonitor, String, Exception, CKTrait, Int32, String) Emits a Debug string associated to an exception and tags if it must be emitted (this depends on ActualFilter , the global default DefaultFilter and may also depend on fileName and lineNumber ). Declaration public static void Debug(this IActivityMonitor this, string text, Exception ex, CKTrait tags, int lineNumber = 0, string fileName = null) Parameters Type Name Description IActivityMonitor this This IActivityMonitor . String text The text to log. Exception ex The exception to log. CKTrait tags The tags for this log. Int32 lineNumber Line number in the source file (automatically injected by C# compiler). String fileName Source file name of the emitter (automatically injected by C# compiler). | Improve this Doc View Source Debug(IActivityMonitor, String, Exception, Int32, String) Emits a Debug string associated to an exception if it must be emitted (this depends on ActualFilter , the global default DefaultFilter and may also depend on fileName and lineNumber ). Declaration public static void Debug(this IActivityMonitor this, string text, Exception ex, int lineNumber = 0, string fileName = null) Parameters Type Name Description IActivityMonitor this This IActivityMonitor . String text The text to log. Exception ex The exception to log. Int32 lineNumber Line number in the source file (automatically injected by C# compiler). String fileName Source file name of the emitter (automatically injected by C# compiler). | Improve this Doc View Source Debug(IActivityMonitor, String, Int32, String) Emits a Debug string if it must be emitted (this depends on ActualFilter , the global default DefaultFilter and may also depend on fileName and lineNumber ). Declaration public static void Debug(this IActivityMonitor this, string text, int lineNumber = 0, string fileName = null) Parameters Type Name Description IActivityMonitor this This IActivityMonitor . String text The text to log. Int32 lineNumber Line number in the source file (automatically injected by C# compiler). String fileName Source file name of the emitter (automatically injected by C# compiler). | Improve this Doc View Source Error(IActivityMonitor, Exception, CKTrait, Int32, String) Emits a Error with an exception and tags if it must be emitted (this depends on ActualFilter , the global default DefaultFilter and may also depend on fileName and lineNumber ). Declaration public static void Error(this IActivityMonitor this, Exception ex, CKTrait tags, int lineNumber = 0, string fileName = null) Parameters Type Name Description IActivityMonitor this This IActivityMonitor . Exception ex The exception to log. CKTrait tags The tags for this log. Int32 lineNumber Line number in the source file (automatically injected by C# compiler). String fileName Source file name of the emitter (automatically injected by C# compiler). | Improve this Doc View Source Error(IActivityMonitor, Exception, Int32, String) Emits a Error with an exception if it must be emitted (this depends on ActualFilter , the global default DefaultFilter and may also depend on fileName and lineNumber ). Declaration public static void Error(this IActivityMonitor this, Exception ex, int lineNumber = 0, string fileName = null) Parameters Type Name Description IActivityMonitor this This IActivityMonitor . Exception ex The exception to log. Int32 lineNumber Line number in the source file (automatically injected by C# compiler). String fileName Source file name of the emitter (automatically injected by C# compiler). | Improve this Doc View Source Error(IActivityMonitor, Func<String>, CKTrait, Int32, String) Generates and emits a Error string and tags if it must be emitted (this depends on ActualFilter , the global default DefaultFilter and may also depend on fileName and lineNumber ). Declaration public static void Error(this IActivityMonitor this, Func<string> text, CKTrait tags, int lineNumber = 0, string fileName = null) Parameters Type Name Description IActivityMonitor this This IActivityMonitor . Func < String > text A function (that will be called only if required) that returns the text to log. CKTrait tags The tags for this log. Int32 lineNumber Line number in the source file (automatically injected by C# compiler). String fileName Source file name of the emitter (automatically injected by C# compiler). | Improve this Doc View Source Error(IActivityMonitor, Func<String>, Exception, CKTrait, Int32, String) Generates and emits a Error string associated to an exception and tags if it must be emitted (this depends on ActualFilter , the global default DefaultFilter and may also depend on fileName and lineNumber ). Declaration public static void Error(this IActivityMonitor this, Func<string> text, Exception ex, CKTrait tags, int lineNumber = 0, string fileName = null) Parameters Type Name Description IActivityMonitor this This IActivityMonitor . Func < String > text A function (that will be called only if required) that returns the text to log. Exception ex The exception to log. CKTrait tags The tags for this log. Int32 lineNumber Line number in the source file (automatically injected by C# compiler). String fileName Source file name of the emitter (automatically injected by C# compiler). | Improve this Doc View Source Error(IActivityMonitor, Func<String>, Exception, Int32, String) Generates and emits a Error string associated to an exception if it must be emitted (this depends on ActualFilter , the global default DefaultFilter and may also depend on fileName and lineNumber ). Declaration public static void Error(this IActivityMonitor this, Func<string> text, Exception ex, int lineNumber = 0, string fileName = null) Parameters Type Name Description IActivityMonitor this This IActivityMonitor . Func < String > text A function (that will be called only if required) that returns the text to log. Exception ex The exception to log. Int32 lineNumber Line number in the source file (automatically injected by C# compiler). String fileName Source file name of the emitter (automatically injected by C# compiler). | Improve this Doc View Source Error(IActivityMonitor, Func<String>, Int32, String) Generates and emits a Error string if it must be emitted (this depends on ActualFilter , the global default DefaultFilter and may also depend on fileName and lineNumber ). Declaration public static void Error(this IActivityMonitor this, Func<string> text, int lineNumber = 0, string fileName = null) Parameters Type Name Description IActivityMonitor this This IActivityMonitor . Func < String > text A function (that will be called only if required) that returns the text to log. Int32 lineNumber Line number in the source file (automatically injected by C# compiler). String fileName Source file name of the emitter (automatically injected by C# compiler). | Improve this Doc View Source Error(IActivityMonitor, String, CKTrait, Int32, String) Emits a Error string and tags if it must be emitted (this depends on ActualFilter , the global default DefaultFilter and may also depend on fileName and lineNumber ). Declaration public static void Error(this IActivityMonitor this, string text, CKTrait tags, int lineNumber = 0, string fileName = null) Parameters Type Name Description IActivityMonitor this This IActivityMonitor . String text The text to log. CKTrait tags The tags for this log. Int32 lineNumber Line number in the source file (automatically injected by C# compiler). String fileName Source file name of the emitter (automatically injected by C# compiler). | Improve this Doc View Source Error(IActivityMonitor, String, Exception, CKTrait, Int32, String) Emits a Error string associated to an exception and tags if it must be emitted (this depends on ActualFilter , the global default DefaultFilter and may also depend on fileName and lineNumber ). Declaration public static void Error(this IActivityMonitor this, string text, Exception ex, CKTrait tags, int lineNumber = 0, string fileName = null) Parameters Type Name Description IActivityMonitor this This IActivityMonitor . String text The text to log. Exception ex The exception to log. CKTrait tags The tags for this log. Int32 lineNumber Line number in the source file (automatically injected by C# compiler). String fileName Source file name of the emitter (automatically injected by C# compiler). | Improve this Doc View Source Error(IActivityMonitor, String, Exception, Int32, String) Emits a Error string associated to an exception if it must be emitted (this depends on ActualFilter , the global default DefaultFilter and may also depend on fileName and lineNumber ). Declaration public static void Error(this IActivityMonitor this, string text, Exception ex, int lineNumber = 0, string fileName = null) Parameters Type Name Description IActivityMonitor this This IActivityMonitor . String text The text to log. Exception ex The exception to log. Int32 lineNumber Line number in the source file (automatically injected by C# compiler). String fileName Source file name of the emitter (automatically injected by C# compiler). | Improve this Doc View Source Error(IActivityMonitor, String, Int32, String) Emits a Error string if it must be emitted (this depends on ActualFilter , the global default DefaultFilter and may also depend on fileName and lineNumber ). Declaration public static void Error(this IActivityMonitor this, string text, int lineNumber = 0, string fileName = null) Parameters Type Name Description IActivityMonitor this This IActivityMonitor . String text The text to log. Int32 lineNumber Line number in the source file (automatically injected by C# compiler). String fileName Source file name of the emitter (automatically injected by C# compiler). | Improve this Doc View Source Fatal(IActivityMonitor, Exception, CKTrait, Int32, String) Emits a Fatal with an exception and tags if it must be emitted (this depends on ActualFilter , the global default DefaultFilter and may also depend on fileName and lineNumber ). Declaration public static void Fatal(this IActivityMonitor this, Exception ex, CKTrait tags, int lineNumber = 0, string fileName = null) Parameters Type Name Description IActivityMonitor this This IActivityMonitor . Exception ex The exception to log. CKTrait tags The tags for this log. Int32 lineNumber Line number in the source file (automatically injected by C# compiler). String fileName Source file name of the emitter (automatically injected by C# compiler). | Improve this Doc View Source Fatal(IActivityMonitor, Exception, Int32, String) Emits a Fatal with an exception if it must be emitted (this depends on ActualFilter , the global default DefaultFilter and may also depend on fileName and lineNumber ). Declaration public static void Fatal(this IActivityMonitor this, Exception ex, int lineNumber = 0, string fileName = null) Parameters Type Name Description IActivityMonitor this This IActivityMonitor . Exception ex The exception to log. Int32 lineNumber Line number in the source file (automatically injected by C# compiler). String fileName Source file name of the emitter (automatically injected by C# compiler). | Improve this Doc View Source Fatal(IActivityMonitor, Func<String>, CKTrait, Int32, String) Generates and emits a Fatal string and tags if it must be emitted (this depends on ActualFilter , the global default DefaultFilter and may also depend on fileName and lineNumber ). Declaration public static void Fatal(this IActivityMonitor this, Func<string> text, CKTrait tags, int lineNumber = 0, string fileName = null) Parameters Type Name Description IActivityMonitor this This IActivityMonitor . Func < String > text A function (that will be called only if required) that returns the text to log. CKTrait tags The tags for this log. Int32 lineNumber Line number in the source file (automatically injected by C# compiler). String fileName Source file name of the emitter (automatically injected by C# compiler). | Improve this Doc View Source Fatal(IActivityMonitor, Func<String>, Exception, CKTrait, Int32, String) Generates and emits a Fatal string associated to an exception and tags if it must be emitted (this depends on ActualFilter , the global default DefaultFilter and may also depend on fileName and lineNumber ). Declaration public static void Fatal(this IActivityMonitor this, Func<string> text, Exception ex, CKTrait tags, int lineNumber = 0, string fileName = null) Parameters Type Name Description IActivityMonitor this This IActivityMonitor . Func < String > text A function (that will be called only if required) that returns the text to log. Exception ex The exception to log. CKTrait tags The tags for this log. Int32 lineNumber Line number in the source file (automatically injected by C# compiler). String fileName Source file name of the emitter (automatically injected by C# compiler). | Improve this Doc View Source Fatal(IActivityMonitor, Func<String>, Exception, Int32, String) Generates and emits a Fatal string associated to an exception if it must be emitted (this depends on ActualFilter , the global default DefaultFilter and may also depend on fileName and lineNumber ). Declaration public static void Fatal(this IActivityMonitor this, Func<string> text, Exception ex, int lineNumber = 0, string fileName = null) Parameters Type Name Description IActivityMonitor this This IActivityMonitor . Func < String > text A function (that will be called only if required) that returns the text to log. Exception ex The exception to log. Int32 lineNumber Line number in the source file (automatically injected by C# compiler). String fileName Source file name of the emitter (automatically injected by C# compiler). | Improve this Doc View Source Fatal(IActivityMonitor, Func<String>, Int32, String) Generates and emits a Fatal string if it must be emitted (this depends on ActualFilter , the global default DefaultFilter and may also depend on fileName and lineNumber ). Declaration public static void Fatal(this IActivityMonitor this, Func<string> text, int lineNumber = 0, string fileName = null) Parameters Type Name Description IActivityMonitor this This IActivityMonitor . Func < String > text A function (that will be called only if required) that returns the text to log. Int32 lineNumber Line number in the source file (automatically injected by C# compiler). String fileName Source file name of the emitter (automatically injected by C# compiler). | Improve this Doc View Source Fatal(IActivityMonitor, String, CKTrait, Int32, String) Emits a Fatal string and tags if it must be emitted (this depends on ActualFilter , the global default DefaultFilter and may also depend on fileName and lineNumber ). Declaration public static void Fatal(this IActivityMonitor this, string text, CKTrait tags, int lineNumber = 0, string fileName = null) Parameters Type Name Description IActivityMonitor this This IActivityMonitor . String text The text to log. CKTrait tags The tags for this log. Int32 lineNumber Line number in the source file (automatically injected by C# compiler). String fileName Source file name of the emitter (automatically injected by C# compiler). | Improve this Doc View Source Fatal(IActivityMonitor, String, Exception, CKTrait, Int32, String) Emits a Fatal string associated to an exception and tags if it must be emitted (this depends on ActualFilter , the global default DefaultFilter and may also depend on fileName and lineNumber ). Declaration public static void Fatal(this IActivityMonitor this, string text, Exception ex, CKTrait tags, int lineNumber = 0, string fileName = null) Parameters Type Name Description IActivityMonitor this This IActivityMonitor . String text The text to log. Exception ex The exception to log. CKTrait tags The tags for this log. Int32 lineNumber Line number in the source file (automatically injected by C# compiler). String fileName Source file name of the emitter (automatically injected by C# compiler). | Improve this Doc View Source Fatal(IActivityMonitor, String, Exception, Int32, String) Emits a Fatal string associated to an exception if it must be emitted (this depends on ActualFilter , the global default DefaultFilter and may also depend on fileName and lineNumber ). Declaration public static void Fatal(this IActivityMonitor this, string text, Exception ex, int lineNumber = 0, string fileName = null) Parameters Type Name Description IActivityMonitor this This IActivityMonitor . String text The text to log. Exception ex The exception to log. Int32 lineNumber Line number in the source file (automatically injected by C# compiler). String fileName Source file name of the emitter (automatically injected by C# compiler). | Improve this Doc View Source Fatal(IActivityMonitor, String, Int32, String) Emits a Fatal string if it must be emitted (this depends on ActualFilter , the global default DefaultFilter and may also depend on fileName and lineNumber ). Declaration public static void Fatal(this IActivityMonitor this, string text, int lineNumber = 0, string fileName = null) Parameters Type Name Description IActivityMonitor this This IActivityMonitor . String text The text to log. Int32 lineNumber Line number in the source file (automatically injected by C# compiler). String fileName Source file name of the emitter (automatically injected by C# compiler). | Improve this Doc View Source Info(IActivityMonitor, Exception, CKTrait, Int32, String) Emits a Info with an exception and tags if it must be emitted (this depends on ActualFilter , the global default DefaultFilter and may also depend on fileName and lineNumber ). Declaration public static void Info(this IActivityMonitor this, Exception ex, CKTrait tags, int lineNumber = 0, string fileName = null) Parameters Type Name Description IActivityMonitor this This IActivityMonitor . Exception ex The exception to log. CKTrait tags The tags for this log. Int32 lineNumber Line number in the source file (automatically injected by C# compiler). String fileName Source file name of the emitter (automatically injected by C# compiler). | Improve this Doc View Source Info(IActivityMonitor, Exception, Int32, String) Emits a Info with an exception if it must be emitted (this depends on ActualFilter , the global default DefaultFilter and may also depend on fileName and lineNumber ). Declaration public static void Info(this IActivityMonitor this, Exception ex, int lineNumber = 0, string fileName = null) Parameters Type Name Description IActivityMonitor this This IActivityMonitor . Exception ex The exception to log. Int32 lineNumber Line number in the source file (automatically injected by C# compiler). String fileName Source file name of the emitter (automatically injected by C# compiler). | Improve this Doc View Source Info(IActivityMonitor, Func<String>, CKTrait, Int32, String) Generates and emits a Info string and tags if it must be emitted (this depends on ActualFilter , the global default DefaultFilter and may also depend on fileName and lineNumber ). Declaration public static void Info(this IActivityMonitor this, Func<string> text, CKTrait tags, int lineNumber = 0, string fileName = null) Parameters Type Name Description IActivityMonitor this This IActivityMonitor . Func < String > text A function (that will be called only if required) that returns the text to log. CKTrait tags The tags for this log. Int32 lineNumber Line number in the source file (automatically injected by C# compiler). String fileName Source file name of the emitter (automatically injected by C# compiler). | Improve this Doc View Source Info(IActivityMonitor, Func<String>, Exception, CKTrait, Int32, String) Generates and emits a Info string associated to an exception and tags if it must be emitted (this depends on ActualFilter , the global default DefaultFilter and may also depend on fileName and lineNumber ). Declaration public static void Info(this IActivityMonitor this, Func<string> text, Exception ex, CKTrait tags, int lineNumber = 0, string fileName = null) Parameters Type Name Description IActivityMonitor this This IActivityMonitor . Func < String > text A function (that will be called only if required) that returns the text to log. Exception ex The exception to log. CKTrait tags The tags for this log. Int32 lineNumber Line number in the source file (automatically injected by C# compiler). String fileName Source file name of the emitter (automatically injected by C# compiler). | Improve this Doc View Source Info(IActivityMonitor, Func<String>, Exception, Int32, String) Generates and emits a Info string associated to an exception if it must be emitted (this depends on ActualFilter , the global default DefaultFilter and may also depend on fileName and lineNumber ). Declaration public static void Info(this IActivityMonitor this, Func<string> text, Exception ex, int lineNumber = 0, string fileName = null) Parameters Type Name Description IActivityMonitor this This IActivityMonitor . Func < String > text A function (that will be called only if required) that returns the text to log. Exception ex The exception to log. Int32 lineNumber Line number in the source file (automatically injected by C# compiler). String fileName Source file name of the emitter (automatically injected by C# compiler). | Improve this Doc View Source Info(IActivityMonitor, Func<String>, Int32, String) Generates and emits a Info string if it must be emitted (this depends on ActualFilter , the global default DefaultFilter and may also depend on fileName and lineNumber ). Declaration public static void Info(this IActivityMonitor this, Func<string> text, int lineNumber = 0, string fileName = null) Parameters Type Name Description IActivityMonitor this This IActivityMonitor . Func < String > text A function (that will be called only if required) that returns the text to log. Int32 lineNumber Line number in the source file (automatically injected by C# compiler). String fileName Source file name of the emitter (automatically injected by C# compiler). | Improve this Doc View Source Info(IActivityMonitor, String, CKTrait, Int32, String) Emits a Info string and tags if it must be emitted (this depends on ActualFilter , the global default DefaultFilter and may also depend on fileName and lineNumber ). Declaration public static void Info(this IActivityMonitor this, string text, CKTrait tags, int lineNumber = 0, string fileName = null) Parameters Type Name Description IActivityMonitor this This IActivityMonitor . String text The text to log. CKTrait tags The tags for this log. Int32 lineNumber Line number in the source file (automatically injected by C# compiler). String fileName Source file name of the emitter (automatically injected by C# compiler). | Improve this Doc View Source Info(IActivityMonitor, String, Exception, CKTrait, Int32, String) Emits a Info string associated to an exception and tags if it must be emitted (this depends on ActualFilter , the global default DefaultFilter and may also depend on fileName and lineNumber ). Declaration public static void Info(this IActivityMonitor this, string text, Exception ex, CKTrait tags, int lineNumber = 0, string fileName = null) Parameters Type Name Description IActivityMonitor this This IActivityMonitor . String text The text to log. Exception ex The exception to log. CKTrait tags The tags for this log. Int32 lineNumber Line number in the source file (automatically injected by C# compiler). String fileName Source file name of the emitter (automatically injected by C# compiler). | Improve this Doc View Source Info(IActivityMonitor, String, Exception, Int32, String) Emits a Info string associated to an exception if it must be emitted (this depends on ActualFilter , the global default DefaultFilter and may also depend on fileName and lineNumber ). Declaration public static void Info(this IActivityMonitor this, string text, Exception ex, int lineNumber = 0, string fileName = null) Parameters Type Name Description IActivityMonitor this This IActivityMonitor . String text The text to log. Exception ex The exception to log. Int32 lineNumber Line number in the source file (automatically injected by C# compiler). String fileName Source file name of the emitter (automatically injected by C# compiler). | Improve this Doc View Source Info(IActivityMonitor, String, Int32, String) Emits a Info string if it must be emitted (this depends on ActualFilter , the global default DefaultFilter and may also depend on fileName and lineNumber ). Declaration public static void Info(this IActivityMonitor this, string text, int lineNumber = 0, string fileName = null) Parameters Type Name Description IActivityMonitor this This IActivityMonitor . String text The text to log. Int32 lineNumber Line number in the source file (automatically injected by C# compiler). String fileName Source file name of the emitter (automatically injected by C# compiler). | Improve this Doc View Source Log(IActivityMonitor, LogLevel, Exception, CKTrait, Int32, String) Emits a LogLevel with an exception and tags if it must be emitted (this depends on ActualFilter , the global default DefaultFilter and may also depend on fileName and lineNumber ). Declaration public static void Log(this IActivityMonitor this, LogLevel level, Exception ex, CKTrait tags, int lineNumber = 0, string fileName = null) Parameters Type Name Description IActivityMonitor this This IActivityMonitor . LogLevel level The log level. Exception ex The exception to log. CKTrait tags The tags for this log. Int32 lineNumber Line number in the source file (automatically injected by C# compiler). String fileName Source file name of the emitter (automatically injected by C# compiler). | Improve this Doc View Source Log(IActivityMonitor, LogLevel, Exception, Int32, String) Emits a LogLevel exception if it must be emitted (this depends on ActualFilter , the global default DefaultFilter and may also depend on fileName and lineNumber ). Declaration public static void Log(this IActivityMonitor this, LogLevel level, Exception ex, int lineNumber = 0, string fileName = null) Parameters Type Name Description IActivityMonitor this This IActivityMonitor . LogLevel level The log level. Exception ex The exception to log. Int32 lineNumber Line number in the source file (automatically injected by C# compiler). String fileName Source file name of the emitter (automatically injected by C# compiler). | Improve this Doc View Source Log(IActivityMonitor, LogLevel, Func<String>, CKTrait, Int32, String) Generates and emits a LogLevel text message and tags if it must be emitted (this depends on ActualFilter , the global default DefaultFilter and may also depend on fileName and lineNumber ). Declaration public static void Log(this IActivityMonitor this, LogLevel level, Func<string> text, CKTrait tags, int lineNumber = 0, string fileName = null) Parameters Type Name Description IActivityMonitor this This IActivityMonitor . LogLevel level The log level. Func < String > text A function (that will be called only if required) that returns the text to log. CKTrait tags The tags for this log. Int32 lineNumber Line number in the source file (automatically injected by C# compiler). String fileName Source file name of the emitter (automatically injected by C# compiler). | Improve this Doc View Source Log(IActivityMonitor, LogLevel, Func<String>, Exception, CKTrait, Int32, String) Generates and emits a LogLevel text message associated to an exception and tags if it must be emitted (this depends on ActualFilter , the global default DefaultFilter and may also depend on fileName and lineNumber ). Declaration public static void Log(this IActivityMonitor this, LogLevel level, Func<string> text, Exception ex, CKTrait tags, int lineNumber = 0, string fileName = null) Parameters Type Name Description IActivityMonitor this This IActivityMonitor . LogLevel level The log level. Func < String > text A function (that will be called only if required) that returns the text to log. Exception ex The exception to log. CKTrait tags The tags for this log. Int32 lineNumber Line number in the source file (automatically injected by C# compiler). String fileName Source file name of the emitter (automatically injected by C# compiler). | Improve this Doc View Source Log(IActivityMonitor, LogLevel, Func<String>, Exception, Int32, String) Generates and emits a LogLevel text message associated to an exception if it must be emitted (this depends on ActualFilter , the global default DefaultFilter and may also depend on fileName and lineNumber ). Declaration public static void Log(this IActivityMonitor this, LogLevel level, Func<string> text, Exception ex, int lineNumber = 0, string fileName = null) Parameters Type Name Description IActivityMonitor this This IActivityMonitor . LogLevel level The log level. Func < String > text A function (that will be called only if required) that returns the text to log. Exception ex The exception to log. Int32 lineNumber Line number in the source file (automatically injected by C# compiler). String fileName Source file name of the emitter (automatically injected by C# compiler). | Improve this Doc View Source Log(IActivityMonitor, LogLevel, Func<String>, Int32, String) Generates and emits a LogLevel text message if it must be emitted (this depends on ActualFilter , the global default DefaultFilter and may also depend on fileName and lineNumber ). Declaration public static void Log(this IActivityMonitor this, LogLevel level, Func<string> text, int lineNumber = 0, string fileName = null) Parameters Type Name Description IActivityMonitor this This IActivityMonitor . LogLevel level The log level. Func < String > text A function (that will be called only if required) that returns the text to log. Int32 lineNumber Line number in the source file (automatically injected by C# compiler). String fileName Source file name of the emitter (automatically injected by C# compiler). | Improve this Doc View Source Log(IActivityMonitor, LogLevel, String, CKTrait, Int32, String) Emits a LogLevel text message and tags if it must be emitted (this depends on ActualFilter , the global default DefaultFilter and may also depend on fileName and lineNumber ). Declaration public static void Log(this IActivityMonitor this, LogLevel level, string text, CKTrait tags, int lineNumber = 0, string fileName = null) Parameters Type Name Description IActivityMonitor this This IActivityMonitor . LogLevel level The log level. String text The text to log. CKTrait tags The tags for this log. Int32 lineNumber Line number in the source file (automatically injected by C# compiler). String fileName Source file name of the emitter (automatically injected by C# compiler). | Improve this Doc View Source Log(IActivityMonitor, LogLevel, String, Exception, CKTrait, Int32, String) Emits a LogLevel text message associated to an exception and tags if it must be emitted (this depends on ActualFilter , the global default DefaultFilter and may also depend on fileName and lineNumber ). Declaration public static void Log(this IActivityMonitor this, LogLevel level, string text, Exception ex, CKTrait tags, int lineNumber = 0, string fileName = null) Parameters Type Name Description IActivityMonitor this This IActivityMonitor . LogLevel level The log level. String text The text to log. Exception ex The exception to log. CKTrait tags The tags for this log. Int32 lineNumber Line number in the source file (automatically injected by C# compiler). String fileName Source file name of the emitter (automatically injected by C# compiler). | Improve this Doc View Source Log(IActivityMonitor, LogLevel, String, Exception, Int32, String) Emits a LogLevel text message associated to an exception if it must be emitted (this depends on ActualFilter , the global default DefaultFilter and may also depend on fileName and lineNumber ). Declaration public static void Log(this IActivityMonitor this, LogLevel level, string text, Exception ex, int lineNumber = 0, string fileName = null) Parameters Type Name Description IActivityMonitor this This IActivityMonitor . LogLevel level The log level. String text The text to log. Exception ex The exception to log. Int32 lineNumber Line number in the source file (automatically injected by C# compiler). String fileName Source file name of the emitter (automatically injected by C# compiler). | Improve this Doc View Source Log(IActivityMonitor, LogLevel, String, Int32, String) Emits a LogLevel text message if it must be emitted (this depends on ActualFilter , the global default DefaultFilter and may also depend on fileName and lineNumber ). Declaration public static void Log(this IActivityMonitor this, LogLevel level, string text, int lineNumber = 0, string fileName = null) Parameters Type Name Description IActivityMonitor this This IActivityMonitor . LogLevel level The log level. String text The text to log. Int32 lineNumber Line number in the source file (automatically injected by C# compiler). String fileName Source file name of the emitter (automatically injected by C# compiler). | Improve this Doc View Source OpenDebug(IActivityMonitor, Exception, CKTrait, Int32, String) Opens a Debug group with an exception and tags. Regardless of whether it will be emitted or not (this depends on ActualFilter , the global default DefaultFilter and may also depend on fileName and lineNumber ), it must always be closed. Declaration public static IDisposableGroup OpenDebug(this IActivityMonitor this, Exception ex, CKTrait tags, int lineNumber = 0, string fileName = null) Parameters Type Name Description IActivityMonitor this This IActivityMonitor . Exception ex The exception to log. CKTrait tags The tags for this log. Int32 lineNumber Line number in the source file (automatically injected by C# compiler). String fileName Source file name of the emitter (automatically injected by C# compiler). Returns Type Description IDisposableGroup A disposable object that can be used to set a function that provides a conclusion text and/or close the group. | Improve this Doc View Source OpenDebug(IActivityMonitor, Exception, Int32, String) Opens a Debug group with an exception. Regardless of whether it will be emitted or not (this depends on ActualFilter , the global default DefaultFilter and may also depend on fileName and lineNumber ), it must always be closed. Declaration public static IDisposableGroup OpenDebug(this IActivityMonitor this, Exception ex, int lineNumber = 0, string fileName = null) Parameters Type Name Description IActivityMonitor this This IActivityMonitor . Exception ex The exception to log. Int32 lineNumber Line number in the source file (automatically injected by C# compiler). String fileName Source file name of the emitter (automatically injected by C# compiler). Returns Type Description IDisposableGroup A disposable object that can be used to set a function that provides a conclusion text and/or close the group. | Improve this Doc View Source OpenDebug(IActivityMonitor, Func<String>, CKTrait, Int32, String) Opens a Debug group with a text message built only if the group must be emitted and tags. Regardless of whether it will be emitted or not (this depends on ActualFilter , the global default DefaultFilter and may also depend on fileName and lineNumber ), it must always be closed. Declaration public static IDisposableGroup OpenDebug(this IActivityMonitor this, Func<string> text, CKTrait tags, int lineNumber = 0, string fileName = null) Parameters Type Name Description IActivityMonitor this This IActivityMonitor . Func < String > text A function (that will be called only if required) that returns the text to log. CKTrait tags The tags for this group. Int32 lineNumber Line number in the source file (automatically injected by C# compiler). String fileName Source file name of the emitter (automatically injected by C# compiler). Returns Type Description IDisposableGroup A disposable object that can be used to set a function that provides a conclusion text and/or close the group. | Improve this Doc View Source OpenDebug(IActivityMonitor, Func<String>, Exception, CKTrait, Int32, String) Opens a Debug group with a text message built only if the group must be emitted, an exception and tags. Regardless of whether it will be emitted or not (this depends on ActualFilter , the global default DefaultFilter and may also depend on fileName and lineNumber ), it must always be closed. Declaration public static IDisposableGroup OpenDebug(this IActivityMonitor this, Func<string> text, Exception ex, CKTrait tags, int lineNumber = 0, string fileName = null) Parameters Type Name Description IActivityMonitor this This IActivityMonitor . Func < String > text A function (that will be called only if required) that returns the text to log. Exception ex The exception to log. CKTrait tags The tags for this group. Int32 lineNumber Line number in the source file (automatically injected by C# compiler). String fileName Source file name of the emitter (automatically injected by C# compiler). Returns Type Description IDisposableGroup A disposable object that can be used to set a function that provides a conclusion text and/or close the group. | Improve this Doc View Source OpenDebug(IActivityMonitor, Func<String>, Exception, Int32, String) Opens a Debug group with a text message built only if the group must be emitted and an exception. Regardless of whether it will be emitted or not (this depends on ActualFilter , the global default DefaultFilter and may also depend on fileName and lineNumber ), it must always be closed. Declaration public static IDisposableGroup OpenDebug(this IActivityMonitor this, Func<string> text, Exception ex, int lineNumber = 0, string fileName = null) Parameters Type Name Description IActivityMonitor this This IActivityMonitor . Func < String > text A function (that will be called only if required) that returns the text to log. Exception ex The exception to log. Int32 lineNumber Line number in the source file (automatically injected by C# compiler). String fileName Source file name of the emitter (automatically injected by C# compiler). Returns Type Description IDisposableGroup A disposable object that can be used to set a function that provides a conclusion text and/or close the group. | Improve this Doc View Source OpenDebug(IActivityMonitor, Func<String>, Int32, String) Opens a Debug group with a text message built only if the group must be emitted. Regardless of whether it will be emitted or not (this depends on ActualFilter , the global default DefaultFilter and may also depend on fileName and lineNumber ), it must always be closed. Declaration public static IDisposableGroup OpenDebug(this IActivityMonitor this, Func<string> text, int lineNumber = 0, string fileName = null) Parameters Type Name Description IActivityMonitor this This IActivityMonitor . Func < String > text A function (that will be called only if required) that returns the text to log. Int32 lineNumber Line number in the source file (automatically injected by C# compiler). String fileName Source file name of the emitter (automatically injected by C# compiler). Returns Type Description IDisposableGroup A disposable object that can be used to set a function that provides a conclusion text and/or close the group. | Improve this Doc View Source OpenDebug(IActivityMonitor, String, CKTrait, Int32, String) Opens a Debug group with a text message and tags. Regardless of whether it will be emitted or not (this depends on ActualFilter , the global default DefaultFilter and may also depend on fileName and lineNumber ), it must always be closed. Declaration public static IDisposableGroup OpenDebug(this IActivityMonitor this, string text, CKTrait tags, int lineNumber = 0, string fileName = null) Parameters Type Name Description IActivityMonitor this This IActivityMonitor . String text The text to log. CKTrait tags The tags for this log. Int32 lineNumber Line number in the source file (automatically injected by C# compiler). String fileName Source file name of the emitter (automatically injected by C# compiler). Returns Type Description IDisposableGroup A disposable object that can be used to set a function that provides a conclusion text and/or close the group. | Improve this Doc View Source OpenDebug(IActivityMonitor, String, Exception, CKTrait, Int32, String) Opens a Debug group with a text message associated to an exception and tags. Regardless of whether it will be emitted or not (this depends on ActualFilter , the global default DefaultFilter and may also depend on fileName and lineNumber ), it must always be closed. Declaration public static IDisposableGroup OpenDebug(this IActivityMonitor this, string text, Exception ex, CKTrait tags, int lineNumber = 0, string fileName = null) Parameters Type Name Description IActivityMonitor this This IActivityMonitor . String text The text to log. Exception ex The exception to log. CKTrait tags The tags for this log. Int32 lineNumber Line number in the source file (automatically injected by C# compiler). String fileName Source file name of the emitter (automatically injected by C# compiler). Returns Type Description IDisposableGroup A disposable object that can be used to set a function that provides a conclusion text and/or close the group. | Improve this Doc View Source OpenDebug(IActivityMonitor, String, Exception, Int32, String) Opens a Debug group with a text message associated to an exception. Regardless of whether it will be emitted or not (this depends on ActualFilter , the global default DefaultFilter and may also depend on fileName and lineNumber ), it must always be closed. Declaration public static IDisposableGroup OpenDebug(this IActivityMonitor this, string text, Exception ex, int lineNumber = 0, string fileName = null) Parameters Type Name Description IActivityMonitor this This IActivityMonitor . String text The text to log. Exception ex The exception to log. Int32 lineNumber Line number in the source file (automatically injected by C# compiler). String fileName Source file name of the emitter (automatically injected by C# compiler). Returns Type Description IDisposableGroup A disposable object that can be used to set a function that provides a conclusion text and/or close the group. | Improve this Doc View Source OpenDebug(IActivityMonitor, String, Int32, String) Opens a Debug group with a text message. Regardless of whether it will be emitted or not (this depends on ActualFilter , the global default DefaultFilter and may also depend on fileName and lineNumber ), it must always be closed. Declaration public static IDisposableGroup OpenDebug(this IActivityMonitor this, string text, int lineNumber = 0, string fileName = null) Parameters Type Name Description IActivityMonitor this This IActivityMonitor . String text The text to log. Int32 lineNumber Line number in the source file (automatically injected by C# compiler). String fileName Source file name of the emitter (automatically injected by C# compiler). Returns Type Description IDisposableGroup A disposable object that can be used to set a function that provides a conclusion text and/or close the group. | Improve this Doc View Source OpenError(IActivityMonitor, Exception, CKTrait, Int32, String) Opens a Error group with an exception and tags. Regardless of whether it will be emitted or not (this depends on ActualFilter , the global default DefaultFilter and may also depend on fileName and lineNumber ), it must always be closed. Declaration public static IDisposableGroup OpenError(this IActivityMonitor this, Exception ex, CKTrait tags, int lineNumber = 0, string fileName = null) Parameters Type Name Description IActivityMonitor this This IActivityMonitor . Exception ex The exception to log. CKTrait tags The tags for this log. Int32 lineNumber Line number in the source file (automatically injected by C# compiler). String fileName Source file name of the emitter (automatically injected by C# compiler). Returns Type Description IDisposableGroup A disposable object that can be used to set a function that provides a conclusion text and/or close the group. | Improve this Doc View Source OpenError(IActivityMonitor, Exception, Int32, String) Opens a Error group with an exception. Regardless of whether it will be emitted or not (this depends on ActualFilter , the global default DefaultFilter and may also depend on fileName and lineNumber ), it must always be closed. Declaration public static IDisposableGroup OpenError(this IActivityMonitor this, Exception ex, int lineNumber = 0, string fileName = null) Parameters Type Name Description IActivityMonitor this This IActivityMonitor . Exception ex The exception to log. Int32 lineNumber Line number in the source file (automatically injected by C# compiler). String fileName Source file name of the emitter (automatically injected by C# compiler). Returns Type Description IDisposableGroup A disposable object that can be used to set a function that provides a conclusion text and/or close the group. | Improve this Doc View Source OpenError(IActivityMonitor, Func<String>, CKTrait, Int32, String) Opens a Error group with a text message built only if the group must be emitted and tags. Regardless of whether it will be emitted or not (this depends on ActualFilter , the global default DefaultFilter and may also depend on fileName and lineNumber ), it must always be closed. Declaration public static IDisposableGroup OpenError(this IActivityMonitor this, Func<string> text, CKTrait tags, int lineNumber = 0, string fileName = null) Parameters Type Name Description IActivityMonitor this This IActivityMonitor . Func < String > text A function (that will be called only if required) that returns the text to log. CKTrait tags The tags for this group. Int32 lineNumber Line number in the source file (automatically injected by C# compiler). String fileName Source file name of the emitter (automatically injected by C# compiler). Returns Type Description IDisposableGroup A disposable object that can be used to set a function that provides a conclusion text and/or close the group. | Improve this Doc View Source OpenError(IActivityMonitor, Func<String>, Exception, CKTrait, Int32, String) Opens a Error group with a text message built only if the group must be emitted, an exception and tags. Regardless of whether it will be emitted or not (this depends on ActualFilter , the global default DefaultFilter and may also depend on fileName and lineNumber ), it must always be closed. Declaration public static IDisposableGroup OpenError(this IActivityMonitor this, Func<string> text, Exception ex, CKTrait tags, int lineNumber = 0, string fileName = null) Parameters Type Name Description IActivityMonitor this This IActivityMonitor . Func < String > text A function (that will be called only if required) that returns the text to log. Exception ex The exception to log. CKTrait tags The tags for this group. Int32 lineNumber Line number in the source file (automatically injected by C# compiler). String fileName Source file name of the emitter (automatically injected by C# compiler). Returns Type Description IDisposableGroup A disposable object that can be used to set a function that provides a conclusion text and/or close the group. | Improve this Doc View Source OpenError(IActivityMonitor, Func<String>, Exception, Int32, String) Opens a Error group with a text message built only if the group must be emitted and an exception. Regardless of whether it will be emitted or not (this depends on ActualFilter , the global default DefaultFilter and may also depend on fileName and lineNumber ), it must always be closed. Declaration public static IDisposableGroup OpenError(this IActivityMonitor this, Func<string> text, Exception ex, int lineNumber = 0, string fileName = null) Parameters Type Name Description IActivityMonitor this This IActivityMonitor . Func < String > text A function (that will be called only if required) that returns the text to log. Exception ex The exception to log. Int32 lineNumber Line number in the source file (automatically injected by C# compiler). String fileName Source file name of the emitter (automatically injected by C# compiler). Returns Type Description IDisposableGroup A disposable object that can be used to set a function that provides a conclusion text and/or close the group. | Improve this Doc View Source OpenError(IActivityMonitor, Func<String>, Int32, String) Opens a Error group with a text message built only if the group must be emitted. Regardless of whether it will be emitted or not (this depends on ActualFilter , the global default DefaultFilter and may also depend on fileName and lineNumber ), it must always be closed. Declaration public static IDisposableGroup OpenError(this IActivityMonitor this, Func<string> text, int lineNumber = 0, string fileName = null) Parameters Type Name Description IActivityMonitor this This IActivityMonitor . Func < String > text A function (that will be called only if required) that returns the text to log. Int32 lineNumber Line number in the source file (automatically injected by C# compiler). String fileName Source file name of the emitter (automatically injected by C# compiler). Returns Type Description IDisposableGroup A disposable object that can be used to set a function that provides a conclusion text and/or close the group. | Improve this Doc View Source OpenError(IActivityMonitor, String, CKTrait, Int32, String) Opens a Error group with a text message and tags. Regardless of whether it will be emitted or not (this depends on ActualFilter , the global default DefaultFilter and may also depend on fileName and lineNumber ), it must always be closed. Declaration public static IDisposableGroup OpenError(this IActivityMonitor this, string text, CKTrait tags, int lineNumber = 0, string fileName = null) Parameters Type Name Description IActivityMonitor this This IActivityMonitor . String text The text to log. CKTrait tags The tags for this log. Int32 lineNumber Line number in the source file (automatically injected by C# compiler). String fileName Source file name of the emitter (automatically injected by C# compiler). Returns Type Description IDisposableGroup A disposable object that can be used to set a function that provides a conclusion text and/or close the group. | Improve this Doc View Source OpenError(IActivityMonitor, String, Exception, CKTrait, Int32, String) Opens a Error group with a text message associated to an exception and tags. Regardless of whether it will be emitted or not (this depends on ActualFilter , the global default DefaultFilter and may also depend on fileName and lineNumber ), it must always be closed. Declaration public static IDisposableGroup OpenError(this IActivityMonitor this, string text, Exception ex, CKTrait tags, int lineNumber = 0, string fileName = null) Parameters Type Name Description IActivityMonitor this This IActivityMonitor . String text The text to log. Exception ex The exception to log. CKTrait tags The tags for this log. Int32 lineNumber Line number in the source file (automatically injected by C# compiler). String fileName Source file name of the emitter (automatically injected by C# compiler). Returns Type Description IDisposableGroup A disposable object that can be used to set a function that provides a conclusion text and/or close the group. | Improve this Doc View Source OpenError(IActivityMonitor, String, Exception, Int32, String) Opens a Error group with a text message associated to an exception. Regardless of whether it will be emitted or not (this depends on ActualFilter , the global default DefaultFilter and may also depend on fileName and lineNumber ), it must always be closed. Declaration public static IDisposableGroup OpenError(this IActivityMonitor this, string text, Exception ex, int lineNumber = 0, string fileName = null) Parameters Type Name Description IActivityMonitor this This IActivityMonitor . String text The text to log. Exception ex The exception to log. Int32 lineNumber Line number in the source file (automatically injected by C# compiler). String fileName Source file name of the emitter (automatically injected by C# compiler). Returns Type Description IDisposableGroup A disposable object that can be used to set a function that provides a conclusion text and/or close the group. | Improve this Doc View Source OpenError(IActivityMonitor, String, Int32, String) Opens a Error group with a text message. Regardless of whether it will be emitted or not (this depends on ActualFilter , the global default DefaultFilter and may also depend on fileName and lineNumber ), it must always be closed. Declaration public static IDisposableGroup OpenError(this IActivityMonitor this, string text, int lineNumber = 0, string fileName = null) Parameters Type Name Description IActivityMonitor this This IActivityMonitor . String text The text to log. Int32 lineNumber Line number in the source file (automatically injected by C# compiler). String fileName Source file name of the emitter (automatically injected by C# compiler). Returns Type Description IDisposableGroup A disposable object that can be used to set a function that provides a conclusion text and/or close the group. | Improve this Doc View Source OpenFatal(IActivityMonitor, Exception, CKTrait, Int32, String) Opens a Fatal group with an exception and tags. Regardless of whether it will be emitted or not (this depends on ActualFilter , the global default DefaultFilter and may also depend on fileName and lineNumber ), it must always be closed. Declaration public static IDisposableGroup OpenFatal(this IActivityMonitor this, Exception ex, CKTrait tags, int lineNumber = 0, string fileName = null) Parameters Type Name Description IActivityMonitor this This IActivityMonitor . Exception ex The exception to log. CKTrait tags The tags for this log. Int32 lineNumber Line number in the source file (automatically injected by C# compiler). String fileName Source file name of the emitter (automatically injected by C# compiler). Returns Type Description IDisposableGroup A disposable object that can be used to set a function that provides a conclusion text and/or close the group. | Improve this Doc View Source OpenFatal(IActivityMonitor, Exception, Int32, String) Opens a Fatal group with an exception. Regardless of whether it will be emitted or not (this depends on ActualFilter , the global default DefaultFilter and may also depend on fileName and lineNumber ), it must always be closed. Declaration public static IDisposableGroup OpenFatal(this IActivityMonitor this, Exception ex, int lineNumber = 0, string fileName = null) Parameters Type Name Description IActivityMonitor this This IActivityMonitor . Exception ex The exception to log. Int32 lineNumber Line number in the source file (automatically injected by C# compiler). String fileName Source file name of the emitter (automatically injected by C# compiler). Returns Type Description IDisposableGroup A disposable object that can be used to set a function that provides a conclusion text and/or close the group. | Improve this Doc View Source OpenFatal(IActivityMonitor, Func<String>, CKTrait, Int32, String) Opens a Fatal group with a text message built only if the group must be emitted and tags. Regardless of whether it will be emitted or not (this depends on ActualFilter , the global default DefaultFilter and may also depend on fileName and lineNumber ), it must always be closed. Declaration public static IDisposableGroup OpenFatal(this IActivityMonitor this, Func<string> text, CKTrait tags, int lineNumber = 0, string fileName = null) Parameters Type Name Description IActivityMonitor this This IActivityMonitor . Func < String > text A function (that will be called only if required) that returns the text to log. CKTrait tags The tags for this group. Int32 lineNumber Line number in the source file (automatically injected by C# compiler). String fileName Source file name of the emitter (automatically injected by C# compiler). Returns Type Description IDisposableGroup A disposable object that can be used to set a function that provides a conclusion text and/or close the group. | Improve this Doc View Source OpenFatal(IActivityMonitor, Func<String>, Exception, CKTrait, Int32, String) Opens a Fatal group with a text message built only if the group must be emitted, an exception and tags. Regardless of whether it will be emitted or not (this depends on ActualFilter , the global default DefaultFilter and may also depend on fileName and lineNumber ), it must always be closed. Declaration public static IDisposableGroup OpenFatal(this IActivityMonitor this, Func<string> text, Exception ex, CKTrait tags, int lineNumber = 0, string fileName = null) Parameters Type Name Description IActivityMonitor this This IActivityMonitor . Func < String > text A function (that will be called only if required) that returns the text to log. Exception ex The exception to log. CKTrait tags The tags for this group. Int32 lineNumber Line number in the source file (automatically injected by C# compiler). String fileName Source file name of the emitter (automatically injected by C# compiler). Returns Type Description IDisposableGroup A disposable object that can be used to set a function that provides a conclusion text and/or close the group. | Improve this Doc View Source OpenFatal(IActivityMonitor, Func<String>, Exception, Int32, String) Opens a Fatal group with a text message built only if the group must be emitted and an exception. Regardless of whether it will be emitted or not (this depends on ActualFilter , the global default DefaultFilter and may also depend on fileName and lineNumber ), it must always be closed. Declaration public static IDisposableGroup OpenFatal(this IActivityMonitor this, Func<string> text, Exception ex, int lineNumber = 0, string fileName = null) Parameters Type Name Description IActivityMonitor this This IActivityMonitor . Func < String > text A function (that will be called only if required) that returns the text to log. Exception ex The exception to log. Int32 lineNumber Line number in the source file (automatically injected by C# compiler). String fileName Source file name of the emitter (automatically injected by C# compiler). Returns Type Description IDisposableGroup A disposable object that can be used to set a function that provides a conclusion text and/or close the group. | Improve this Doc View Source OpenFatal(IActivityMonitor, Func<String>, Int32, String) Opens a Fatal group with a text message built only if the group must be emitted. Regardless of whether it will be emitted or not (this depends on ActualFilter , the global default DefaultFilter and may also depend on fileName and lineNumber ), it must always be closed. Declaration public static IDisposableGroup OpenFatal(this IActivityMonitor this, Func<string> text, int lineNumber = 0, string fileName = null) Parameters Type Name Description IActivityMonitor this This IActivityMonitor . Func < String > text A function (that will be called only if required) that returns the text to log. Int32 lineNumber Line number in the source file (automatically injected by C# compiler). String fileName Source file name of the emitter (automatically injected by C# compiler). Returns Type Description IDisposableGroup A disposable object that can be used to set a function that provides a conclusion text and/or close the group. | Improve this Doc View Source OpenFatal(IActivityMonitor, String, CKTrait, Int32, String) Opens a Fatal group with a text message and tags. Regardless of whether it will be emitted or not (this depends on ActualFilter , the global default DefaultFilter and may also depend on fileName and lineNumber ), it must always be closed. Declaration public static IDisposableGroup OpenFatal(this IActivityMonitor this, string text, CKTrait tags, int lineNumber = 0, string fileName = null) Parameters Type Name Description IActivityMonitor this This IActivityMonitor . String text The text to log. CKTrait tags The tags for this log. Int32 lineNumber Line number in the source file (automatically injected by C# compiler). String fileName Source file name of the emitter (automatically injected by C# compiler). Returns Type Description IDisposableGroup A disposable object that can be used to set a function that provides a conclusion text and/or close the group. | Improve this Doc View Source OpenFatal(IActivityMonitor, String, Exception, CKTrait, Int32, String) Opens a Fatal group with a text message associated to an exception and tags. Regardless of whether it will be emitted or not (this depends on ActualFilter , the global default DefaultFilter and may also depend on fileName and lineNumber ), it must always be closed. Declaration public static IDisposableGroup OpenFatal(this IActivityMonitor this, string text, Exception ex, CKTrait tags, int lineNumber = 0, string fileName = null) Parameters Type Name Description IActivityMonitor this This IActivityMonitor . String text The text to log. Exception ex The exception to log. CKTrait tags The tags for this log. Int32 lineNumber Line number in the source file (automatically injected by C# compiler). String fileName Source file name of the emitter (automatically injected by C# compiler). Returns Type Description IDisposableGroup A disposable object that can be used to set a function that provides a conclusion text and/or close the group. | Improve this Doc View Source OpenFatal(IActivityMonitor, String, Exception, Int32, String) Opens a Fatal group with a text message associated to an exception. Regardless of whether it will be emitted or not (this depends on ActualFilter , the global default DefaultFilter and may also depend on fileName and lineNumber ), it must always be closed. Declaration public static IDisposableGroup OpenFatal(this IActivityMonitor this, string text, Exception ex, int lineNumber = 0, string fileName = null) Parameters Type Name Description IActivityMonitor this This IActivityMonitor . String text The text to log. Exception ex The exception to log. Int32 lineNumber Line number in the source file (automatically injected by C# compiler). String fileName Source file name of the emitter (automatically injected by C# compiler). Returns Type Description IDisposableGroup A disposable object that can be used to set a function that provides a conclusion text and/or close the group. | Improve this Doc View Source OpenFatal(IActivityMonitor, String, Int32, String) Opens a Fatal group with a text message. Regardless of whether it will be emitted or not (this depends on ActualFilter , the global default DefaultFilter and may also depend on fileName and lineNumber ), it must always be closed. Declaration public static IDisposableGroup OpenFatal(this IActivityMonitor this, string text, int lineNumber = 0, string fileName = null) Parameters Type Name Description IActivityMonitor this This IActivityMonitor . String text The text to log. Int32 lineNumber Line number in the source file (automatically injected by C# compiler). String fileName Source file name of the emitter (automatically injected by C# compiler). Returns Type Description IDisposableGroup A disposable object that can be used to set a function that provides a conclusion text and/or close the group. | Improve this Doc View Source OpenGroup(IActivityMonitor, LogLevel, Exception, CKTrait, Int32, String) Opens a given LogLevel group with an exception and tags. Regardless of whether it will be emitted or not (this depends on ActualFilter , the global default DefaultFilter and may also depend on fileName and lineNumber ), it must always be closed. Declaration public static IDisposableGroup OpenGroup(this IActivityMonitor this, LogLevel level, Exception ex, CKTrait tags, int lineNumber = 0, string fileName = null) Parameters Type Name Description IActivityMonitor this This IActivityMonitor . LogLevel level The log level. Exception ex The exception to log. CKTrait tags The tags for this log. Int32 lineNumber Line number in the source file (automatically injected by C# compiler). String fileName Source file name of the emitter (automatically injected by C# compiler). Returns Type Description IDisposableGroup A disposable object that can be used to set a function that provides a conclusion text and/or close the group. | Improve this Doc View Source OpenGroup(IActivityMonitor, LogLevel, Exception, Int32, String) Opens a given LogLevel group with an exception. Regardless of whether it will be emitted or not (this depends on ActualFilter , the global default DefaultFilter and may also depend on fileName and lineNumber ), it must always be closed. Declaration public static IDisposableGroup OpenGroup(this IActivityMonitor this, LogLevel level, Exception ex, int lineNumber = 0, string fileName = null) Parameters Type Name Description IActivityMonitor this This IActivityMonitor . LogLevel level The log level. Exception ex The exception to log. Int32 lineNumber Line number in the source file (automatically injected by C# compiler). String fileName Source file name of the emitter (automatically injected by C# compiler). Returns Type Description IDisposableGroup A disposable object that can be used to set a function that provides a conclusion text and/or close the group. | Improve this Doc View Source OpenGroup(IActivityMonitor, LogLevel, Func<String>, CKTrait, Int32, String) Opens a given LogLevel group with a text message built only if the group must be emitted and tags. Regardless of whether it will be emitted or not (this depends on ActualFilter , the global default DefaultFilter and may also depend on fileName and lineNumber ), it must always be closed. Declaration public static IDisposableGroup OpenGroup(this IActivityMonitor this, LogLevel level, Func<string> text, CKTrait tags, int lineNumber = 0, string fileName = null) Parameters Type Name Description IActivityMonitor this This IActivityMonitor . LogLevel level The log level. Func < String > text A function (that will be called only if required) that returns the text to log. CKTrait tags The tags for this group. Int32 lineNumber Line number in the source file (automatically injected by C# compiler). String fileName Source file name of the emitter (automatically injected by C# compiler). Returns Type Description IDisposableGroup A disposable object that can be used to set a function that provides a conclusion text and/or close the group. | Improve this Doc View Source OpenGroup(IActivityMonitor, LogLevel, Func<String>, Exception, CKTrait, Int32, String) Opens a given LogLevel group with a text message built only if the group must be emitted, an exception and tags. Regardless of whether it will be emitted or not (this depends on ActualFilter , the global default DefaultFilter and may also depend on fileName and lineNumber ), it must always be closed. Declaration public static IDisposableGroup OpenGroup(this IActivityMonitor this, LogLevel level, Func<string> text, Exception ex, CKTrait tags, int lineNumber = 0, string fileName = null) Parameters Type Name Description IActivityMonitor this This IActivityMonitor . LogLevel level The log level. Func < String > text A function (that will be called only if required) that returns the text to log. Exception ex The exception to log. CKTrait tags The tags for this group. Int32 lineNumber Line number in the source file (automatically injected by C# compiler). String fileName Source file name of the emitter (automatically injected by C# compiler). Returns Type Description IDisposableGroup A disposable object that can be used to set a function that provides a conclusion text and/or close the group. | Improve this Doc View Source OpenGroup(IActivityMonitor, LogLevel, Func<String>, Exception, Int32, String) Opens a given LogLevel group with a text message built only if the group must be emitted and an exception. Regardless of whether it will be emitted or not (this depends on ActualFilter , the global default DefaultFilter and may also depend on fileName and lineNumber ), it must always be closed. Declaration public static IDisposableGroup OpenGroup(this IActivityMonitor this, LogLevel level, Func<string> text, Exception ex, int lineNumber = 0, string fileName = null) Parameters Type Name Description IActivityMonitor this This IActivityMonitor . LogLevel level The log level. Func < String > text A function (that will be called only if required) that returns the text to log. Exception ex The exception to log. Int32 lineNumber Line number in the source file (automatically injected by C# compiler). String fileName Source file name of the emitter (automatically injected by C# compiler). Returns Type Description IDisposableGroup A disposable object that can be used to set a function that provides a conclusion text and/or close the group. | Improve this Doc View Source OpenGroup(IActivityMonitor, LogLevel, Func<String>, Int32, String) Opens a given LogLevel group with a text message built only if the group must be emitted. Regardless of whether it will be emitted or not (this depends on ActualFilter , the global default DefaultFilter and may also depend on fileName and lineNumber ), it must always be closed. Declaration public static IDisposableGroup OpenGroup(this IActivityMonitor this, LogLevel level, Func<string> text, int lineNumber = 0, string fileName = null) Parameters Type Name Description IActivityMonitor this This IActivityMonitor . LogLevel level The log level. Func < String > text A function (that will be called only if required) that returns the text to log. Int32 lineNumber Line number in the source file (automatically injected by C# compiler). String fileName Source file name of the emitter (automatically injected by C# compiler). Returns Type Description IDisposableGroup A disposable object that can be used to set a function that provides a conclusion text and/or close the group. | Improve this Doc View Source OpenGroup(IActivityMonitor, LogLevel, String, CKTrait, Int32, String) Opens a given LogLevel group with a text message and tags. Regardless of whether it will be emitted or not (this depends on ActualFilter , the global default DefaultFilter and may also depend on fileName and lineNumber ), it must always be closed. Declaration public static IDisposableGroup OpenGroup(this IActivityMonitor this, LogLevel level, string text, CKTrait tags, int lineNumber = 0, string fileName = null) Parameters Type Name Description IActivityMonitor this This IActivityMonitor . LogLevel level The log level. String text The text to log. CKTrait tags The tags for this log. Int32 lineNumber Line number in the source file (automatically injected by C# compiler). String fileName Source file name of the emitter (automatically injected by C# compiler). Returns Type Description IDisposableGroup A disposable object that can be used to set a function that provides a conclusion text and/or close the group. | Improve this Doc View Source OpenGroup(IActivityMonitor, LogLevel, String, Exception, CKTrait, Int32, String) Opens a given LogLevel group with a text message associated to an exception and tags. Regardless of whether it will be emitted or not (this depends on ActualFilter , the global default DefaultFilter and may also depend on fileName and lineNumber ), it must always be closed. Declaration public static IDisposableGroup OpenGroup(this IActivityMonitor this, LogLevel level, string text, Exception ex, CKTrait tags, int lineNumber = 0, string fileName = null) Parameters Type Name Description IActivityMonitor this This IActivityMonitor . LogLevel level The log level. String text The text to log. Exception ex The exception to log. CKTrait tags The tags for this log. Int32 lineNumber Line number in the source file (automatically injected by C# compiler). String fileName Source file name of the emitter (automatically injected by C# compiler). Returns Type Description IDisposableGroup A disposable object that can be used to set a function that provides a conclusion text and/or close the group. | Improve this Doc View Source OpenGroup(IActivityMonitor, LogLevel, String, Exception, Int32, String) Opens a given LogLevel group with a text message associated to an exception. Regardless of whether it will be emitted or not (this depends on ActualFilter , the global default DefaultFilter and may also depend on fileName and lineNumber ), it must always be closed. Declaration public static IDisposableGroup OpenGroup(this IActivityMonitor this, LogLevel level, string text, Exception ex, int lineNumber = 0, string fileName = null) Parameters Type Name Description IActivityMonitor this This IActivityMonitor . LogLevel level The log level. String text The text to log. Exception ex The exception to log. Int32 lineNumber Line number in the source file (automatically injected by C# compiler). String fileName Source file name of the emitter (automatically injected by C# compiler). Returns Type Description IDisposableGroup A disposable object that can be used to set a function that provides a conclusion text and/or close the group. | Improve this Doc View Source OpenGroup(IActivityMonitor, LogLevel, String, Int32, String) Opens a given LogLevel group with a text message. Regardless of whether it will be emitted or not (this depends on ActualFilter , the global default DefaultFilter and may also depend on fileName and lineNumber ), it must always be closed. Declaration public static IDisposableGroup OpenGroup(this IActivityMonitor this, LogLevel level, string text, int lineNumber = 0, string fileName = null) Parameters Type Name Description IActivityMonitor this This IActivityMonitor . LogLevel level The log level. String text The text to log. Int32 lineNumber Line number in the source file (automatically injected by C# compiler). String fileName Source file name of the emitter (automatically injected by C# compiler). Returns Type Description IDisposableGroup A disposable object that can be used to set a function that provides a conclusion text and/or close the group. | Improve this Doc View Source OpenInfo(IActivityMonitor, Exception, CKTrait, Int32, String) Opens a Info group with an exception and tags. Regardless of whether it will be emitted or not (this depends on ActualFilter , the global default DefaultFilter and may also depend on fileName and lineNumber ), it must always be closed. Declaration public static IDisposableGroup OpenInfo(this IActivityMonitor this, Exception ex, CKTrait tags, int lineNumber = 0, string fileName = null) Parameters Type Name Description IActivityMonitor this This IActivityMonitor . Exception ex The exception to log. CKTrait tags The tags for this log. Int32 lineNumber Line number in the source file (automatically injected by C# compiler). String fileName Source file name of the emitter (automatically injected by C# compiler). Returns Type Description IDisposableGroup A disposable object that can be used to set a function that provides a conclusion text and/or close the group. | Improve this Doc View Source OpenInfo(IActivityMonitor, Exception, Int32, String) Opens a Info group with an exception. Regardless of whether it will be emitted or not (this depends on ActualFilter , the global default DefaultFilter and may also depend on fileName and lineNumber ), it must always be closed. Declaration public static IDisposableGroup OpenInfo(this IActivityMonitor this, Exception ex, int lineNumber = 0, string fileName = null) Parameters Type Name Description IActivityMonitor this This IActivityMonitor . Exception ex The exception to log. Int32 lineNumber Line number in the source file (automatically injected by C# compiler). String fileName Source file name of the emitter (automatically injected by C# compiler). Returns Type Description IDisposableGroup A disposable object that can be used to set a function that provides a conclusion text and/or close the group. | Improve this Doc View Source OpenInfo(IActivityMonitor, Func<String>, CKTrait, Int32, String) Opens a Info group with a text message built only if the group must be emitted and tags. Regardless of whether it will be emitted or not (this depends on ActualFilter , the global default DefaultFilter and may also depend on fileName and lineNumber ), it must always be closed. Declaration public static IDisposableGroup OpenInfo(this IActivityMonitor this, Func<string> text, CKTrait tags, int lineNumber = 0, string fileName = null) Parameters Type Name Description IActivityMonitor this This IActivityMonitor . Func < String > text A function (that will be called only if required) that returns the text to log. CKTrait tags The tags for this group. Int32 lineNumber Line number in the source file (automatically injected by C# compiler). String fileName Source file name of the emitter (automatically injected by C# compiler). Returns Type Description IDisposableGroup A disposable object that can be used to set a function that provides a conclusion text and/or close the group. | Improve this Doc View Source OpenInfo(IActivityMonitor, Func<String>, Exception, CKTrait, Int32, String) Opens a Info group with a text message built only if the group must be emitted, an exception and tags. Regardless of whether it will be emitted or not (this depends on ActualFilter , the global default DefaultFilter and may also depend on fileName and lineNumber ), it must always be closed. Declaration public static IDisposableGroup OpenInfo(this IActivityMonitor this, Func<string> text, Exception ex, CKTrait tags, int lineNumber = 0, string fileName = null) Parameters Type Name Description IActivityMonitor this This IActivityMonitor . Func < String > text A function (that will be called only if required) that returns the text to log. Exception ex The exception to log. CKTrait tags The tags for this group. Int32 lineNumber Line number in the source file (automatically injected by C# compiler). String fileName Source file name of the emitter (automatically injected by C# compiler). Returns Type Description IDisposableGroup A disposable object that can be used to set a function that provides a conclusion text and/or close the group. | Improve this Doc View Source OpenInfo(IActivityMonitor, Func<String>, Exception, Int32, String) Opens a Info group with a text message built only if the group must be emitted and an exception. Regardless of whether it will be emitted or not (this depends on ActualFilter , the global default DefaultFilter and may also depend on fileName and lineNumber ), it must always be closed. Declaration public static IDisposableGroup OpenInfo(this IActivityMonitor this, Func<string> text, Exception ex, int lineNumber = 0, string fileName = null) Parameters Type Name Description IActivityMonitor this This IActivityMonitor . Func < String > text A function (that will be called only if required) that returns the text to log. Exception ex The exception to log. Int32 lineNumber Line number in the source file (automatically injected by C# compiler). String fileName Source file name of the emitter (automatically injected by C# compiler). Returns Type Description IDisposableGroup A disposable object that can be used to set a function that provides a conclusion text and/or close the group. | Improve this Doc View Source OpenInfo(IActivityMonitor, Func<String>, Int32, String) Opens a Info group with a text message built only if the group must be emitted. Regardless of whether it will be emitted or not (this depends on ActualFilter , the global default DefaultFilter and may also depend on fileName and lineNumber ), it must always be closed. Declaration public static IDisposableGroup OpenInfo(this IActivityMonitor this, Func<string> text, int lineNumber = 0, string fileName = null) Parameters Type Name Description IActivityMonitor this This IActivityMonitor . Func < String > text A function (that will be called only if required) that returns the text to log. Int32 lineNumber Line number in the source file (automatically injected by C# compiler). String fileName Source file name of the emitter (automatically injected by C# compiler). Returns Type Description IDisposableGroup A disposable object that can be used to set a function that provides a conclusion text and/or close the group. | Improve this Doc View Source OpenInfo(IActivityMonitor, String, CKTrait, Int32, String) Opens a Info group with a text message and tags. Regardless of whether it will be emitted or not (this depends on ActualFilter , the global default DefaultFilter and may also depend on fileName and lineNumber ), it must always be closed. Declaration public static IDisposableGroup OpenInfo(this IActivityMonitor this, string text, CKTrait tags, int lineNumber = 0, string fileName = null) Parameters Type Name Description IActivityMonitor this This IActivityMonitor . String text The text to log. CKTrait tags The tags for this log. Int32 lineNumber Line number in the source file (automatically injected by C# compiler). String fileName Source file name of the emitter (automatically injected by C# compiler). Returns Type Description IDisposableGroup A disposable object that can be used to set a function that provides a conclusion text and/or close the group. | Improve this Doc View Source OpenInfo(IActivityMonitor, String, Exception, CKTrait, Int32, String) Opens a Info group with a text message associated to an exception and tags. Regardless of whether it will be emitted or not (this depends on ActualFilter , the global default DefaultFilter and may also depend on fileName and lineNumber ), it must always be closed. Declaration public static IDisposableGroup OpenInfo(this IActivityMonitor this, string text, Exception ex, CKTrait tags, int lineNumber = 0, string fileName = null) Parameters Type Name Description IActivityMonitor this This IActivityMonitor . String text The text to log. Exception ex The exception to log. CKTrait tags The tags for this log. Int32 lineNumber Line number in the source file (automatically injected by C# compiler). String fileName Source file name of the emitter (automatically injected by C# compiler). Returns Type Description IDisposableGroup A disposable object that can be used to set a function that provides a conclusion text and/or close the group. | Improve this Doc View Source OpenInfo(IActivityMonitor, String, Exception, Int32, String) Opens a Info group with a text message associated to an exception. Regardless of whether it will be emitted or not (this depends on ActualFilter , the global default DefaultFilter and may also depend on fileName and lineNumber ), it must always be closed. Declaration public static IDisposableGroup OpenInfo(this IActivityMonitor this, string text, Exception ex, int lineNumber = 0, string fileName = null) Parameters Type Name Description IActivityMonitor this This IActivityMonitor . String text The text to log. Exception ex The exception to log. Int32 lineNumber Line number in the source file (automatically injected by C# compiler). String fileName Source file name of the emitter (automatically injected by C# compiler). Returns Type Description IDisposableGroup A disposable object that can be used to set a function that provides a conclusion text and/or close the group. | Improve this Doc View Source OpenInfo(IActivityMonitor, String, Int32, String) Opens a Info group with a text message. Regardless of whether it will be emitted or not (this depends on ActualFilter , the global default DefaultFilter and may also depend on fileName and lineNumber ), it must always be closed. Declaration public static IDisposableGroup OpenInfo(this IActivityMonitor this, string text, int lineNumber = 0, string fileName = null) Parameters Type Name Description IActivityMonitor this This IActivityMonitor . String text The text to log. Int32 lineNumber Line number in the source file (automatically injected by C# compiler). String fileName Source file name of the emitter (automatically injected by C# compiler). Returns Type Description IDisposableGroup A disposable object that can be used to set a function that provides a conclusion text and/or close the group. | Improve this Doc View Source OpenTrace(IActivityMonitor, Exception, CKTrait, Int32, String) Opens a Trace group with an exception and tags. Regardless of whether it will be emitted or not (this depends on ActualFilter , the global default DefaultFilter and may also depend on fileName and lineNumber ), it must always be closed. Declaration public static IDisposableGroup OpenTrace(this IActivityMonitor this, Exception ex, CKTrait tags, int lineNumber = 0, string fileName = null) Parameters Type Name Description IActivityMonitor this This IActivityMonitor . Exception ex The exception to log. CKTrait tags The tags for this log. Int32 lineNumber Line number in the source file (automatically injected by C# compiler). String fileName Source file name of the emitter (automatically injected by C# compiler). Returns Type Description IDisposableGroup A disposable object that can be used to set a function that provides a conclusion text and/or close the group. | Improve this Doc View Source OpenTrace(IActivityMonitor, Exception, Int32, String) Opens a Trace group with an exception. Regardless of whether it will be emitted or not (this depends on ActualFilter , the global default DefaultFilter and may also depend on fileName and lineNumber ), it must always be closed. Declaration public static IDisposableGroup OpenTrace(this IActivityMonitor this, Exception ex, int lineNumber = 0, string fileName = null) Parameters Type Name Description IActivityMonitor this This IActivityMonitor . Exception ex The exception to log. Int32 lineNumber Line number in the source file (automatically injected by C# compiler). String fileName Source file name of the emitter (automatically injected by C# compiler). Returns Type Description IDisposableGroup A disposable object that can be used to set a function that provides a conclusion text and/or close the group. | Improve this Doc View Source OpenTrace(IActivityMonitor, Func<String>, CKTrait, Int32, String) Opens a Trace group with a text message built only if the group must be emitted and tags. Regardless of whether it will be emitted or not (this depends on ActualFilter , the global default DefaultFilter and may also depend on fileName and lineNumber ), it must always be closed. Declaration public static IDisposableGroup OpenTrace(this IActivityMonitor this, Func<string> text, CKTrait tags, int lineNumber = 0, string fileName = null) Parameters Type Name Description IActivityMonitor this This IActivityMonitor . Func < String > text A function (that will be called only if required) that returns the text to log. CKTrait tags The tags for this group. Int32 lineNumber Line number in the source file (automatically injected by C# compiler). String fileName Source file name of the emitter (automatically injected by C# compiler). Returns Type Description IDisposableGroup A disposable object that can be used to set a function that provides a conclusion text and/or close the group. | Improve this Doc View Source OpenTrace(IActivityMonitor, Func<String>, Exception, CKTrait, Int32, String) Opens a Trace group with a text message built only if the group must be emitted, an exception and tags. Regardless of whether it will be emitted or not (this depends on ActualFilter , the global default DefaultFilter and may also depend on fileName and lineNumber ), it must always be closed. Declaration public static IDisposableGroup OpenTrace(this IActivityMonitor this, Func<string> text, Exception ex, CKTrait tags, int lineNumber = 0, string fileName = null) Parameters Type Name Description IActivityMonitor this This IActivityMonitor . Func < String > text A function (that will be called only if required) that returns the text to log. Exception ex The exception to log. CKTrait tags The tags for this group. Int32 lineNumber Line number in the source file (automatically injected by C# compiler). String fileName Source file name of the emitter (automatically injected by C# compiler). Returns Type Description IDisposableGroup A disposable object that can be used to set a function that provides a conclusion text and/or close the group. | Improve this Doc View Source OpenTrace(IActivityMonitor, Func<String>, Exception, Int32, String) Opens a Trace group with a text message built only if the group must be emitted and an exception. Regardless of whether it will be emitted or not (this depends on ActualFilter , the global default DefaultFilter and may also depend on fileName and lineNumber ), it must always be closed. Declaration public static IDisposableGroup OpenTrace(this IActivityMonitor this, Func<string> text, Exception ex, int lineNumber = 0, string fileName = null) Parameters Type Name Description IActivityMonitor this This IActivityMonitor . Func < String > text A function (that will be called only if required) that returns the text to log. Exception ex The exception to log. Int32 lineNumber Line number in the source file (automatically injected by C# compiler). String fileName Source file name of the emitter (automatically injected by C# compiler). Returns Type Description IDisposableGroup A disposable object that can be used to set a function that provides a conclusion text and/or close the group. | Improve this Doc View Source OpenTrace(IActivityMonitor, Func<String>, Int32, String) Opens a Trace group with a text message built only if the group must be emitted. Regardless of whether it will be emitted or not (this depends on ActualFilter , the global default DefaultFilter and may also depend on fileName and lineNumber ), it must always be closed. Declaration public static IDisposableGroup OpenTrace(this IActivityMonitor this, Func<string> text, int lineNumber = 0, string fileName = null) Parameters Type Name Description IActivityMonitor this This IActivityMonitor . Func < String > text A function (that will be called only if required) that returns the text to log. Int32 lineNumber Line number in the source file (automatically injected by C# compiler). String fileName Source file name of the emitter (automatically injected by C# compiler). Returns Type Description IDisposableGroup A disposable object that can be used to set a function that provides a conclusion text and/or close the group. | Improve this Doc View Source OpenTrace(IActivityMonitor, String, CKTrait, Int32, String) Opens a Trace group with a text message and tags. Regardless of whether it will be emitted or not (this depends on ActualFilter , the global default DefaultFilter and may also depend on fileName and lineNumber ), it must always be closed. Declaration public static IDisposableGroup OpenTrace(this IActivityMonitor this, string text, CKTrait tags, int lineNumber = 0, string fileName = null) Parameters Type Name Description IActivityMonitor this This IActivityMonitor . String text The text to log. CKTrait tags The tags for this log. Int32 lineNumber Line number in the source file (automatically injected by C# compiler). String fileName Source file name of the emitter (automatically injected by C# compiler). Returns Type Description IDisposableGroup A disposable object that can be used to set a function that provides a conclusion text and/or close the group. | Improve this Doc View Source OpenTrace(IActivityMonitor, String, Exception, CKTrait, Int32, String) Opens a Trace group with a text message associated to an exception and tags. Regardless of whether it will be emitted or not (this depends on ActualFilter , the global default DefaultFilter and may also depend on fileName and lineNumber ), it must always be closed. Declaration public static IDisposableGroup OpenTrace(this IActivityMonitor this, string text, Exception ex, CKTrait tags, int lineNumber = 0, string fileName = null) Parameters Type Name Description IActivityMonitor this This IActivityMonitor . String text The text to log. Exception ex The exception to log. CKTrait tags The tags for this log. Int32 lineNumber Line number in the source file (automatically injected by C# compiler). String fileName Source file name of the emitter (automatically injected by C# compiler). Returns Type Description IDisposableGroup A disposable object that can be used to set a function that provides a conclusion text and/or close the group. | Improve this Doc View Source OpenTrace(IActivityMonitor, String, Exception, Int32, String) Opens a Trace group with a text message associated to an exception. Regardless of whether it will be emitted or not (this depends on ActualFilter , the global default DefaultFilter and may also depend on fileName and lineNumber ), it must always be closed. Declaration public static IDisposableGroup OpenTrace(this IActivityMonitor this, string text, Exception ex, int lineNumber = 0, string fileName = null) Parameters Type Name Description IActivityMonitor this This IActivityMonitor . String text The text to log. Exception ex The exception to log. Int32 lineNumber Line number in the source file (automatically injected by C# compiler). String fileName Source file name of the emitter (automatically injected by C# compiler). Returns Type Description IDisposableGroup A disposable object that can be used to set a function that provides a conclusion text and/or close the group. | Improve this Doc View Source OpenTrace(IActivityMonitor, String, Int32, String) Opens a Trace group with a text message. Regardless of whether it will be emitted or not (this depends on ActualFilter , the global default DefaultFilter and may also depend on fileName and lineNumber ), it must always be closed. Declaration public static IDisposableGroup OpenTrace(this IActivityMonitor this, string text, int lineNumber = 0, string fileName = null) Parameters Type Name Description IActivityMonitor this This IActivityMonitor . String text The text to log. Int32 lineNumber Line number in the source file (automatically injected by C# compiler). String fileName Source file name of the emitter (automatically injected by C# compiler). Returns Type Description IDisposableGroup A disposable object that can be used to set a function that provides a conclusion text and/or close the group. | Improve this Doc View Source OpenWarn(IActivityMonitor, Exception, CKTrait, Int32, String) Opens a Warn group with an exception and tags. Regardless of whether it will be emitted or not (this depends on ActualFilter , the global default DefaultFilter and may also depend on fileName and lineNumber ), it must always be closed. Declaration public static IDisposableGroup OpenWarn(this IActivityMonitor this, Exception ex, CKTrait tags, int lineNumber = 0, string fileName = null) Parameters Type Name Description IActivityMonitor this This IActivityMonitor . Exception ex The exception to log. CKTrait tags The tags for this log. Int32 lineNumber Line number in the source file (automatically injected by C# compiler). String fileName Source file name of the emitter (automatically injected by C# compiler). Returns Type Description IDisposableGroup A disposable object that can be used to set a function that provides a conclusion text and/or close the group. | Improve this Doc View Source OpenWarn(IActivityMonitor, Exception, Int32, String) Opens a Warn group with an exception. Regardless of whether it will be emitted or not (this depends on ActualFilter , the global default DefaultFilter and may also depend on fileName and lineNumber ), it must always be closed. Declaration public static IDisposableGroup OpenWarn(this IActivityMonitor this, Exception ex, int lineNumber = 0, string fileName = null) Parameters Type Name Description IActivityMonitor this This IActivityMonitor . Exception ex The exception to log. Int32 lineNumber Line number in the source file (automatically injected by C# compiler). String fileName Source file name of the emitter (automatically injected by C# compiler). Returns Type Description IDisposableGroup A disposable object that can be used to set a function that provides a conclusion text and/or close the group. | Improve this Doc View Source OpenWarn(IActivityMonitor, Func<String>, CKTrait, Int32, String) Opens a Warn group with a text message built only if the group must be emitted and tags. Regardless of whether it will be emitted or not (this depends on ActualFilter , the global default DefaultFilter and may also depend on fileName and lineNumber ), it must always be closed. Declaration public static IDisposableGroup OpenWarn(this IActivityMonitor this, Func<string> text, CKTrait tags, int lineNumber = 0, string fileName = null) Parameters Type Name Description IActivityMonitor this This IActivityMonitor . Func < String > text A function (that will be called only if required) that returns the text to log. CKTrait tags The tags for this group. Int32 lineNumber Line number in the source file (automatically injected by C# compiler). String fileName Source file name of the emitter (automatically injected by C# compiler). Returns Type Description IDisposableGroup A disposable object that can be used to set a function that provides a conclusion text and/or close the group. | Improve this Doc View Source OpenWarn(IActivityMonitor, Func<String>, Exception, CKTrait, Int32, String) Opens a Warn group with a text message built only if the group must be emitted, an exception and tags. Regardless of whether it will be emitted or not (this depends on ActualFilter , the global default DefaultFilter and may also depend on fileName and lineNumber ), it must always be closed. Declaration public static IDisposableGroup OpenWarn(this IActivityMonitor this, Func<string> text, Exception ex, CKTrait tags, int lineNumber = 0, string fileName = null) Parameters Type Name Description IActivityMonitor this This IActivityMonitor . Func < String > text A function (that will be called only if required) that returns the text to log. Exception ex The exception to log. CKTrait tags The tags for this group. Int32 lineNumber Line number in the source file (automatically injected by C# compiler). String fileName Source file name of the emitter (automatically injected by C# compiler). Returns Type Description IDisposableGroup A disposable object that can be used to set a function that provides a conclusion text and/or close the group. | Improve this Doc View Source OpenWarn(IActivityMonitor, Func<String>, Exception, Int32, String) Opens a Warn group with a text message built only if the group must be emitted and an exception. Regardless of whether it will be emitted or not (this depends on ActualFilter , the global default DefaultFilter and may also depend on fileName and lineNumber ), it must always be closed. Declaration public static IDisposableGroup OpenWarn(this IActivityMonitor this, Func<string> text, Exception ex, int lineNumber = 0, string fileName = null) Parameters Type Name Description IActivityMonitor this This IActivityMonitor . Func < String > text A function (that will be called only if required) that returns the text to log. Exception ex The exception to log. Int32 lineNumber Line number in the source file (automatically injected by C# compiler). String fileName Source file name of the emitter (automatically injected by C# compiler). Returns Type Description IDisposableGroup A disposable object that can be used to set a function that provides a conclusion text and/or close the group. | Improve this Doc View Source OpenWarn(IActivityMonitor, Func<String>, Int32, String) Opens a Warn group with a text message built only if the group must be emitted. Regardless of whether it will be emitted or not (this depends on ActualFilter , the global default DefaultFilter and may also depend on fileName and lineNumber ), it must always be closed. Declaration public static IDisposableGroup OpenWarn(this IActivityMonitor this, Func<string> text, int lineNumber = 0, string fileName = null) Parameters Type Name Description IActivityMonitor this This IActivityMonitor . Func < String > text A function (that will be called only if required) that returns the text to log. Int32 lineNumber Line number in the source file (automatically injected by C# compiler). String fileName Source file name of the emitter (automatically injected by C# compiler). Returns Type Description IDisposableGroup A disposable object that can be used to set a function that provides a conclusion text and/or close the group. | Improve this Doc View Source OpenWarn(IActivityMonitor, String, CKTrait, Int32, String) Opens a Warn group with a text message and tags. Regardless of whether it will be emitted or not (this depends on ActualFilter , the global default DefaultFilter and may also depend on fileName and lineNumber ), it must always be closed. Declaration public static IDisposableGroup OpenWarn(this IActivityMonitor this, string text, CKTrait tags, int lineNumber = 0, string fileName = null) Parameters Type Name Description IActivityMonitor this This IActivityMonitor . String text The text to log. CKTrait tags The tags for this log. Int32 lineNumber Line number in the source file (automatically injected by C# compiler). String fileName Source file name of the emitter (automatically injected by C# compiler). Returns Type Description IDisposableGroup A disposable object that can be used to set a function that provides a conclusion text and/or close the group. | Improve this Doc View Source OpenWarn(IActivityMonitor, String, Exception, CKTrait, Int32, String) Opens a Warn group with a text message associated to an exception and tags. Regardless of whether it will be emitted or not (this depends on ActualFilter , the global default DefaultFilter and may also depend on fileName and lineNumber ), it must always be closed. Declaration public static IDisposableGroup OpenWarn(this IActivityMonitor this, string text, Exception ex, CKTrait tags, int lineNumber = 0, string fileName = null) Parameters Type Name Description IActivityMonitor this This IActivityMonitor . String text The text to log. Exception ex The exception to log. CKTrait tags The tags for this log. Int32 lineNumber Line number in the source file (automatically injected by C# compiler). String fileName Source file name of the emitter (automatically injected by C# compiler). Returns Type Description IDisposableGroup A disposable object that can be used to set a function that provides a conclusion text and/or close the group. | Improve this Doc View Source OpenWarn(IActivityMonitor, String, Exception, Int32, String) Opens a Warn group with a text message associated to an exception. Regardless of whether it will be emitted or not (this depends on ActualFilter , the global default DefaultFilter and may also depend on fileName and lineNumber ), it must always be closed. Declaration public static IDisposableGroup OpenWarn(this IActivityMonitor this, string text, Exception ex, int lineNumber = 0, string fileName = null) Parameters Type Name Description IActivityMonitor this This IActivityMonitor . String text The text to log. Exception ex The exception to log. Int32 lineNumber Line number in the source file (automatically injected by C# compiler). String fileName Source file name of the emitter (automatically injected by C# compiler). Returns Type Description IDisposableGroup A disposable object that can be used to set a function that provides a conclusion text and/or close the group. | Improve this Doc View Source OpenWarn(IActivityMonitor, String, Int32, String) Opens a Warn group with a text message. Regardless of whether it will be emitted or not (this depends on ActualFilter , the global default DefaultFilter and may also depend on fileName and lineNumber ), it must always be closed. Declaration public static IDisposableGroup OpenWarn(this IActivityMonitor this, string text, int lineNumber = 0, string fileName = null) Parameters Type Name Description IActivityMonitor this This IActivityMonitor . String text The text to log. Int32 lineNumber Line number in the source file (automatically injected by C# compiler). String fileName Source file name of the emitter (automatically injected by C# compiler). Returns Type Description IDisposableGroup A disposable object that can be used to set a function that provides a conclusion text and/or close the group. | Improve this Doc View Source Trace(IActivityMonitor, Exception, CKTrait, Int32, String) Emits a Trace with an exception and tags if it must be emitted (this depends on ActualFilter , the global default DefaultFilter and may also depend on fileName and lineNumber ). Declaration public static void Trace(this IActivityMonitor this, Exception ex, CKTrait tags, int lineNumber = 0, string fileName = null) Parameters Type Name Description IActivityMonitor this This IActivityMonitor . Exception ex The exception to log. CKTrait tags The tags for this log. Int32 lineNumber Line number in the source file (automatically injected by C# compiler). String fileName Source file name of the emitter (automatically injected by C# compiler). | Improve this Doc View Source Trace(IActivityMonitor, Exception, Int32, String) Emits a Trace with an exception if it must be emitted (this depends on ActualFilter , the global default DefaultFilter and may also depend on fileName and lineNumber ). Declaration public static void Trace(this IActivityMonitor this, Exception ex, int lineNumber = 0, string fileName = null) Parameters Type Name Description IActivityMonitor this This IActivityMonitor . Exception ex The exception to log. Int32 lineNumber Line number in the source file (automatically injected by C# compiler). String fileName Source file name of the emitter (automatically injected by C# compiler). | Improve this Doc View Source Trace(IActivityMonitor, Func<String>, CKTrait, Int32, String) Generates and emits a Trace string and tags if it must be emitted (this depends on ActualFilter , the global default DefaultFilter and may also depend on fileName and lineNumber ). Declaration public static void Trace(this IActivityMonitor this, Func<string> text, CKTrait tags, int lineNumber = 0, string fileName = null) Parameters Type Name Description IActivityMonitor this This IActivityMonitor . Func < String > text A function (that will be called only if required) that returns the text to log. CKTrait tags The tags for this log. Int32 lineNumber Line number in the source file (automatically injected by C# compiler). String fileName Source file name of the emitter (automatically injected by C# compiler). | Improve this Doc View Source Trace(IActivityMonitor, Func<String>, Exception, CKTrait, Int32, String) Generates and emits a Trace string associated to an exception and tags if it must be emitted (this depends on ActualFilter , the global default DefaultFilter and may also depend on fileName and lineNumber ). Declaration public static void Trace(this IActivityMonitor this, Func<string> text, Exception ex, CKTrait tags, int lineNumber = 0, string fileName = null) Parameters Type Name Description IActivityMonitor this This IActivityMonitor . Func < String > text A function (that will be called only if required) that returns the text to log. Exception ex The exception to log. CKTrait tags The tags for this log. Int32 lineNumber Line number in the source file (automatically injected by C# compiler). String fileName Source file name of the emitter (automatically injected by C# compiler). | Improve this Doc View Source Trace(IActivityMonitor, Func<String>, Exception, Int32, String) Generates and emits a Trace string associated to an exception if it must be emitted (this depends on ActualFilter , the global default DefaultFilter and may also depend on fileName and lineNumber ). Declaration public static void Trace(this IActivityMonitor this, Func<string> text, Exception ex, int lineNumber = 0, string fileName = null) Parameters Type Name Description IActivityMonitor this This IActivityMonitor . Func < String > text A function (that will be called only if required) that returns the text to log. Exception ex The exception to log. Int32 lineNumber Line number in the source file (automatically injected by C# compiler). String fileName Source file name of the emitter (automatically injected by C# compiler). | Improve this Doc View Source Trace(IActivityMonitor, Func<String>, Int32, String) Generates and emits a Trace string if it must be emitted (this depends on ActualFilter , the global default DefaultFilter and may also depend on fileName and lineNumber ). Declaration public static void Trace(this IActivityMonitor this, Func<string> text, int lineNumber = 0, string fileName = null) Parameters Type Name Description IActivityMonitor this This IActivityMonitor . Func < String > text A function (that will be called only if required) that returns the text to log. Int32 lineNumber Line number in the source file (automatically injected by C# compiler). String fileName Source file name of the emitter (automatically injected by C# compiler). | Improve this Doc View Source Trace(IActivityMonitor, String, CKTrait, Int32, String) Emits a Trace string and tags if it must be emitted (this depends on ActualFilter , the global default DefaultFilter and may also depend on fileName and lineNumber ). Declaration public static void Trace(this IActivityMonitor this, string text, CKTrait tags, int lineNumber = 0, string fileName = null) Parameters Type Name Description IActivityMonitor this This IActivityMonitor . String text The text to log. CKTrait tags The tags for this log. Int32 lineNumber Line number in the source file (automatically injected by C# compiler). String fileName Source file name of the emitter (automatically injected by C# compiler). | Improve this Doc View Source Trace(IActivityMonitor, String, Exception, CKTrait, Int32, String) Emits a Trace string associated to an exception and tags if it must be emitted (this depends on ActualFilter , the global default DefaultFilter and may also depend on fileName and lineNumber ). Declaration public static void Trace(this IActivityMonitor this, string text, Exception ex, CKTrait tags, int lineNumber = 0, string fileName = null) Parameters Type Name Description IActivityMonitor this This IActivityMonitor . String text The text to log. Exception ex The exception to log. CKTrait tags The tags for this log. Int32 lineNumber Line number in the source file (automatically injected by C# compiler). String fileName Source file name of the emitter (automatically injected by C# compiler). | Improve this Doc View Source Trace(IActivityMonitor, String, Exception, Int32, String) Emits a Trace string associated to an exception if it must be emitted (this depends on ActualFilter , the global default DefaultFilter and may also depend on fileName and lineNumber ). Declaration public static void Trace(this IActivityMonitor this, string text, Exception ex, int lineNumber = 0, string fileName = null) Parameters Type Name Description IActivityMonitor this This IActivityMonitor . String text The text to log. Exception ex The exception to log. Int32 lineNumber Line number in the source file (automatically injected by C# compiler). String fileName Source file name of the emitter (automatically injected by C# compiler). | Improve this Doc View Source Trace(IActivityMonitor, String, Int32, String) Emits a Trace string if it must be emitted (this depends on ActualFilter , the global default DefaultFilter and may also depend on fileName and lineNumber ). Declaration public static void Trace(this IActivityMonitor this, string text, int lineNumber = 0, string fileName = null) Parameters Type Name Description IActivityMonitor this This IActivityMonitor . String text The text to log. Int32 lineNumber Line number in the source file (automatically injected by C# compiler). String fileName Source file name of the emitter (automatically injected by C# compiler). | Improve this Doc View Source Warn(IActivityMonitor, Exception, CKTrait, Int32, String) Emits a Warn with an exception and tags if it must be emitted (this depends on ActualFilter , the global default DefaultFilter and may also depend on fileName and lineNumber ). Declaration public static void Warn(this IActivityMonitor this, Exception ex, CKTrait tags, int lineNumber = 0, string fileName = null) Parameters Type Name Description IActivityMonitor this This IActivityMonitor . Exception ex The exception to log. CKTrait tags The tags for this log. Int32 lineNumber Line number in the source file (automatically injected by C# compiler). String fileName Source file name of the emitter (automatically injected by C# compiler). | Improve this Doc View Source Warn(IActivityMonitor, Exception, Int32, String) Emits a Warn with an exception if it must be emitted (this depends on ActualFilter , the global default DefaultFilter and may also depend on fileName and lineNumber ). Declaration public static void Warn(this IActivityMonitor this, Exception ex, int lineNumber = 0, string fileName = null) Parameters Type Name Description IActivityMonitor this This IActivityMonitor . Exception ex The exception to log. Int32 lineNumber Line number in the source file (automatically injected by C# compiler). String fileName Source file name of the emitter (automatically injected by C# compiler). | Improve this Doc View Source Warn(IActivityMonitor, Func<String>, CKTrait, Int32, String) Generates and emits a Warn string and tags if it must be emitted (this depends on ActualFilter , the global default DefaultFilter and may also depend on fileName and lineNumber ). Declaration public static void Warn(this IActivityMonitor this, Func<string> text, CKTrait tags, int lineNumber = 0, string fileName = null) Parameters Type Name Description IActivityMonitor this This IActivityMonitor . Func < String > text A function (that will be called only if required) that returns the text to log. CKTrait tags The tags for this log. Int32 lineNumber Line number in the source file (automatically injected by C# compiler). String fileName Source file name of the emitter (automatically injected by C# compiler). | Improve this Doc View Source Warn(IActivityMonitor, Func<String>, Exception, CKTrait, Int32, String) Generates and emits a Warn string associated to an exception and tags if it must be emitted (this depends on ActualFilter , the global default DefaultFilter and may also depend on fileName and lineNumber ). Declaration public static void Warn(this IActivityMonitor this, Func<string> text, Exception ex, CKTrait tags, int lineNumber = 0, string fileName = null) Parameters Type Name Description IActivityMonitor this This IActivityMonitor . Func < String > text A function (that will be called only if required) that returns the text to log. Exception ex The exception to log. CKTrait tags The tags for this log. Int32 lineNumber Line number in the source file (automatically injected by C# compiler). String fileName Source file name of the emitter (automatically injected by C# compiler). | Improve this Doc View Source Warn(IActivityMonitor, Func<String>, Exception, Int32, String) Generates and emits a Warn string associated to an exception if it must be emitted (this depends on ActualFilter , the global default DefaultFilter and may also depend on fileName and lineNumber ). Declaration public static void Warn(this IActivityMonitor this, Func<string> text, Exception ex, int lineNumber = 0, string fileName = null) Parameters Type Name Description IActivityMonitor this This IActivityMonitor . Func < String > text A function (that will be called only if required) that returns the text to log. Exception ex The exception to log. Int32 lineNumber Line number in the source file (automatically injected by C# compiler). String fileName Source file name of the emitter (automatically injected by C# compiler). | Improve this Doc View Source Warn(IActivityMonitor, Func<String>, Int32, String) Generates and emits a Warn string if it must be emitted (this depends on ActualFilter , the global default DefaultFilter and may also depend on fileName and lineNumber ). Declaration public static void Warn(this IActivityMonitor this, Func<string> text, int lineNumber = 0, string fileName = null) Parameters Type Name Description IActivityMonitor this This IActivityMonitor . Func < String > text A function (that will be called only if required) that returns the text to log. Int32 lineNumber Line number in the source file (automatically injected by C# compiler). String fileName Source file name of the emitter (automatically injected by C# compiler). | Improve this Doc View Source Warn(IActivityMonitor, String, CKTrait, Int32, String) Emits a Warn string and tags if it must be emitted (this depends on ActualFilter , the global default DefaultFilter and may also depend on fileName and lineNumber ). Declaration public static void Warn(this IActivityMonitor this, string text, CKTrait tags, int lineNumber = 0, string fileName = null) Parameters Type Name Description IActivityMonitor this This IActivityMonitor . String text The text to log. CKTrait tags The tags for this log. Int32 lineNumber Line number in the source file (automatically injected by C# compiler). String fileName Source file name of the emitter (automatically injected by C# compiler). | Improve this Doc View Source Warn(IActivityMonitor, String, Exception, CKTrait, Int32, String) Emits a Warn string associated to an exception and tags if it must be emitted (this depends on ActualFilter , the global default DefaultFilter and may also depend on fileName and lineNumber ). Declaration public static void Warn(this IActivityMonitor this, string text, Exception ex, CKTrait tags, int lineNumber = 0, string fileName = null) Parameters Type Name Description IActivityMonitor this This IActivityMonitor . String text The text to log. Exception ex The exception to log. CKTrait tags The tags for this log. Int32 lineNumber Line number in the source file (automatically injected by C# compiler). String fileName Source file name of the emitter (automatically injected by C# compiler). | Improve this Doc View Source Warn(IActivityMonitor, String, Exception, Int32, String) Emits a Warn string associated to an exception if it must be emitted (this depends on ActualFilter , the global default DefaultFilter and may also depend on fileName and lineNumber ). Declaration public static void Warn(this IActivityMonitor this, string text, Exception ex, int lineNumber = 0, string fileName = null) Parameters Type Name Description IActivityMonitor this This IActivityMonitor . String text The text to log. Exception ex The exception to log. Int32 lineNumber Line number in the source file (automatically injected by C# compiler). String fileName Source file name of the emitter (automatically injected by C# compiler). | Improve this Doc View Source Warn(IActivityMonitor, String, Int32, String) Emits a Warn string if it must be emitted (this depends on ActualFilter , the global default DefaultFilter and may also depend on fileName and lineNumber ). Declaration public static void Warn(this IActivityMonitor this, string text, int lineNumber = 0, string fileName = null) Parameters Type Name Description IActivityMonitor this This IActivityMonitor . String text The text to log. Int32 lineNumber Line number in the source file (automatically injected by C# compiler). String fileName Source file name of the emitter (automatically injected by C# compiler)."
  },
  "api/CK.Core.ActivityMonitor.SourceFilter.html": {
    "href": "api/CK.Core.ActivityMonitor.SourceFilter.html",
    "title": "Class ActivityMonitor.SourceFilter | CK-Text",
    "keywords": "Class ActivityMonitor.SourceFilter Manages source filtering. This default implementation ( DefaultFilter(ref String, ref Int32) ) handles file scope only. Inheritance Object ActivityMonitor.SourceFilter Inherited Members Object.ToString() Object.Equals(Object) Object.Equals(Object, Object) Object.ReferenceEquals(Object, Object) Object.GetHashCode() Object.GetType() Object.MemberwiseClone() Namespace : CK.Core Assembly : CK.ActivityMonitor.dll Syntax public static class SourceFilter Fields | Improve this Doc View Source FilterSource Holds a ActivityMonitor.SourceFilter.FilterSourceDelegate that can override filter configuration and/or alter source file name. It can be changed at any time and application is immediate. It is set by default to DefaultFilter(ref String, ref Int32) . Declaration public static ActivityMonitor.SourceFilter.FilterSourceDelegate FilterSource Field Value Type Description ActivityMonitor.SourceFilter.FilterSourceDelegate Methods | Improve this Doc View Source ClearAll() Clears all existing filters. Declaration public static void ClearAll() | Improve this Doc View Source ClearMinimals() Clears all existing Minimal filters. Declaration public static void ClearMinimals() | Improve this Doc View Source ClearOverrides() Clears all existing Override filters. Declaration public static void ClearOverrides() | Improve this Doc View Source DefaultFilter(ref String, ref Int32) Default filter, challenging file names added by SetFilter(SourceLogFilter, String) method. Declaration public static SourceLogFilter DefaultFilter(ref string fileName, ref int lineNumber) Parameters Type Name Description String fileName The file name. Int32 lineNumber The line number. Returns Type Description SourceLogFilter Defaults to Undefined . | Improve this Doc View Source SetFilter(SourceLogFilter, String) Sets a SourceLogFilter for a given file. Use Undefined to clear any existing configuration for the file. Declaration public static void SetFilter(SourceLogFilter filter, string fileName = null) Parameters Type Name Description SourceLogFilter filter The filter to set for the file. String fileName The file name: do not specify it to inject the path of your source file. | Improve this Doc View Source SetMinimalFilter(LogFilter, String) Sets a minimal LogFilter for a given file. Use Undefined to clear it. Declaration public static void SetMinimalFilter(LogFilter minimalFilter, string fileName = null) Parameters Type Name Description LogFilter minimalFilter The minimal filter to set for the file. String fileName The file name: do not specify it to inject the path of your source file. | Improve this Doc View Source SetOverrideFilter(LogFilter, String) Sets an override LogFilter for a given file: when not Undefined this takes precedence over ActualFilter . Use Undefined to clear it. Declaration public static void SetOverrideFilter(LogFilter overrideFilter, string fileName = null) Parameters Type Name Description LogFilter overrideFilter The override filter to set for the file. String fileName The file name: do not specify it to inject the path of your source file. | Improve this Doc View Source Update(Func<String, SourceLogFilter, SourceLogFilter>) Updates (or simply scans) all existing filters. Declaration public static void Update(Func<string, SourceLogFilter, SourceLogFilter> mapper) Parameters Type Name Description Func < String , SourceLogFilter , SourceLogFilter > mapper Function that takes the file name, the existing filter and maps it to a new filter. Remarks When the mapper returns Undefined , the file configuration is removed."
  },
  "api/CK.Core.ActivityMonitorBridgeTarget.html": {
    "href": "api/CK.Core.ActivityMonitorBridgeTarget.html",
    "title": "Class ActivityMonitorBridgeTarget | CK-Text",
    "keywords": "Class ActivityMonitorBridgeTarget This class used with ActivityMonitorBridge , enables IActivityMonitor to relay logs. Each activity monitor exposes such a bridge target on its output thanks to BridgeTarget . Inheritance Object ActivityMonitorBridgeTarget Inherited Members Object.ToString() Object.Equals(Object) Object.Equals(Object, Object) Object.ReferenceEquals(Object, Object) Object.GetHashCode() Object.GetType() Object.MemberwiseClone() Namespace : CK.Core Assembly : CK.ActivityMonitor.dll Syntax public sealed class ActivityMonitorBridgeTarget Constructors | Improve this Doc View Source ActivityMonitorBridgeTarget(IActivityMonitorImpl, Boolean) Initializes a new ActivityMonitorBridgeTarget bound to a IActivityMonitor . Declaration public ActivityMonitorBridgeTarget(IActivityMonitorImpl targetMonitor, bool honorMonitorFilter = true) Parameters Type Name Description IActivityMonitorImpl targetMonitor Monitor that will receive the logs. Boolean honorMonitorFilter False to ignore the actual filter ActualFilter value: logs coming from the bridge (ie. the remote Application Domain) will always be added to this target monitor. Properties | Improve this Doc View Source HonorMonitorFilter Gets or sets whether the ActualFilter of the target monitor should be honored or not. Defaults to true. Declaration public bool HonorMonitorFilter { get; set; } Property Value Type Description Boolean"
  },
  "api/CK.Core.ActivityMonitorGroupData.html": {
    "href": "api/CK.Core.ActivityMonitorGroupData.html",
    "title": "Class ActivityMonitorGroupData | CK-Text",
    "keywords": "Class ActivityMonitorGroupData Data required by UnfilteredOpenGroup(ActivityMonitorGroupData) . Inheritance Object ActivityMonitorLogData ActivityMonitorGroupData Inherited Members ActivityMonitorLogData.Level ActivityMonitorLogData.MaskedLevel ActivityMonitorLogData.FileName ActivityMonitorLogData.LineNumber ActivityMonitorLogData.IsFilteredLog ActivityMonitorLogData.Tags ActivityMonitorLogData.Text ActivityMonitorLogData.LogTime ActivityMonitorLogData.Exception ActivityMonitorLogData.ExceptionData ActivityMonitorLogData.EnsureExceptionData() ActivityMonitorLogData.IsTextTheExceptionMessage ActivityMonitorLogData.Initialize(String, Exception, CKTrait, DateTimeStamp) Object.ToString() Object.Equals(Object) Object.Equals(Object, Object) Object.ReferenceEquals(Object, Object) Object.GetHashCode() Object.GetType() Object.MemberwiseClone() Namespace : CK.Core Assembly : CK.ActivityMonitor.dll Syntax public class ActivityMonitorGroupData : ActivityMonitorLogData Constructors | Improve this Doc View Source ActivityMonitorGroupData() Initializes a mere new ActivityMonitorGroupData without any actual data. Should be used only for rejected opened group. Declaration public ActivityMonitorGroupData() | Improve this Doc View Source ActivityMonitorGroupData(LogLevel, CKTrait, String, DateTimeStamp, Exception, Func<String>, String, Int32) Initializes a new ActivityMonitorGroupData . Declaration public ActivityMonitorGroupData(LogLevel level, CKTrait tags, string text, DateTimeStamp logTime, Exception exception, Func<string> getConclusionText, string fileName, int lineNumber) Parameters Type Name Description LogLevel level Log level. Can not be None . CK.Core.CKTrait tags Tags (from ActivityMonitor.Tags ) to associate to the log. It will be union-ed with the current AutoTags . String text Text of the log. Can be null or empty only if exception is not null: the Message is the text. CK.Core.DateTimeStamp logTime Time of the log. You may use CK.Core.DateTimeStamp.UtcNow or NextLogTime(IActivityMonitor) extension method. Exception exception Exception of the log. Can be null. Func < String > getConclusionText Optional function that provides delayed obtention of the group conclusion: will be called on group closing. String fileName Name of the source file that emitted the log. Can be null. Int32 lineNumber Line number in the source file that emitted the log. | Improve this Doc View Source ActivityMonitorGroupData(LogLevel, String, Int32) Preinitializes a new ActivityMonitorLogData : Initialize(String, Exception, CKTrait, DateTimeStamp, Func<String>) has yet to be called. Declaration public ActivityMonitorGroupData(LogLevel level, string fileName, int lineNumber) Parameters Type Name Description LogLevel level Log level. Can not be None . String fileName Name of the source file that emitted the log. Can be null. Int32 lineNumber Line number in the source file that emitted the log. Methods | Improve this Doc View Source Initialize(String, Exception, CKTrait, DateTimeStamp, Func<String>) Initializes this group data. Declaration public void Initialize(string text, Exception exception, CKTrait tags, DateTimeStamp logTime, Func<string> getConclusionText) Parameters Type Name Description String text Text of the log. Can be null or empty only if exception is not null: the Message is the text. Exception exception Exception of the log. Can be null. CK.Core.CKTrait tags Tags (from ActivityMonitor.Tags ) to associate to the log. It will be union-ed with the current AutoTags . CK.Core.DateTimeStamp logTime Time of the log. You may use CK.Core.DateTimeStamp.UtcNow or NextLogTime(IActivityMonitor) extension method. Func < String > getConclusionText Optional function that provides delayed obtention of the group conclusion: will be called on group closing."
  },
  "api/CK.Core.IActivityMonitorClient.html": {
    "href": "api/CK.Core.IActivityMonitorClient.html",
    "title": "Interface IActivityMonitorClient | CK-Text",
    "keywords": "Interface IActivityMonitorClient Listener for IActivityMonitor registered in a IActivityMonitorOutput . Namespace : CK.Core Assembly : CK.ActivityMonitor.dll Syntax public interface IActivityMonitorClient Methods | Improve this Doc View Source OnAutoTagsChanged(CKTrait) Called when AutoTags changed. Declaration void OnAutoTagsChanged(CKTrait newTrait) Parameters Type Name Description CK.Core.CKTrait newTrait The new tags (never null but can be empty). | Improve this Doc View Source OnGroupClosed(IActivityLogGroup, IReadOnlyList<ActivityLogGroupConclusion>) Called when the group is actually closed. Declaration void OnGroupClosed(IActivityLogGroup group, IReadOnlyList<ActivityLogGroupConclusion> conclusions) Parameters Type Name Description IActivityLogGroup group The closed group. IReadOnlyList < ActivityLogGroupConclusion > conclusions Texts that conclude the group. Never null but can be empty. | Improve this Doc View Source OnGroupClosing(IActivityLogGroup, ref List<ActivityLogGroupConclusion>) Called once the user conclusions are known at the group level but before the group is actually closed: clients can update the conclusions for the group. Does nothing by default. Declaration void OnGroupClosing(IActivityLogGroup group, ref List<ActivityLogGroupConclusion> conclusions) Parameters Type Name Description IActivityLogGroup group The closing group. List < ActivityLogGroupConclusion > conclusions Mutable conclusions associated to the closing group. This can be null if no conclusions have been added yet. It is up to the first client that wants to add a conclusion to instantiate a new List object to carry the conclusions. | Improve this Doc View Source OnOpenGroup(IActivityLogGroup) Called for each UnfilteredOpenGroup(ActivityMonitorGroupData) . Declaration void OnOpenGroup(IActivityLogGroup group) Parameters Type Name Description IActivityLogGroup group The newly opened IActivityLogGroup . | Improve this Doc View Source OnTopicChanged(String, String, Int32) Called when a new Topic is set. Declaration void OnTopicChanged(string newTopic, string fileName, int lineNumber) Parameters Type Name Description String newTopic The new topic string (never null but can be empty). String fileName Source file name where SetTopic(String, String, Int32) has been called. Int32 lineNumber Source line number where IActivityMonitor.SetTopic has been called. | Improve this Doc View Source OnUnfilteredLog(ActivityMonitorLogData) Called for each UnfilteredLog(ActivityMonitorLogData) . The Exception is always null since exceptions are carried by groups. Declaration void OnUnfilteredLog(ActivityMonitorLogData data) Parameters Type Name Description ActivityMonitorLogData data Log data. Never null."
  },
  "api/CK.Core.IUniqueId.html": {
    "href": "api/CK.Core.IUniqueId.html",
    "title": "Interface IUniqueId | CK-Text",
    "keywords": "Interface IUniqueId Minimal interface that enables any type (specially reference type) to expose a Guid . Namespace : CK.Core Assembly : CK.ActivityMonitor.dll Syntax public interface IUniqueId Properties | Improve this Doc View Source UniqueId Gets the unique identifier associated to this object. Declaration Guid UniqueId { get; } Property Value Type Description Guid"
  },
  "api/CK.Core.SourceLogFilter.html": {
    "href": "api/CK.Core.SourceLogFilter.html",
    "title": "Struct SourceLogFilter | CK-Text",
    "keywords": "Struct SourceLogFilter Immutable encapsulation of the two source filters: this enables overriding or filtering per source file. Inherited Members ValueType.Equals(Object) ValueType.GetHashCode() ValueType.ToString() Object.Equals(Object, Object) Object.ReferenceEquals(Object, Object) Object.GetType() Namespace : CK.Core Assembly : CK.ActivityMonitor.dll Syntax public struct SourceLogFilter Constructors | Improve this Doc View Source SourceLogFilter(LogFilter, LogFilter) Initializes a new SourceLogFilter with a given filter for Override s and Minimal . Declaration public SourceLogFilter(LogFilter overrideFilter, LogFilter minimalFilter) Parameters Type Name Description LogFilter overrideFilter Overridden filter. LogFilter minimalFilter Minimal filter. Fields | Improve this Doc View Source Minimal The filter that when defined is combined with the ActualFilter . Declaration public readonly LogFilter Minimal Field Value Type Description LogFilter | Improve this Doc View Source Override The filter to be applied before challenging the ActualFilter . When not Undefined , the ActualFilter is ignored (as well as this Minimal ). Declaration public readonly LogFilter Override Field Value Type Description LogFilter | Improve this Doc View Source Undefined Undefined filter is Undefined for both Override and Minimal . This is the same as using the default constructor for this structure (it is exposed here for clarity). Declaration public static readonly SourceLogFilter Undefined Field Value Type Description SourceLogFilter Properties | Improve this Doc View Source IsUndefined Gets whether this is equal to Undefined . Declaration public bool IsUndefined { get; } Property Value Type Description Boolean Methods | Improve this Doc View Source Combine(SourceLogFilter) Combines this filter with another one. Override and Minimal level filters are combined with Combine(LogFilter) . Declaration public SourceLogFilter Combine(SourceLogFilter other) Parameters Type Name Description SourceLogFilter other The other filter to combine with this one. Returns Type Description SourceLogFilter The resulting filter."
  },
  "api/CK.Core.ActivityMonitor.SourceFilter.FilterSourceDelegate.html": {
    "href": "api/CK.Core.ActivityMonitor.SourceFilter.FilterSourceDelegate.html",
    "title": "Delegate ActivityMonitor.SourceFilter.FilterSourceDelegate | CK-Text",
    "keywords": "Delegate ActivityMonitor.SourceFilter.FilterSourceDelegate Delegate type that can be assigned to FilterSource static property to enable filter override based on the caller source location. Namespace : CK.Core Assembly : CK.ActivityMonitor.dll Syntax public delegate SourceLogFilter FilterSourceDelegate(ref string fileName, ref int lineNumber); Parameters Type Name Description String fileName FileName of the source file (that can be changed, typically by removing a common path prefix). Int32 lineNumber The line number in the source file. Returns Type Description SourceLogFilter The SourceLogFilter to apply. Must default to Undefined ."
  },
  "api/CK.Core.ActivityMonitorErrorCounter.State.html": {
    "href": "api/CK.Core.ActivityMonitorErrorCounter.State.html",
    "title": "Class ActivityMonitorErrorCounter.State | CK-Text",
    "keywords": "Class ActivityMonitorErrorCounter.State Encapsulates error information. The ToString() method displays the conclusion in a default text format. Inheritance Object ActivityMonitorErrorCounter.State Inherited Members Object.Equals(Object) Object.Equals(Object, Object) Object.ReferenceEquals(Object, Object) Object.GetHashCode() Object.GetType() Object.MemberwiseClone() Namespace : CK.Core Assembly : CK.ActivityMonitor.dll Syntax public class State Properties | Improve this Doc View Source ErrorCount Gets the current number of errors. Declaration public int ErrorCount { get; } Property Value Type Description Int32 | Improve this Doc View Source FatalCount Gets the current number of fatal errors. Declaration public int FatalCount { get; } Property Value Type Description Int32 | Improve this Doc View Source HasError Gets whether an error or a fatal occurred. Declaration public bool HasError { get; } Property Value Type Description Boolean | Improve this Doc View Source HasWarnOrError Gets whether a fatal, an error or a warn occurred. Declaration public bool HasWarnOrError { get; } Property Value Type Description Boolean | Improve this Doc View Source MaxLogLevel Gets the current maximum LogLevel . Declaration public LogLevel MaxLogLevel { get; } Property Value Type Description LogLevel | Improve this Doc View Source WarnCount Gets the current number of warnings. Declaration public int WarnCount { get; } Property Value Type Description Int32 Methods | Improve this Doc View Source ClearError() Resets FatalCount and ErrorCount . Declaration public void ClearError() | Improve this Doc View Source ClearWarn(Boolean) Resets current WarnCount , and optionnaly FatalCount and ErrorCount . Declaration public void ClearWarn(bool clearError = false) Parameters Type Name Description Boolean clearError | Improve this Doc View Source ToString() Gets the current message if HasWarnOrError is true, otherwise null. Declaration public override string ToString() Returns Type Description String Formatted message or null if no error nor warning occurred. Overrides Object.ToString()"
  },
  "api/CK.Core.ActivityMonitor.DependentToken.html": {
    "href": "api/CK.Core.ActivityMonitor.DependentToken.html",
    "title": "Class ActivityMonitor.DependentToken | CK-Text",
    "keywords": "Class ActivityMonitor.DependentToken Describes the origin of a dependent activity: it is created by DependentActivity(IActivityMonitor, String, Int32) (extension methods). Inheritance Object ActivityMonitor.DependentToken Inherited Members Object.Equals(Object) Object.Equals(Object, Object) Object.ReferenceEquals(Object, Object) Object.GetHashCode() Object.GetType() Object.MemberwiseClone() Namespace : CK.Core Assembly : CK.ActivityMonitor.dll Syntax [Serializable] public class DependentToken Properties | Improve this Doc View Source CreationDate Gets the creation date. This is the log time of the unfiltered Info log that has been emitted in the originator monitor. Declaration public DateTimeStamp CreationDate { get; } Property Value Type Description CK.Core.DateTimeStamp | Improve this Doc View Source OriginatorId Unique identifier of the activity that created this dependent token. Declaration public Guid OriginatorId { get; } Property Value Type Description Guid | Improve this Doc View Source Topic Gets the topic that must be set on the dependent activity. When null, the current Topic of the dependent monitor is not changed. Declaration public string Topic { get; } Property Value Type Description String Methods | Improve this Doc View Source Parse(String) Parses a ToString() string or throws a FormatException on error. Declaration public static ActivityMonitor.DependentToken Parse(string s) Parameters Type Name Description String s The string to parse. Returns Type Description ActivityMonitor.DependentToken The resulting dependent token. | Improve this Doc View Source ToString() Overridden to give a readable description of this token that can be Parse(String) d (or TryParse(String, out ActivityMonitor.DependentToken) ) back: The format is \"{ OriginatorId } at CreationDate (with topic '...'|without topic).\". Declaration public override string ToString() Returns Type Description String A readable string. Overrides Object.ToString() | Improve this Doc View Source TryParse(String, out ActivityMonitor.DependentToken) Tries to parse a ToString() string. Declaration public static bool TryParse(string s, out ActivityMonitor.DependentToken t) Parameters Type Name Description String s The string to parse. ActivityMonitor.DependentToken t The resulting dependent token. Returns Type Description Boolean True on success, false otherwise. | Improve this Doc View Source TryParseLaunchOrCreateMessage(String, out Boolean, out Boolean, out String) Tries to parse a launch or create message. Declaration public static bool TryParseLaunchOrCreateMessage(string message, out bool launched, out bool withTopic, out string dependentTopic) Parameters Type Name Description String message The message to parse. Boolean launched True if the activity has been launched or the token has only be created. Boolean withTopic True if an explicit topic has been associated to the dependent activity. String dependentTopic When withTopic is true, this contains the explicitly set topic. Returns Type Description Boolean True on success. | Improve this Doc View Source TryParseStartMessage(String, out Guid, out DateTimeStamp) Attempts to parse the start message of a dependent activity (tagged with StartDependentActivity ). Declaration public static bool TryParseStartMessage(string startMessage, out Guid id, out DateTimeStamp time) Parameters Type Name Description String startMessage The start message to parse. Guid id The originator monitor identifier. CK.Core.DateTimeStamp time The creation time of the dependent activity. Returns Type Description Boolean True on success."
  },
  "api/CK.Core.ActivityMonitorConsoleClient.html": {
    "href": "api/CK.Core.ActivityMonitorConsoleClient.html",
    "title": "Class ActivityMonitorConsoleClient | CK-Text",
    "keywords": "Class ActivityMonitorConsoleClient Displays the activity to the console. Inheritance Object ActivityMonitorTextHelperClient ActivityMonitorTextWriterClient ActivityMonitorConsoleClient Inherited Members ActivityMonitorTextWriterClient.OnEnterLevel(ActivityMonitorLogData) ActivityMonitorTextWriterClient.OnContinueOnSameLevel(ActivityMonitorLogData) ActivityMonitorTextWriterClient.OnLeaveLevel(LogLevel) ActivityMonitorTextWriterClient.OnGroupOpen(IActivityLogGroup) ActivityMonitorTextWriterClient.OnGroupClose(IActivityLogGroup, IReadOnlyList<ActivityLogGroupConclusion>) ActivityMonitorTextWriterClient.DumpException(StringBuilder, String, Boolean, Exception) ActivityMonitorTextHelperClient.IActivityMonitorClient.OnUnfilteredLog(ActivityMonitorLogData) ActivityMonitorTextHelperClient.IActivityMonitorClient.OnOpenGroup(IActivityLogGroup) ActivityMonitorTextHelperClient.IActivityMonitorClient.OnGroupClosing(IActivityLogGroup, List<ActivityLogGroupConclusion>) ActivityMonitorTextHelperClient.IActivityMonitorClient.OnGroupClosed(IActivityLogGroup, IReadOnlyList<ActivityLogGroupConclusion>) ActivityMonitorTextHelperClient.IActivityMonitorClient.OnTopicChanged(String, String, Int32) ActivityMonitorTextHelperClient.IActivityMonitorClient.OnAutoTagsChanged(CKTrait) ActivityMonitorTextHelperClient.Filter ActivityMonitorTextHelperClient.IActivityMonitorBoundClient.MinimalFilter ActivityMonitorTextHelperClient.IActivityMonitorBoundClient.SetMonitor(IActivityMonitorImpl, Boolean) ActivityMonitorTextHelperClient.IActivityMonitorBoundClient.IsDead Object.ToString() Object.Equals(Object) Object.Equals(Object, Object) Object.ReferenceEquals(Object, Object) Object.GetHashCode() Object.GetType() Object.MemberwiseClone() Namespace : CK.Core Assembly : CK.ActivityMonitor.dll Syntax public class ActivityMonitorConsoleClient : ActivityMonitorTextWriterClient, IActivityMonitorBoundClient, IActivityMonitorClient Constructors | Improve this Doc View Source ActivityMonitorConsoleClient() Initializes a new ActivityMonitorConsoleClient . Declaration public ActivityMonitorConsoleClient()"
  },
  "api/CK.Core.ActivityMonitorLogData.html": {
    "href": "api/CK.Core.ActivityMonitorLogData.html",
    "title": "Class ActivityMonitorLogData | CK-Text",
    "keywords": "Class ActivityMonitorLogData Data required by UnfilteredLog(ActivityMonitorLogData) . This is also the base class for ActivityMonitorGroupData . Inheritance Object ActivityMonitorLogData ActivityMonitorGroupData Inherited Members Object.ToString() Object.Equals(Object) Object.Equals(Object, Object) Object.ReferenceEquals(Object, Object) Object.GetHashCode() Object.GetType() Object.MemberwiseClone() Namespace : CK.Core Assembly : CK.ActivityMonitor.dll Syntax public class ActivityMonitorLogData Constructors | Improve this Doc View Source ActivityMonitorLogData(LogLevel, Exception, CKTrait, String, DateTimeStamp, String, Int32) Initializes a new ActivityMonitorLogData . Declaration public ActivityMonitorLogData(LogLevel level, Exception exception, CKTrait tags, string text, DateTimeStamp logTime, string fileName, int lineNumber) Parameters Type Name Description LogLevel level Log level. Can not be None . Exception exception Exception of the log. Can be null. CK.Core.CKTrait tags Tags (from ActivityMonitor.Tags ) to associate to the log. It will be union-ed with the current AutoTags . String text Text of the log. Can be null or empty only if exception is not null: the Exception.Message is the text. CK.Core.DateTimeStamp logTime Time of the log. You can use CK.Core.DateTimeStamp.UtcNow or NextLogTime(IActivityMonitor) extension method. String fileName Name of the source file that emitted the log. Can be null. Int32 lineNumber Line number in the source file that emitted the log. | Improve this Doc View Source ActivityMonitorLogData(LogLevel, String, Int32) Preinitializes a new ActivityMonitorLogData : Initialize(String, Exception, CKTrait, DateTimeStamp) has yet to be called. Declaration public ActivityMonitorLogData(LogLevel level, string fileName, int lineNumber) Parameters Type Name Description LogLevel level Log level. Can be None (the log will be ignored). String fileName Name of the source file that emitted the log. Can be null. Int32 lineNumber Line number in the source file that emitted the log. Fields | Improve this Doc View Source FileName Name of the source file that emitted the log. Can be null. Declaration public readonly string FileName Field Value Type Description String | Improve this Doc View Source Level Log level. Can not be None . If the log has been successfully filtered, the IsFiltered bit flag is set. Declaration public readonly LogLevel Level Field Value Type Description LogLevel | Improve this Doc View Source LineNumber Line number in the source file that emitted the log. Can be null. Declaration public readonly int LineNumber Field Value Type Description Int32 | Improve this Doc View Source MaskedLevel The actual level ( Trace to Fatal ) associated to this group without IsFiltered bit flag. Declaration public readonly LogLevel MaskedLevel Field Value Type Description LogLevel Properties | Improve this Doc View Source Exception Exception of the log. Can be null. Declaration public Exception Exception { get; } Property Value Type Description Exception | Improve this Doc View Source ExceptionData Gets the CK.Core.CKExceptionData that captures exception information if it exists. Returns null if no Exception exists. Declaration public CKExceptionData ExceptionData { get; } Property Value Type Description CK.Core.CKExceptionData | Improve this Doc View Source IsFilteredLog Gets whether this log data has been successfully filtered (otherwise it is an unfiltered log). Declaration public bool IsFilteredLog { get; } Property Value Type Description Boolean | Improve this Doc View Source IsTextTheExceptionMessage Gets whether the Text is actually the Exception message. Declaration public bool IsTextTheExceptionMessage { get; } Property Value Type Description Boolean | Improve this Doc View Source LogTime Gets the time of the log. Declaration public DateTimeStamp LogTime { get; } Property Value Type Description CK.Core.DateTimeStamp | Improve this Doc View Source Tags Tags (from ActivityMonitor.Tags ) associated to the log. It will be union-ed with the current AutoTags . Declaration public CKTrait Tags { get; } Property Value Type Description CK.Core.CKTrait | Improve this Doc View Source Text Text of the log. Can not be null. Declaration public string Text { get; } Property Value Type Description String Methods | Improve this Doc View Source EnsureExceptionData() Gets or creates the CK.Core.CKExceptionData that captures exception information. If Exception is null, this returns null. Declaration public CKExceptionData EnsureExceptionData() Returns Type Description CK.Core.CKExceptionData A data representation of the exception or null. | Improve this Doc View Source Initialize(String, Exception, CKTrait, DateTimeStamp) Initializes this data. Declaration public void Initialize(string text, Exception exception, CKTrait tags, DateTimeStamp logTime) Parameters Type Name Description String text Text of the log. Can be null or empty: if exception is not null, the Message becomes the text otherwise NoLogText is used. Exception exception Exception of the log. Can be null. CK.Core.CKTrait tags Tags (from ActivityMonitor.Tags ) to associate to the log. It will be union-ed with the current AutoTags . CK.Core.DateTimeStamp logTime Time of the log. You can use CK.Core.DateTimeStamp.UtcNow or NextLogTime(IActivityMonitor) extension method."
  },
  "api/CK.Core.ActivityMonitorTextHelperClient.html": {
    "href": "api/CK.Core.ActivityMonitorTextHelperClient.html",
    "title": "Class ActivityMonitorTextHelperClient | CK-Text",
    "keywords": "Class ActivityMonitorTextHelperClient Base class for IActivityMonitorClient that tracks groups and level changes in order to ease text-based renderer. Inheritance Object ActivityMonitorTextHelperClient ActivityMonitorTextWriterClient Inherited Members Object.ToString() Object.Equals(Object) Object.Equals(Object, Object) Object.ReferenceEquals(Object, Object) Object.GetHashCode() Object.GetType() Object.MemberwiseClone() Namespace : CK.Core Assembly : CK.ActivityMonitor.dll Syntax public abstract class ActivityMonitorTextHelperClient : IActivityMonitorBoundClient, IActivityMonitorClient Constructors | Improve this Doc View Source ActivityMonitorTextHelperClient() Initialize a new ActivityMonitorTextHelperClient . Declaration protected ActivityMonitorTextHelperClient() | Improve this Doc View Source ActivityMonitorTextHelperClient(LogFilter) Initialize a new ActivityMonitorTextHelperClient with a filter. Declaration protected ActivityMonitorTextHelperClient(LogFilter filter) Parameters Type Name Description LogFilter filter Properties | Improve this Doc View Source Filter Gets or sets the filter for this client. Declaration public LogFilter Filter { get; set; } Property Value Type Description LogFilter Methods | Improve this Doc View Source OnContinueOnSameLevel(ActivityMonitorLogData) Called for text with the same LogLevel as the previous ones. Declaration protected abstract void OnContinueOnSameLevel(ActivityMonitorLogData data) Parameters Type Name Description ActivityMonitorLogData data Log data. | Improve this Doc View Source OnEnterLevel(ActivityMonitorLogData) Called for the first text of a LogLevel . Declaration protected abstract void OnEnterLevel(ActivityMonitorLogData data) Parameters Type Name Description ActivityMonitorLogData data Log data. | Improve this Doc View Source OnGroupClose(IActivityLogGroup, IReadOnlyList<ActivityLogGroupConclusion>) Called when the group is actually closed. Declaration protected abstract void OnGroupClose(IActivityLogGroup group, IReadOnlyList<ActivityLogGroupConclusion> conclusions) Parameters Type Name Description IActivityLogGroup group The closing group. IReadOnlyList < ActivityLogGroupConclusion > conclusions Texts that concludes the group. Never null but can be empty. | Improve this Doc View Source OnGroupOpen(IActivityLogGroup) Called whenever a group is opened. Declaration protected abstract void OnGroupOpen(IActivityLogGroup group) Parameters Type Name Description IActivityLogGroup group The newly opened group. | Improve this Doc View Source OnLeaveLevel(LogLevel) Called when current log level changes. Declaration protected abstract void OnLeaveLevel(LogLevel level) Parameters Type Name Description LogLevel level The previous log level (without IsFiltered ). Explicit Interface Implementations | Improve this Doc View Source IActivityMonitorBoundClient.IsDead Declaration bool IActivityMonitorBoundClient.IsDead { get; } Returns Type Description Boolean Implements IActivityMonitorBoundClient.IsDead | Improve this Doc View Source IActivityMonitorBoundClient.MinimalFilter Declaration LogFilter IActivityMonitorBoundClient.MinimalFilter { get; } Returns Type Description LogFilter Implements IActivityMonitorBoundClient.MinimalFilter | Improve this Doc View Source IActivityMonitorBoundClient.SetMonitor(IActivityMonitorImpl, Boolean) Declaration void IActivityMonitorBoundClient.SetMonitor(IActivityMonitorImpl source, bool forceBuggyRemove) Parameters Type Name Description IActivityMonitorImpl source Boolean forceBuggyRemove Implements IActivityMonitorBoundClient.SetMonitor(IActivityMonitorImpl, Boolean) | Improve this Doc View Source IActivityMonitorClient.OnAutoTagsChanged(CKTrait) Declaration void IActivityMonitorClient.OnAutoTagsChanged(CKTrait newTrait) Parameters Type Name Description CK.Core.CKTrait newTrait Implements IActivityMonitorClient.OnAutoTagsChanged(CKTrait) | Improve this Doc View Source IActivityMonitorClient.OnGroupClosed(IActivityLogGroup, IReadOnlyList<ActivityLogGroupConclusion>) Declaration void IActivityMonitorClient.OnGroupClosed(IActivityLogGroup group, IReadOnlyList<ActivityLogGroupConclusion> conclusions) Parameters Type Name Description IActivityLogGroup group IReadOnlyList < ActivityLogGroupConclusion > conclusions Implements IActivityMonitorClient.OnGroupClosed(IActivityLogGroup, IReadOnlyList<ActivityLogGroupConclusion>) | Improve this Doc View Source IActivityMonitorClient.OnGroupClosing(IActivityLogGroup, ref List<ActivityLogGroupConclusion>) Declaration void IActivityMonitorClient.OnGroupClosing(IActivityLogGroup group, ref List<ActivityLogGroupConclusion> conclusions) Parameters Type Name Description IActivityLogGroup group List < ActivityLogGroupConclusion > conclusions Implements IActivityMonitorClient.OnGroupClosing(IActivityLogGroup, ref List<ActivityLogGroupConclusion>) | Improve this Doc View Source IActivityMonitorClient.OnOpenGroup(IActivityLogGroup) Declaration void IActivityMonitorClient.OnOpenGroup(IActivityLogGroup group) Parameters Type Name Description IActivityLogGroup group Implements IActivityMonitorClient.OnOpenGroup(IActivityLogGroup) | Improve this Doc View Source IActivityMonitorClient.OnTopicChanged(String, String, Int32) Declaration void IActivityMonitorClient.OnTopicChanged(string newTopic, string fileName, int lineNumber) Parameters Type Name Description String newTopic String fileName Int32 lineNumber Implements IActivityMonitorClient.OnTopicChanged(String, String, Int32) | Improve this Doc View Source IActivityMonitorClient.OnUnfilteredLog(ActivityMonitorLogData) Declaration void IActivityMonitorClient.OnUnfilteredLog(ActivityMonitorLogData data) Parameters Type Name Description ActivityMonitorLogData data Implements IActivityMonitorClient.OnUnfilteredLog(ActivityMonitorLogData)"
  },
  "api/CK.Core.IActivityMonitorLineSender.html": {
    "href": "api/CK.Core.IActivityMonitorLineSender.html",
    "title": "Interface IActivityMonitorLineSender | CK-Text",
    "keywords": "Interface IActivityMonitorLineSender The interface that carries Send extension methods. Namespace : CK.Core Assembly : CK.ActivityMonitor.StandardSender.dll Syntax public interface IActivityMonitorLineSender Properties | Improve this Doc View Source IsRejected Gets whether the log has been rejected. Declaration bool IsRejected { get; } Property Value Type Description Boolean Extension Methods ActivityMonitorSendExtension.Send(IActivityMonitorLineSender, String) ActivityMonitorSendExtension.Send(IActivityMonitorLineSender, String, Object) ActivityMonitorSendExtension.Send(IActivityMonitorLineSender, String, Object, Object) ActivityMonitorSendExtension.Send(IActivityMonitorLineSender, String, Object, Object, Object) ActivityMonitorSendExtension.Send(IActivityMonitorLineSender, String, Object[]) ActivityMonitorSendExtension.Send(IActivityMonitorLineSender, Func<String>) ActivityMonitorSendExtension.Send<T>(IActivityMonitorLineSender, Func<T, String>, T) ActivityMonitorSendExtension.Send<T1, T2>(IActivityMonitorLineSender, Func<T1, T2, String>, T1, T2) ActivityMonitorSendExtension.Send<T1, T2, T3>(IActivityMonitorLineSender, Func<T1, T2, T3, String>, T1, T2, T3) ActivityMonitorSendExtension.Send(IActivityMonitorLineSender, CKTrait, String) ActivityMonitorSendExtension.Send(IActivityMonitorLineSender, CKTrait, String, Object) ActivityMonitorSendExtension.Send(IActivityMonitorLineSender, CKTrait, String, Object, Object) ActivityMonitorSendExtension.Send(IActivityMonitorLineSender, CKTrait, String, Object, Object, Object) ActivityMonitorSendExtension.Send(IActivityMonitorLineSender, CKTrait, String, Object[]) ActivityMonitorSendExtension.Send(IActivityMonitorLineSender, CKTrait, Func<String>) ActivityMonitorSendExtension.Send<T>(IActivityMonitorLineSender, CKTrait, Func<T, String>, T) ActivityMonitorSendExtension.Send<T1, T2>(IActivityMonitorLineSender, CKTrait, Func<T1, T2, String>, T1, T2) ActivityMonitorSendExtension.Send<T1, T2, T3>(IActivityMonitorLineSender, CKTrait, Func<T1, T2, T3, String>, T1, T2, T3) ActivityMonitorSendExtension.Send(IActivityMonitorLineSender, Exception) ActivityMonitorSendExtension.Send(IActivityMonitorLineSender, Exception, String) ActivityMonitorSendExtension.Send(IActivityMonitorLineSender, Exception, String, Object) ActivityMonitorSendExtension.Send(IActivityMonitorLineSender, Exception, String, Object, Object) ActivityMonitorSendExtension.Send(IActivityMonitorLineSender, Exception, String, Object, Object, Object) ActivityMonitorSendExtension.Send(IActivityMonitorLineSender, Exception, String, Object[]) ActivityMonitorSendExtension.Send(IActivityMonitorLineSender, Exception, Func<String>) ActivityMonitorSendExtension.Send<T>(IActivityMonitorLineSender, Exception, Func<T, String>, T) ActivityMonitorSendExtension.Send<T1, T2>(IActivityMonitorLineSender, Exception, Func<T1, T2, String>, T1, T2) ActivityMonitorSendExtension.Send<T1, T2, T3>(IActivityMonitorLineSender, Exception, Func<T1, T2, T3, String>, T1, T2, T3) ActivityMonitorSendExtension.Send(IActivityMonitorLineSender, Exception, CKTrait) ActivityMonitorSendExtension.Send(IActivityMonitorLineSender, Exception, CKTrait, String) ActivityMonitorSendExtension.Send(IActivityMonitorLineSender, Exception, CKTrait, String, Object) ActivityMonitorSendExtension.Send(IActivityMonitorLineSender, Exception, CKTrait, String, Object, Object) ActivityMonitorSendExtension.Send(IActivityMonitorLineSender, Exception, CKTrait, String, Object, Object, Object) ActivityMonitorSendExtension.Send(IActivityMonitorLineSender, Exception, CKTrait, String, Object[]) ActivityMonitorSendExtension.Send(IActivityMonitorLineSender, Exception, CKTrait, Func<String>) ActivityMonitorSendExtension.Send<T>(IActivityMonitorLineSender, Exception, CKTrait, Func<T, String>, T) ActivityMonitorSendExtension.Send<T1, T2>(IActivityMonitorLineSender, Exception, CKTrait, Func<T1, T2, String>, T1, T2) ActivityMonitorSendExtension.Send<T1, T2, T3>(IActivityMonitorLineSender, Exception, CKTrait, Func<T1, T2, T3, String>, T1, T2, T3)"
  },
  "api/CK.Core.SystemActivityMonitor.LowLevelErrorEventArgs.html": {
    "href": "api/CK.Core.SystemActivityMonitor.LowLevelErrorEventArgs.html",
    "title": "Class SystemActivityMonitor.LowLevelErrorEventArgs | CK-Text",
    "keywords": "Class SystemActivityMonitor.LowLevelErrorEventArgs Defines the event argument of OnError . Inheritance Object EventArgs SystemActivityMonitor.LowLevelErrorEventArgs Inherited Members EventArgs.Empty Object.ToString() Object.Equals(Object) Object.Equals(Object, Object) Object.ReferenceEquals(Object, Object) Object.GetHashCode() Object.GetType() Object.MemberwiseClone() Namespace : CK.Core Assembly : CK.ActivityMonitor.dll Syntax public sealed class LowLevelErrorEventArgs : EventArgs Fields | Improve this Doc View Source ErrorMessage The error message. Never null nor empty. Declaration public readonly string ErrorMessage Field Value Type Description String | Improve this Doc View Source ErrorWhileWritingLogFile Exception raised while attempting to create the error file. This could be used to handle configuration error: an exception here means that something is going really wrong. Declaration public readonly Exception ErrorWhileWritingLogFile Field Value Type Description Exception | Improve this Doc View Source FullLogFilePath Not null if the ErrorMessage has been successfully written (if RootLogPath is set). Contains the full path of the log file. Declaration public readonly string FullLogFilePath Field Value Type Description String"
  },
  "api/CK.Core.Impl.IActivityMonitorImpl.html": {
    "href": "api/CK.Core.Impl.IActivityMonitorImpl.html",
    "title": "Interface IActivityMonitorImpl | CK-Text",
    "keywords": "Interface IActivityMonitorImpl Defines required aspects that an actual monitor implementation must support. Inherited Members IActivityMonitor.AutoTags IActivityMonitor.MinimalFilter IActivityMonitor.ActualFilter IActivityMonitor.Topic IActivityMonitor.SetTopic(String, String, Int32) IActivityMonitor.UnfilteredLog(ActivityMonitorLogData) IActivityMonitor.UnfilteredOpenGroup(ActivityMonitorGroupData) IActivityMonitor.CloseGroup(DateTimeStamp, Object) IActivityMonitor.Output IActivityMonitor.LastLogTime IUniqueId.UniqueId Namespace : CK.Core.Impl Assembly : CK.ActivityMonitor.dll Syntax public interface IActivityMonitorImpl : IActivityMonitor, IUniqueId Properties | Improve this Doc View Source CurrentGroup Gets the currently opened group. Null when no group is currently opened. Declaration IActivityLogGroup CurrentGroup { get; } Property Value Type Description IActivityLogGroup Methods | Improve this Doc View Source InitializeTopicAndAutoTags(String, CKTrait, String, Int32) Enables IActivityMonitorBoundClient clients to initialize Topic and AutoTag typically from inside their SetMonitor(IActivityMonitorImpl, Boolean) method or any other methods provided that a reentrant and concurrent lock has been obtained (otherwise an InvalidOperationException is thrown). Declaration void InitializeTopicAndAutoTags(string newTopic, CKTrait newTags, string fileName = null, int lineNumber = 0) Parameters Type Name Description String newTopic New topic to set. When null, it is ignored. CK.Core.CKTrait newTags new tags to set. When null, it is ignored. String fileName Source file name of the caller. Do not set it: the attribute will do the job. Int32 lineNumber Line number in the source file. Do not set it: the attribute will do the job. | Improve this Doc View Source OnClientMinimalFilterChanged(LogFilter, LogFilter) Enables a IActivityMonitorBoundClient to warn its Monitor whenever its MinimalFilter changed. This can be called from any IActivityMonitorBoundClient methods (when a ReentrancyAndConcurrencyLock() has been acquired) or not, but NOT concurrently: SignalChange() must be used to signal a change on any thread at any time. Declaration void OnClientMinimalFilterChanged(LogFilter oldLevel, LogFilter newLevel) Parameters Type Name Description LogFilter oldLevel The previous minimal level that the client expected. LogFilter newLevel The new minimal level that the client expects. | Improve this Doc View Source ReentrancyAndConcurrencyLock() Gets a disposable object that checks for reentrant and concurrent calls. Declaration IDisposable ReentrancyAndConcurrencyLock() Returns Type Description IDisposable A disposable object (that must be disposed). | Improve this Doc View Source SignalChange() Signals the monitor that one IsDead is true or a MinimalFilter has changed: the ActualFilter is marked as needing a re computation in a thread-safe manner. This can be called by bound clients on any thread at any time as opposed to OnClientMinimalFilterChanged(LogFilter, LogFilter) that can only be called non-concurrently (typically from inside client methods). Declaration void SignalChange() Extension Methods ActivityMonitorSimpleSenderExtension.OpenDebug(IActivityMonitor, Exception, Int32, String) ActivityMonitorSimpleSenderExtension.OpenDebug(IActivityMonitor, String, Int32, String) ActivityMonitorSimpleSenderExtension.OpenDebug(IActivityMonitor, String, Exception, Int32, String) ActivityMonitorSimpleSenderExtension.OpenDebug(IActivityMonitor, Func<String>, Int32, String) ActivityMonitorSimpleSenderExtension.OpenDebug(IActivityMonitor, Func<String>, Exception, Int32, String) ActivityMonitorSimpleSenderExtension.OpenDebug(IActivityMonitor, Exception, CKTrait, Int32, String) ActivityMonitorSimpleSenderExtension.OpenDebug(IActivityMonitor, String, CKTrait, Int32, String) ActivityMonitorSimpleSenderExtension.OpenDebug(IActivityMonitor, String, Exception, CKTrait, Int32, String) ActivityMonitorSimpleSenderExtension.OpenDebug(IActivityMonitor, Func<String>, CKTrait, Int32, String) ActivityMonitorSimpleSenderExtension.OpenDebug(IActivityMonitor, Func<String>, Exception, CKTrait, Int32, String) ActivityMonitorSimpleSenderExtension.OpenTrace(IActivityMonitor, Exception, Int32, String) ActivityMonitorSimpleSenderExtension.OpenTrace(IActivityMonitor, String, Int32, String) ActivityMonitorSimpleSenderExtension.OpenTrace(IActivityMonitor, String, Exception, Int32, String) ActivityMonitorSimpleSenderExtension.OpenTrace(IActivityMonitor, Func<String>, Int32, String) ActivityMonitorSimpleSenderExtension.OpenTrace(IActivityMonitor, Func<String>, Exception, Int32, String) ActivityMonitorSimpleSenderExtension.OpenTrace(IActivityMonitor, Exception, CKTrait, Int32, String) ActivityMonitorSimpleSenderExtension.OpenTrace(IActivityMonitor, String, CKTrait, Int32, String) ActivityMonitorSimpleSenderExtension.OpenTrace(IActivityMonitor, String, Exception, CKTrait, Int32, String) ActivityMonitorSimpleSenderExtension.OpenTrace(IActivityMonitor, Func<String>, CKTrait, Int32, String) ActivityMonitorSimpleSenderExtension.OpenTrace(IActivityMonitor, Func<String>, Exception, CKTrait, Int32, String) ActivityMonitorSimpleSenderExtension.OpenInfo(IActivityMonitor, Exception, Int32, String) ActivityMonitorSimpleSenderExtension.OpenInfo(IActivityMonitor, String, Int32, String) ActivityMonitorSimpleSenderExtension.OpenInfo(IActivityMonitor, String, Exception, Int32, String) ActivityMonitorSimpleSenderExtension.OpenInfo(IActivityMonitor, Func<String>, Int32, String) ActivityMonitorSimpleSenderExtension.OpenInfo(IActivityMonitor, Func<String>, Exception, Int32, String) ActivityMonitorSimpleSenderExtension.OpenInfo(IActivityMonitor, Exception, CKTrait, Int32, String) ActivityMonitorSimpleSenderExtension.OpenInfo(IActivityMonitor, String, CKTrait, Int32, String) ActivityMonitorSimpleSenderExtension.OpenInfo(IActivityMonitor, String, Exception, CKTrait, Int32, String) ActivityMonitorSimpleSenderExtension.OpenInfo(IActivityMonitor, Func<String>, CKTrait, Int32, String) ActivityMonitorSimpleSenderExtension.OpenInfo(IActivityMonitor, Func<String>, Exception, CKTrait, Int32, String) ActivityMonitorSimpleSenderExtension.OpenWarn(IActivityMonitor, Exception, Int32, String) ActivityMonitorSimpleSenderExtension.OpenWarn(IActivityMonitor, String, Int32, String) ActivityMonitorSimpleSenderExtension.OpenWarn(IActivityMonitor, String, Exception, Int32, String) ActivityMonitorSimpleSenderExtension.OpenWarn(IActivityMonitor, Func<String>, Int32, String) ActivityMonitorSimpleSenderExtension.OpenWarn(IActivityMonitor, Func<String>, Exception, Int32, String) ActivityMonitorSimpleSenderExtension.OpenWarn(IActivityMonitor, Exception, CKTrait, Int32, String) ActivityMonitorSimpleSenderExtension.OpenWarn(IActivityMonitor, String, CKTrait, Int32, String) ActivityMonitorSimpleSenderExtension.OpenWarn(IActivityMonitor, String, Exception, CKTrait, Int32, String) ActivityMonitorSimpleSenderExtension.OpenWarn(IActivityMonitor, Func<String>, CKTrait, Int32, String) ActivityMonitorSimpleSenderExtension.OpenWarn(IActivityMonitor, Func<String>, Exception, CKTrait, Int32, String) ActivityMonitorSimpleSenderExtension.OpenError(IActivityMonitor, Exception, Int32, String) ActivityMonitorSimpleSenderExtension.OpenError(IActivityMonitor, String, Int32, String) ActivityMonitorSimpleSenderExtension.OpenError(IActivityMonitor, String, Exception, Int32, String) ActivityMonitorSimpleSenderExtension.OpenError(IActivityMonitor, Func<String>, Int32, String) ActivityMonitorSimpleSenderExtension.OpenError(IActivityMonitor, Func<String>, Exception, Int32, String) ActivityMonitorSimpleSenderExtension.OpenError(IActivityMonitor, Exception, CKTrait, Int32, String) ActivityMonitorSimpleSenderExtension.OpenError(IActivityMonitor, String, CKTrait, Int32, String) ActivityMonitorSimpleSenderExtension.OpenError(IActivityMonitor, String, Exception, CKTrait, Int32, String) ActivityMonitorSimpleSenderExtension.OpenError(IActivityMonitor, Func<String>, CKTrait, Int32, String) ActivityMonitorSimpleSenderExtension.OpenError(IActivityMonitor, Func<String>, Exception, CKTrait, Int32, String) ActivityMonitorSimpleSenderExtension.OpenFatal(IActivityMonitor, Exception, Int32, String) ActivityMonitorSimpleSenderExtension.OpenFatal(IActivityMonitor, String, Int32, String) ActivityMonitorSimpleSenderExtension.OpenFatal(IActivityMonitor, String, Exception, Int32, String) ActivityMonitorSimpleSenderExtension.OpenFatal(IActivityMonitor, Func<String>, Int32, String) ActivityMonitorSimpleSenderExtension.OpenFatal(IActivityMonitor, Func<String>, Exception, Int32, String) ActivityMonitorSimpleSenderExtension.OpenFatal(IActivityMonitor, Exception, CKTrait, Int32, String) ActivityMonitorSimpleSenderExtension.OpenFatal(IActivityMonitor, String, CKTrait, Int32, String) ActivityMonitorSimpleSenderExtension.OpenFatal(IActivityMonitor, String, Exception, CKTrait, Int32, String) ActivityMonitorSimpleSenderExtension.OpenFatal(IActivityMonitor, Func<String>, CKTrait, Int32, String) ActivityMonitorSimpleSenderExtension.OpenFatal(IActivityMonitor, Func<String>, Exception, CKTrait, Int32, String) ActivityMonitorSimpleSenderExtension.OpenGroup(IActivityMonitor, LogLevel, Exception, Int32, String) ActivityMonitorSimpleSenderExtension.OpenGroup(IActivityMonitor, LogLevel, String, Int32, String) ActivityMonitorSimpleSenderExtension.OpenGroup(IActivityMonitor, LogLevel, String, Exception, Int32, String) ActivityMonitorSimpleSenderExtension.OpenGroup(IActivityMonitor, LogLevel, Func<String>, Int32, String) ActivityMonitorSimpleSenderExtension.OpenGroup(IActivityMonitor, LogLevel, Func<String>, Exception, Int32, String) ActivityMonitorSimpleSenderExtension.OpenGroup(IActivityMonitor, LogLevel, Exception, CKTrait, Int32, String) ActivityMonitorSimpleSenderExtension.OpenGroup(IActivityMonitor, LogLevel, String, CKTrait, Int32, String) ActivityMonitorSimpleSenderExtension.OpenGroup(IActivityMonitor, LogLevel, String, Exception, CKTrait, Int32, String) ActivityMonitorSimpleSenderExtension.OpenGroup(IActivityMonitor, LogLevel, Func<String>, CKTrait, Int32, String) ActivityMonitorSimpleSenderExtension.OpenGroup(IActivityMonitor, LogLevel, Func<String>, Exception, CKTrait, Int32, String) ActivityMonitorSimpleSenderExtension.Debug(IActivityMonitor, Exception, Int32, String) ActivityMonitorSimpleSenderExtension.Debug(IActivityMonitor, String, Int32, String) ActivityMonitorSimpleSenderExtension.Debug(IActivityMonitor, String, Exception, Int32, String) ActivityMonitorSimpleSenderExtension.Debug(IActivityMonitor, Func<String>, Int32, String) ActivityMonitorSimpleSenderExtension.Debug(IActivityMonitor, Func<String>, Exception, Int32, String) ActivityMonitorSimpleSenderExtension.Debug(IActivityMonitor, Exception, CKTrait, Int32, String) ActivityMonitorSimpleSenderExtension.Debug(IActivityMonitor, String, CKTrait, Int32, String) ActivityMonitorSimpleSenderExtension.Debug(IActivityMonitor, String, Exception, CKTrait, Int32, String) ActivityMonitorSimpleSenderExtension.Debug(IActivityMonitor, Func<String>, CKTrait, Int32, String) ActivityMonitorSimpleSenderExtension.Debug(IActivityMonitor, Func<String>, Exception, CKTrait, Int32, String) ActivityMonitorSimpleSenderExtension.Trace(IActivityMonitor, Exception, Int32, String) ActivityMonitorSimpleSenderExtension.Trace(IActivityMonitor, String, Int32, String) ActivityMonitorSimpleSenderExtension.Trace(IActivityMonitor, String, Exception, Int32, String) ActivityMonitorSimpleSenderExtension.Trace(IActivityMonitor, Func<String>, Int32, String) ActivityMonitorSimpleSenderExtension.Trace(IActivityMonitor, Func<String>, Exception, Int32, String) ActivityMonitorSimpleSenderExtension.Trace(IActivityMonitor, Exception, CKTrait, Int32, String) ActivityMonitorSimpleSenderExtension.Trace(IActivityMonitor, String, CKTrait, Int32, String) ActivityMonitorSimpleSenderExtension.Trace(IActivityMonitor, String, Exception, CKTrait, Int32, String) ActivityMonitorSimpleSenderExtension.Trace(IActivityMonitor, Func<String>, CKTrait, Int32, String) ActivityMonitorSimpleSenderExtension.Trace(IActivityMonitor, Func<String>, Exception, CKTrait, Int32, String) ActivityMonitorSimpleSenderExtension.Info(IActivityMonitor, Exception, Int32, String) ActivityMonitorSimpleSenderExtension.Info(IActivityMonitor, String, Int32, String) ActivityMonitorSimpleSenderExtension.Info(IActivityMonitor, String, Exception, Int32, String) ActivityMonitorSimpleSenderExtension.Info(IActivityMonitor, Func<String>, Int32, String) ActivityMonitorSimpleSenderExtension.Info(IActivityMonitor, Func<String>, Exception, Int32, String) ActivityMonitorSimpleSenderExtension.Info(IActivityMonitor, Exception, CKTrait, Int32, String) ActivityMonitorSimpleSenderExtension.Info(IActivityMonitor, String, CKTrait, Int32, String) ActivityMonitorSimpleSenderExtension.Info(IActivityMonitor, String, Exception, CKTrait, Int32, String) ActivityMonitorSimpleSenderExtension.Info(IActivityMonitor, Func<String>, CKTrait, Int32, String) ActivityMonitorSimpleSenderExtension.Info(IActivityMonitor, Func<String>, Exception, CKTrait, Int32, String) ActivityMonitorSimpleSenderExtension.Warn(IActivityMonitor, Exception, Int32, String) ActivityMonitorSimpleSenderExtension.Warn(IActivityMonitor, String, Int32, String) ActivityMonitorSimpleSenderExtension.Warn(IActivityMonitor, String, Exception, Int32, String) ActivityMonitorSimpleSenderExtension.Warn(IActivityMonitor, Func<String>, Int32, String) ActivityMonitorSimpleSenderExtension.Warn(IActivityMonitor, Func<String>, Exception, Int32, String) ActivityMonitorSimpleSenderExtension.Warn(IActivityMonitor, Exception, CKTrait, Int32, String) ActivityMonitorSimpleSenderExtension.Warn(IActivityMonitor, String, CKTrait, Int32, String) ActivityMonitorSimpleSenderExtension.Warn(IActivityMonitor, String, Exception, CKTrait, Int32, String) ActivityMonitorSimpleSenderExtension.Warn(IActivityMonitor, Func<String>, CKTrait, Int32, String) ActivityMonitorSimpleSenderExtension.Warn(IActivityMonitor, Func<String>, Exception, CKTrait, Int32, String) ActivityMonitorSimpleSenderExtension.Error(IActivityMonitor, Exception, Int32, String) ActivityMonitorSimpleSenderExtension.Error(IActivityMonitor, String, Int32, String) ActivityMonitorSimpleSenderExtension.Error(IActivityMonitor, String, Exception, Int32, String) ActivityMonitorSimpleSenderExtension.Error(IActivityMonitor, Func<String>, Int32, String) ActivityMonitorSimpleSenderExtension.Error(IActivityMonitor, Func<String>, Exception, Int32, String) ActivityMonitorSimpleSenderExtension.Error(IActivityMonitor, Exception, CKTrait, Int32, String) ActivityMonitorSimpleSenderExtension.Error(IActivityMonitor, String, CKTrait, Int32, String) ActivityMonitorSimpleSenderExtension.Error(IActivityMonitor, String, Exception, CKTrait, Int32, String) ActivityMonitorSimpleSenderExtension.Error(IActivityMonitor, Func<String>, CKTrait, Int32, String) ActivityMonitorSimpleSenderExtension.Error(IActivityMonitor, Func<String>, Exception, CKTrait, Int32, String) ActivityMonitorSimpleSenderExtension.Fatal(IActivityMonitor, Exception, Int32, String) ActivityMonitorSimpleSenderExtension.Fatal(IActivityMonitor, String, Int32, String) ActivityMonitorSimpleSenderExtension.Fatal(IActivityMonitor, String, Exception, Int32, String) ActivityMonitorSimpleSenderExtension.Fatal(IActivityMonitor, Func<String>, Int32, String) ActivityMonitorSimpleSenderExtension.Fatal(IActivityMonitor, Func<String>, Exception, Int32, String) ActivityMonitorSimpleSenderExtension.Fatal(IActivityMonitor, Exception, CKTrait, Int32, String) ActivityMonitorSimpleSenderExtension.Fatal(IActivityMonitor, String, CKTrait, Int32, String) ActivityMonitorSimpleSenderExtension.Fatal(IActivityMonitor, String, Exception, CKTrait, Int32, String) ActivityMonitorSimpleSenderExtension.Fatal(IActivityMonitor, Func<String>, CKTrait, Int32, String) ActivityMonitorSimpleSenderExtension.Fatal(IActivityMonitor, Func<String>, Exception, CKTrait, Int32, String) ActivityMonitorSimpleSenderExtension.Log(IActivityMonitor, LogLevel, Exception, Int32, String) ActivityMonitorSimpleSenderExtension.Log(IActivityMonitor, LogLevel, String, Int32, String) ActivityMonitorSimpleSenderExtension.Log(IActivityMonitor, LogLevel, String, Exception, Int32, String) ActivityMonitorSimpleSenderExtension.Log(IActivityMonitor, LogLevel, Func<String>, Int32, String) ActivityMonitorSimpleSenderExtension.Log(IActivityMonitor, LogLevel, Func<String>, Exception, Int32, String) ActivityMonitorSimpleSenderExtension.Log(IActivityMonitor, LogLevel, Exception, CKTrait, Int32, String) ActivityMonitorSimpleSenderExtension.Log(IActivityMonitor, LogLevel, String, CKTrait, Int32, String) ActivityMonitorSimpleSenderExtension.Log(IActivityMonitor, LogLevel, String, Exception, CKTrait, Int32, String) ActivityMonitorSimpleSenderExtension.Log(IActivityMonitor, LogLevel, Func<String>, CKTrait, Int32, String) ActivityMonitorSimpleSenderExtension.Log(IActivityMonitor, LogLevel, Func<String>, Exception, CKTrait, Int32, String) ActivityMonitorSenderExtension.Debug(IActivityMonitor, Int32, String) ActivityMonitorSenderExtension.OpenDebug(IActivityMonitor, Int32, String) ActivityMonitorSenderExtension.Trace(IActivityMonitor, Int32, String) ActivityMonitorSenderExtension.OpenTrace(IActivityMonitor, Int32, String) ActivityMonitorSenderExtension.Info(IActivityMonitor, Int32, String) ActivityMonitorSenderExtension.OpenInfo(IActivityMonitor, Int32, String) ActivityMonitorSenderExtension.Warn(IActivityMonitor, Int32, String) ActivityMonitorSenderExtension.OpenWarn(IActivityMonitor, Int32, String) ActivityMonitorSenderExtension.Error(IActivityMonitor, Int32, String) ActivityMonitorSenderExtension.OpenError(IActivityMonitor, Int32, String) ActivityMonitorSenderExtension.Fatal(IActivityMonitor, Int32, String) ActivityMonitorSenderExtension.OpenFatal(IActivityMonitor, Int32, String) ActivityMonitorExtension.NextLogTime(IActivityMonitor) ActivityMonitorExtension.MonitorEnd(IActivityMonitor, String, String, Int32) ActivityMonitorExtension.ShouldLogLine(IActivityMonitor, LogLevel, String, Int32) ActivityMonitorExtension.ShouldLogGroup(IActivityMonitor, LogLevel, String, Int32) ActivityMonitorExtension.UnfilteredLog(IActivityMonitor, CKTrait, LogLevel, String, DateTimeStamp, Exception, String, Int32) ActivityMonitorExtension.UnfilteredOpenGroup(IActivityMonitor, CKTrait, LogLevel, Func<String>, String, DateTimeStamp, Exception, String, Int32) ActivityMonitorExtension.CloseGroup(IActivityMonitor, Object) ActivityMonitorExtension.CollectEntries(IActivityMonitor, Action<IReadOnlyList<ActivityMonitorSimpleCollector.Entry>>, LogLevelFilter) ActivityMonitorExtension.OnError(IActivityMonitor, Action) ActivityMonitorExtension.OnError(IActivityMonitor, Action, Action) ActivityMonitorExtension.TemporarilySetMinimalFilter(IActivityMonitor, LogLevelFilter, LogLevelFilter) ActivityMonitorExtension.TemporarilySetMinimalFilter(IActivityMonitor, LogFilter) ActivityMonitorExtension.TemporarilySetAutoTags(IActivityMonitor, CKTrait, SetOperation) ActivityMonitorExtension.DependentActivity(IActivityMonitor, String, Int32) ActivityMonitorExtension.StartDependentActivity(IActivityMonitor, ActivityMonitor.DependentToken, String, Int32)"
  },
  "api/CK.Core.SystemActivityMonitor.html": {
    "href": "api/CK.Core.SystemActivityMonitor.html",
    "title": "Class SystemActivityMonitor | CK-Text",
    "keywords": "Class SystemActivityMonitor This ActivityMonitor logs errors in a directory (if the static RootLogPath property is not null) and raises OnError events. Its main goal is to be internally used by the Monitor framework but can be used as a \"normal\" monitor (if you believe it is a good idea). If RootLogPath is not set, Critical errors will NOT be logged. Inheritance Object ActivityMonitor SystemActivityMonitor Inherited Members ActivityMonitor.SetTopicPrefix ActivityMonitor.ParkLevel ActivityMonitor.CriticalErrorCollector ActivityMonitor.DefaultFilter ActivityMonitor.AutoConfiguration ActivityMonitor.NoLogText ActivityMonitor.IUniqueId.UniqueId ActivityMonitor.UniqueId ActivityMonitor.SetUniqueId(Guid) ActivityMonitor.Output ActivityMonitor.SetOutput(ActivityMonitorOutput) ActivityMonitor.LastLogTime ActivityMonitor.Topic ActivityMonitor.SetTopic(String, String, Int32) ActivityMonitor.AutoTags ActivityMonitor.IActivityMonitorImpl.InitializeTopicAndAutoTags(String, CKTrait, String, Int32) ActivityMonitor.MinimalFilter ActivityMonitor.ActualFilter ActivityMonitor.IActivityMonitorImpl.SignalChange() ActivityMonitor.IActivityMonitorImpl.OnClientMinimalFilterChanged(LogFilter, LogFilter) ActivityMonitor.UnfilteredLog(ActivityMonitorLogData) ActivityMonitor.UnfilteredOpenGroup(ActivityMonitorGroupData) ActivityMonitor.CloseGroup(DateTimeStamp, Object) ActivityMonitor.IActivityMonitorImpl.ReentrancyAndConcurrencyLock() ActivityMonitor.ReentrancyAndConcurrencyLock() ActivityMonitor.IActivityMonitorImpl.CurrentGroup ActivityMonitor.CurrentGroup Object.ToString() Object.Equals(Object) Object.Equals(Object, Object) Object.ReferenceEquals(Object, Object) Object.GetHashCode() Object.GetType() Object.MemberwiseClone() Namespace : CK.Core Assembly : CK.ActivityMonitor.dll Syntax public sealed class SystemActivityMonitor : ActivityMonitor, IActivityMonitorImpl, IActivityMonitor, IUniqueId Constructors | Improve this Doc View Source SystemActivityMonitor(Boolean, String) Initializes a new SystemActivityMonitor that can behave as a standard monitor (when automatic configurations applies). Declaration public SystemActivityMonitor(bool applyAutoConfigurations, string topic) Parameters Type Name Description Boolean applyAutoConfigurations True to apply automatic configurations and, hence, behave like any other ActivityMonitor . String topic Optional initial topic (can be null). Properties | Improve this Doc View Source CriticalErrorsPath Gets the RootLogPath CriticalErrors/\" path. RootLogPath must be set otherwise a exception is thrown. Declaration public static string CriticalErrorsPath { get; } Property Value Type Description String | Improve this Doc View Source RootLogPath Gets or sets (it can be set only once) the log folder to use (setting multiple time the same path is accepted). Once set, the path is CK.Core.FileUtil.NormalizePathSeparator(System.String,System.Boolean) . See remarks. Declaration public static string RootLogPath { get; set; } Property Value Type Description String Remarks When setting it, the path must be valid AND rooted. The subordinate directory \"CriticalErrors\" is created (if not already here) and a test file is created (and deleted) inside it to ensure that (at least at configuration time), no security configuration prevents us to create log files: all errors files will be created in this sub directory. It is recommended to use this directory to store all other logs and/or files related to activity tracking. When not null, it necessarily ends with a DirectorySeparatorChar . | Improve this Doc View Source TrackActivityMonitorLoggingError Gets or sets whether CriticalErrorCollector are tracked (this is thread safe). When true, LoggingError events are tracked, written to a file (if RootLogPath is not null) and ultimately published again as a OnError events. Defaults to true. Declaration public static bool TrackActivityMonitorLoggingError { get; set; } Property Value Type Description Boolean Methods | Improve this Doc View Source AssertRootLogPathIsSet() Checks that RootLogPath is correctly configured by throwing a exception if not. Declaration public static void AssertRootLogPathIsSet() | Improve this Doc View Source EnsureStaticInitialization() Touches this type to ensure that its static information is initialized. This does nothing except that, since the Type is solicited, the type constructor is called if needed. Declaration public static bool EnsureStaticInitialization() Returns Type Description Boolean Always true. | Improve this Doc View Source EnsureSystemClient(IActivityMonitor) Registers the internal system client that routes errors and fatals as ActivityMonitor errors. Declaration public static IDisposable EnsureSystemClient(IActivityMonitor monitor) Parameters Type Name Description IActivityMonitor monitor The monitor that can be temporary works as a SystemActivityMonitor . Returns Type Description IDisposable A disposable object that will unregister the system client (if it has been actually added). Events | Improve this Doc View Source OnError Event that enables subsequent handling of errors. Raising this event is protected: a registered handler that raises an exception will be automatically removed and the exception will be added to the CriticalErrorCollector collector to give other participants a chance to handle it and track the culprit. Declaration public static event EventHandler<SystemActivityMonitor.LowLevelErrorEventArgs> OnError Event Type Type Description EventHandler < SystemActivityMonitor.LowLevelErrorEventArgs > Extension Methods ActivityMonitorSimpleSenderExtension.OpenDebug(IActivityMonitor, Exception, Int32, String) ActivityMonitorSimpleSenderExtension.OpenDebug(IActivityMonitor, String, Int32, String) ActivityMonitorSimpleSenderExtension.OpenDebug(IActivityMonitor, String, Exception, Int32, String) ActivityMonitorSimpleSenderExtension.OpenDebug(IActivityMonitor, Func<String>, Int32, String) ActivityMonitorSimpleSenderExtension.OpenDebug(IActivityMonitor, Func<String>, Exception, Int32, String) ActivityMonitorSimpleSenderExtension.OpenDebug(IActivityMonitor, Exception, CKTrait, Int32, String) ActivityMonitorSimpleSenderExtension.OpenDebug(IActivityMonitor, String, CKTrait, Int32, String) ActivityMonitorSimpleSenderExtension.OpenDebug(IActivityMonitor, String, Exception, CKTrait, Int32, String) ActivityMonitorSimpleSenderExtension.OpenDebug(IActivityMonitor, Func<String>, CKTrait, Int32, String) ActivityMonitorSimpleSenderExtension.OpenDebug(IActivityMonitor, Func<String>, Exception, CKTrait, Int32, String) ActivityMonitorSimpleSenderExtension.OpenTrace(IActivityMonitor, Exception, Int32, String) ActivityMonitorSimpleSenderExtension.OpenTrace(IActivityMonitor, String, Int32, String) ActivityMonitorSimpleSenderExtension.OpenTrace(IActivityMonitor, String, Exception, Int32, String) ActivityMonitorSimpleSenderExtension.OpenTrace(IActivityMonitor, Func<String>, Int32, String) ActivityMonitorSimpleSenderExtension.OpenTrace(IActivityMonitor, Func<String>, Exception, Int32, String) ActivityMonitorSimpleSenderExtension.OpenTrace(IActivityMonitor, Exception, CKTrait, Int32, String) ActivityMonitorSimpleSenderExtension.OpenTrace(IActivityMonitor, String, CKTrait, Int32, String) ActivityMonitorSimpleSenderExtension.OpenTrace(IActivityMonitor, String, Exception, CKTrait, Int32, String) ActivityMonitorSimpleSenderExtension.OpenTrace(IActivityMonitor, Func<String>, CKTrait, Int32, String) ActivityMonitorSimpleSenderExtension.OpenTrace(IActivityMonitor, Func<String>, Exception, CKTrait, Int32, String) ActivityMonitorSimpleSenderExtension.OpenInfo(IActivityMonitor, Exception, Int32, String) ActivityMonitorSimpleSenderExtension.OpenInfo(IActivityMonitor, String, Int32, String) ActivityMonitorSimpleSenderExtension.OpenInfo(IActivityMonitor, String, Exception, Int32, String) ActivityMonitorSimpleSenderExtension.OpenInfo(IActivityMonitor, Func<String>, Int32, String) ActivityMonitorSimpleSenderExtension.OpenInfo(IActivityMonitor, Func<String>, Exception, Int32, String) ActivityMonitorSimpleSenderExtension.OpenInfo(IActivityMonitor, Exception, CKTrait, Int32, String) ActivityMonitorSimpleSenderExtension.OpenInfo(IActivityMonitor, String, CKTrait, Int32, String) ActivityMonitorSimpleSenderExtension.OpenInfo(IActivityMonitor, String, Exception, CKTrait, Int32, String) ActivityMonitorSimpleSenderExtension.OpenInfo(IActivityMonitor, Func<String>, CKTrait, Int32, String) ActivityMonitorSimpleSenderExtension.OpenInfo(IActivityMonitor, Func<String>, Exception, CKTrait, Int32, String) ActivityMonitorSimpleSenderExtension.OpenWarn(IActivityMonitor, Exception, Int32, String) ActivityMonitorSimpleSenderExtension.OpenWarn(IActivityMonitor, String, Int32, String) ActivityMonitorSimpleSenderExtension.OpenWarn(IActivityMonitor, String, Exception, Int32, String) ActivityMonitorSimpleSenderExtension.OpenWarn(IActivityMonitor, Func<String>, Int32, String) ActivityMonitorSimpleSenderExtension.OpenWarn(IActivityMonitor, Func<String>, Exception, Int32, String) ActivityMonitorSimpleSenderExtension.OpenWarn(IActivityMonitor, Exception, CKTrait, Int32, String) ActivityMonitorSimpleSenderExtension.OpenWarn(IActivityMonitor, String, CKTrait, Int32, String) ActivityMonitorSimpleSenderExtension.OpenWarn(IActivityMonitor, String, Exception, CKTrait, Int32, String) ActivityMonitorSimpleSenderExtension.OpenWarn(IActivityMonitor, Func<String>, CKTrait, Int32, String) ActivityMonitorSimpleSenderExtension.OpenWarn(IActivityMonitor, Func<String>, Exception, CKTrait, Int32, String) ActivityMonitorSimpleSenderExtension.OpenError(IActivityMonitor, Exception, Int32, String) ActivityMonitorSimpleSenderExtension.OpenError(IActivityMonitor, String, Int32, String) ActivityMonitorSimpleSenderExtension.OpenError(IActivityMonitor, String, Exception, Int32, String) ActivityMonitorSimpleSenderExtension.OpenError(IActivityMonitor, Func<String>, Int32, String) ActivityMonitorSimpleSenderExtension.OpenError(IActivityMonitor, Func<String>, Exception, Int32, String) ActivityMonitorSimpleSenderExtension.OpenError(IActivityMonitor, Exception, CKTrait, Int32, String) ActivityMonitorSimpleSenderExtension.OpenError(IActivityMonitor, String, CKTrait, Int32, String) ActivityMonitorSimpleSenderExtension.OpenError(IActivityMonitor, String, Exception, CKTrait, Int32, String) ActivityMonitorSimpleSenderExtension.OpenError(IActivityMonitor, Func<String>, CKTrait, Int32, String) ActivityMonitorSimpleSenderExtension.OpenError(IActivityMonitor, Func<String>, Exception, CKTrait, Int32, String) ActivityMonitorSimpleSenderExtension.OpenFatal(IActivityMonitor, Exception, Int32, String) ActivityMonitorSimpleSenderExtension.OpenFatal(IActivityMonitor, String, Int32, String) ActivityMonitorSimpleSenderExtension.OpenFatal(IActivityMonitor, String, Exception, Int32, String) ActivityMonitorSimpleSenderExtension.OpenFatal(IActivityMonitor, Func<String>, Int32, String) ActivityMonitorSimpleSenderExtension.OpenFatal(IActivityMonitor, Func<String>, Exception, Int32, String) ActivityMonitorSimpleSenderExtension.OpenFatal(IActivityMonitor, Exception, CKTrait, Int32, String) ActivityMonitorSimpleSenderExtension.OpenFatal(IActivityMonitor, String, CKTrait, Int32, String) ActivityMonitorSimpleSenderExtension.OpenFatal(IActivityMonitor, String, Exception, CKTrait, Int32, String) ActivityMonitorSimpleSenderExtension.OpenFatal(IActivityMonitor, Func<String>, CKTrait, Int32, String) ActivityMonitorSimpleSenderExtension.OpenFatal(IActivityMonitor, Func<String>, Exception, CKTrait, Int32, String) ActivityMonitorSimpleSenderExtension.OpenGroup(IActivityMonitor, LogLevel, Exception, Int32, String) ActivityMonitorSimpleSenderExtension.OpenGroup(IActivityMonitor, LogLevel, String, Int32, String) ActivityMonitorSimpleSenderExtension.OpenGroup(IActivityMonitor, LogLevel, String, Exception, Int32, String) ActivityMonitorSimpleSenderExtension.OpenGroup(IActivityMonitor, LogLevel, Func<String>, Int32, String) ActivityMonitorSimpleSenderExtension.OpenGroup(IActivityMonitor, LogLevel, Func<String>, Exception, Int32, String) ActivityMonitorSimpleSenderExtension.OpenGroup(IActivityMonitor, LogLevel, Exception, CKTrait, Int32, String) ActivityMonitorSimpleSenderExtension.OpenGroup(IActivityMonitor, LogLevel, String, CKTrait, Int32, String) ActivityMonitorSimpleSenderExtension.OpenGroup(IActivityMonitor, LogLevel, String, Exception, CKTrait, Int32, String) ActivityMonitorSimpleSenderExtension.OpenGroup(IActivityMonitor, LogLevel, Func<String>, CKTrait, Int32, String) ActivityMonitorSimpleSenderExtension.OpenGroup(IActivityMonitor, LogLevel, Func<String>, Exception, CKTrait, Int32, String) ActivityMonitorSimpleSenderExtension.Debug(IActivityMonitor, Exception, Int32, String) ActivityMonitorSimpleSenderExtension.Debug(IActivityMonitor, String, Int32, String) ActivityMonitorSimpleSenderExtension.Debug(IActivityMonitor, String, Exception, Int32, String) ActivityMonitorSimpleSenderExtension.Debug(IActivityMonitor, Func<String>, Int32, String) ActivityMonitorSimpleSenderExtension.Debug(IActivityMonitor, Func<String>, Exception, Int32, String) ActivityMonitorSimpleSenderExtension.Debug(IActivityMonitor, Exception, CKTrait, Int32, String) ActivityMonitorSimpleSenderExtension.Debug(IActivityMonitor, String, CKTrait, Int32, String) ActivityMonitorSimpleSenderExtension.Debug(IActivityMonitor, String, Exception, CKTrait, Int32, String) ActivityMonitorSimpleSenderExtension.Debug(IActivityMonitor, Func<String>, CKTrait, Int32, String) ActivityMonitorSimpleSenderExtension.Debug(IActivityMonitor, Func<String>, Exception, CKTrait, Int32, String) ActivityMonitorSimpleSenderExtension.Trace(IActivityMonitor, Exception, Int32, String) ActivityMonitorSimpleSenderExtension.Trace(IActivityMonitor, String, Int32, String) ActivityMonitorSimpleSenderExtension.Trace(IActivityMonitor, String, Exception, Int32, String) ActivityMonitorSimpleSenderExtension.Trace(IActivityMonitor, Func<String>, Int32, String) ActivityMonitorSimpleSenderExtension.Trace(IActivityMonitor, Func<String>, Exception, Int32, String) ActivityMonitorSimpleSenderExtension.Trace(IActivityMonitor, Exception, CKTrait, Int32, String) ActivityMonitorSimpleSenderExtension.Trace(IActivityMonitor, String, CKTrait, Int32, String) ActivityMonitorSimpleSenderExtension.Trace(IActivityMonitor, String, Exception, CKTrait, Int32, String) ActivityMonitorSimpleSenderExtension.Trace(IActivityMonitor, Func<String>, CKTrait, Int32, String) ActivityMonitorSimpleSenderExtension.Trace(IActivityMonitor, Func<String>, Exception, CKTrait, Int32, String) ActivityMonitorSimpleSenderExtension.Info(IActivityMonitor, Exception, Int32, String) ActivityMonitorSimpleSenderExtension.Info(IActivityMonitor, String, Int32, String) ActivityMonitorSimpleSenderExtension.Info(IActivityMonitor, String, Exception, Int32, String) ActivityMonitorSimpleSenderExtension.Info(IActivityMonitor, Func<String>, Int32, String) ActivityMonitorSimpleSenderExtension.Info(IActivityMonitor, Func<String>, Exception, Int32, String) ActivityMonitorSimpleSenderExtension.Info(IActivityMonitor, Exception, CKTrait, Int32, String) ActivityMonitorSimpleSenderExtension.Info(IActivityMonitor, String, CKTrait, Int32, String) ActivityMonitorSimpleSenderExtension.Info(IActivityMonitor, String, Exception, CKTrait, Int32, String) ActivityMonitorSimpleSenderExtension.Info(IActivityMonitor, Func<String>, CKTrait, Int32, String) ActivityMonitorSimpleSenderExtension.Info(IActivityMonitor, Func<String>, Exception, CKTrait, Int32, String) ActivityMonitorSimpleSenderExtension.Warn(IActivityMonitor, Exception, Int32, String) ActivityMonitorSimpleSenderExtension.Warn(IActivityMonitor, String, Int32, String) ActivityMonitorSimpleSenderExtension.Warn(IActivityMonitor, String, Exception, Int32, String) ActivityMonitorSimpleSenderExtension.Warn(IActivityMonitor, Func<String>, Int32, String) ActivityMonitorSimpleSenderExtension.Warn(IActivityMonitor, Func<String>, Exception, Int32, String) ActivityMonitorSimpleSenderExtension.Warn(IActivityMonitor, Exception, CKTrait, Int32, String) ActivityMonitorSimpleSenderExtension.Warn(IActivityMonitor, String, CKTrait, Int32, String) ActivityMonitorSimpleSenderExtension.Warn(IActivityMonitor, String, Exception, CKTrait, Int32, String) ActivityMonitorSimpleSenderExtension.Warn(IActivityMonitor, Func<String>, CKTrait, Int32, String) ActivityMonitorSimpleSenderExtension.Warn(IActivityMonitor, Func<String>, Exception, CKTrait, Int32, String) ActivityMonitorSimpleSenderExtension.Error(IActivityMonitor, Exception, Int32, String) ActivityMonitorSimpleSenderExtension.Error(IActivityMonitor, String, Int32, String) ActivityMonitorSimpleSenderExtension.Error(IActivityMonitor, String, Exception, Int32, String) ActivityMonitorSimpleSenderExtension.Error(IActivityMonitor, Func<String>, Int32, String) ActivityMonitorSimpleSenderExtension.Error(IActivityMonitor, Func<String>, Exception, Int32, String) ActivityMonitorSimpleSenderExtension.Error(IActivityMonitor, Exception, CKTrait, Int32, String) ActivityMonitorSimpleSenderExtension.Error(IActivityMonitor, String, CKTrait, Int32, String) ActivityMonitorSimpleSenderExtension.Error(IActivityMonitor, String, Exception, CKTrait, Int32, String) ActivityMonitorSimpleSenderExtension.Error(IActivityMonitor, Func<String>, CKTrait, Int32, String) ActivityMonitorSimpleSenderExtension.Error(IActivityMonitor, Func<String>, Exception, CKTrait, Int32, String) ActivityMonitorSimpleSenderExtension.Fatal(IActivityMonitor, Exception, Int32, String) ActivityMonitorSimpleSenderExtension.Fatal(IActivityMonitor, String, Int32, String) ActivityMonitorSimpleSenderExtension.Fatal(IActivityMonitor, String, Exception, Int32, String) ActivityMonitorSimpleSenderExtension.Fatal(IActivityMonitor, Func<String>, Int32, String) ActivityMonitorSimpleSenderExtension.Fatal(IActivityMonitor, Func<String>, Exception, Int32, String) ActivityMonitorSimpleSenderExtension.Fatal(IActivityMonitor, Exception, CKTrait, Int32, String) ActivityMonitorSimpleSenderExtension.Fatal(IActivityMonitor, String, CKTrait, Int32, String) ActivityMonitorSimpleSenderExtension.Fatal(IActivityMonitor, String, Exception, CKTrait, Int32, String) ActivityMonitorSimpleSenderExtension.Fatal(IActivityMonitor, Func<String>, CKTrait, Int32, String) ActivityMonitorSimpleSenderExtension.Fatal(IActivityMonitor, Func<String>, Exception, CKTrait, Int32, String) ActivityMonitorSimpleSenderExtension.Log(IActivityMonitor, LogLevel, Exception, Int32, String) ActivityMonitorSimpleSenderExtension.Log(IActivityMonitor, LogLevel, String, Int32, String) ActivityMonitorSimpleSenderExtension.Log(IActivityMonitor, LogLevel, String, Exception, Int32, String) ActivityMonitorSimpleSenderExtension.Log(IActivityMonitor, LogLevel, Func<String>, Int32, String) ActivityMonitorSimpleSenderExtension.Log(IActivityMonitor, LogLevel, Func<String>, Exception, Int32, String) ActivityMonitorSimpleSenderExtension.Log(IActivityMonitor, LogLevel, Exception, CKTrait, Int32, String) ActivityMonitorSimpleSenderExtension.Log(IActivityMonitor, LogLevel, String, CKTrait, Int32, String) ActivityMonitorSimpleSenderExtension.Log(IActivityMonitor, LogLevel, String, Exception, CKTrait, Int32, String) ActivityMonitorSimpleSenderExtension.Log(IActivityMonitor, LogLevel, Func<String>, CKTrait, Int32, String) ActivityMonitorSimpleSenderExtension.Log(IActivityMonitor, LogLevel, Func<String>, Exception, CKTrait, Int32, String) ActivityMonitorSenderExtension.Debug(IActivityMonitor, Int32, String) ActivityMonitorSenderExtension.OpenDebug(IActivityMonitor, Int32, String) ActivityMonitorSenderExtension.Trace(IActivityMonitor, Int32, String) ActivityMonitorSenderExtension.OpenTrace(IActivityMonitor, Int32, String) ActivityMonitorSenderExtension.Info(IActivityMonitor, Int32, String) ActivityMonitorSenderExtension.OpenInfo(IActivityMonitor, Int32, String) ActivityMonitorSenderExtension.Warn(IActivityMonitor, Int32, String) ActivityMonitorSenderExtension.OpenWarn(IActivityMonitor, Int32, String) ActivityMonitorSenderExtension.Error(IActivityMonitor, Int32, String) ActivityMonitorSenderExtension.OpenError(IActivityMonitor, Int32, String) ActivityMonitorSenderExtension.Fatal(IActivityMonitor, Int32, String) ActivityMonitorSenderExtension.OpenFatal(IActivityMonitor, Int32, String) ActivityMonitorExtension.NextLogTime(IActivityMonitor) ActivityMonitorExtension.MonitorEnd(IActivityMonitor, String, String, Int32) ActivityMonitorExtension.ShouldLogLine(IActivityMonitor, LogLevel, String, Int32) ActivityMonitorExtension.ShouldLogGroup(IActivityMonitor, LogLevel, String, Int32) ActivityMonitorExtension.UnfilteredLog(IActivityMonitor, CKTrait, LogLevel, String, DateTimeStamp, Exception, String, Int32) ActivityMonitorExtension.UnfilteredOpenGroup(IActivityMonitor, CKTrait, LogLevel, Func<String>, String, DateTimeStamp, Exception, String, Int32) ActivityMonitorExtension.CloseGroup(IActivityMonitor, Object) ActivityMonitorExtension.CollectEntries(IActivityMonitor, Action<IReadOnlyList<ActivityMonitorSimpleCollector.Entry>>, LogLevelFilter) ActivityMonitorExtension.OnError(IActivityMonitor, Action) ActivityMonitorExtension.OnError(IActivityMonitor, Action, Action) ActivityMonitorExtension.TemporarilySetMinimalFilter(IActivityMonitor, LogLevelFilter, LogLevelFilter) ActivityMonitorExtension.TemporarilySetMinimalFilter(IActivityMonitor, LogFilter) ActivityMonitorExtension.TemporarilySetAutoTags(IActivityMonitor, CKTrait, SetOperation) ActivityMonitorExtension.DependentActivity(IActivityMonitor, String, Int32) ActivityMonitorExtension.StartDependentActivity(IActivityMonitor, ActivityMonitor.DependentToken, String, Int32)"
  },
  "api/CK.Core.ActivityLogGroupConclusion.html": {
    "href": "api/CK.Core.ActivityLogGroupConclusion.html",
    "title": "Struct ActivityLogGroupConclusion | CK-Text",
    "keywords": "Struct ActivityLogGroupConclusion Describes the conclusion of a group. Conclusions are simply Text Tag ged with a CK.Core.CKTrait . Inherited Members Object.Equals(Object, Object) Object.ReferenceEquals(Object, Object) Object.GetType() Namespace : CK.Core Assembly : CK.ActivityMonitor.dll Syntax public struct ActivityLogGroupConclusion Constructors | Improve this Doc View Source ActivityLogGroupConclusion(String, CKTrait) Initializes a new conclusion for a group. Declaration public ActivityLogGroupConclusion(string conclusion, CKTrait tag = null) Parameters Type Name Description String conclusion Must not be null (may be empty). CK.Core.CKTrait tag Must be null or be registered in ActivityMonitor.Tags . Fields | Improve this Doc View Source Tag The tag (never null). It may be combined but is often atomic like UserConclusion , or GetTextConclusion . Declaration public readonly CKTrait Tag Field Value Type Description CK.Core.CKTrait | Improve this Doc View Source Text The conclusion (never null). Declaration public readonly string Text Field Value Type Description String Methods | Improve this Doc View Source Equals(Object) Explicit test for Text and Tag equality. Declaration public override bool Equals(object obj) Parameters Type Name Description Object obj Object to test. Returns Type Description Boolean True when equal. Overrides ValueType.Equals(Object) | Improve this Doc View Source GetHashCode() Computes the hash code. Declaration public override int GetHashCode() Returns Type Description Int32 The hash code. Overrides ValueType.GetHashCode() | Improve this Doc View Source ToString() Overriden to return Text . Declaration public override string ToString() Returns Type Description String Text field. Overrides ValueType.ToString() Operators | Improve this Doc View Source Equality(ActivityLogGroupConclusion, ActivityLogGroupConclusion) Equality operator definition. Declaration public static bool operator ==(ActivityLogGroupConclusion x, ActivityLogGroupConclusion y) Parameters Type Name Description ActivityLogGroupConclusion x First value type. ActivityLogGroupConclusion y Second value type. Returns Type Description Boolean True if and only if Tag and Text are equals. | Improve this Doc View Source Inequality(ActivityLogGroupConclusion, ActivityLogGroupConclusion) Inequality operator definition. Declaration public static bool operator !=(ActivityLogGroupConclusion x, ActivityLogGroupConclusion y) Parameters Type Name Description ActivityLogGroupConclusion x First value type. ActivityLogGroupConclusion y Second value type. Returns Type Description Boolean True if Tag or Text differ."
  },
  "api/CK.Core.ActivityMonitorClient.html": {
    "href": "api/CK.Core.ActivityMonitorClient.html",
    "title": "Class ActivityMonitorClient | CK-Text",
    "keywords": "Class ActivityMonitorClient Base class that explicitly implements IActivityMonitorClient (to hide it from public interface, except its MinimalFilter ). Inheritance Object ActivityMonitorClient ActivityMonitorErrorCounter ActivityMonitorPathCatcher Inherited Members Object.ToString() Object.Equals(Object) Object.Equals(Object, Object) Object.ReferenceEquals(Object, Object) Object.GetHashCode() Object.GetType() Object.MemberwiseClone() Namespace : CK.Core Assembly : CK.ActivityMonitor.dll Syntax public class ActivityMonitorClient : IActivityMonitorClient Constructors | Improve this Doc View Source ActivityMonitorClient() Initialize a new ActivityMonitorClient that does nothing. Declaration public ActivityMonitorClient() Fields | Improve this Doc View Source Empty Empty IActivityMonitorClient (null object design pattern). Declaration public static readonly ActivityMonitorClient Empty Field Value Type Description ActivityMonitorClient Properties | Improve this Doc View Source MinimalFilter Gets the minimal log level that this Client expects: defaults to Undefined . Declaration public virtual LogFilter MinimalFilter { get; } Property Value Type Description LogFilter Methods | Improve this Doc View Source CreateMultipleRegisterOnBoundClientException(IActivityMonitorBoundClient) Creates a standardized exception that can be thrown by SetMonitor(IActivityMonitorImpl, Boolean) . Declaration public static InvalidOperationException CreateMultipleRegisterOnBoundClientException(IActivityMonitorBoundClient boundClient) Parameters Type Name Description IActivityMonitorBoundClient boundClient The bound client. Returns Type Description InvalidOperationException An exception with an explicit message. | Improve this Doc View Source OnAutoTagsChanged(CKTrait) Called when AutoTags changed. Does nothing by default. Declaration protected virtual void OnAutoTagsChanged(CKTrait newTags) Parameters Type Name Description CK.Core.CKTrait newTags The new auto tags. | Improve this Doc View Source OnGroupClosed(IActivityLogGroup, IReadOnlyList<ActivityLogGroupConclusion>) Called when the group is actually closed. Does nothing by default. Declaration protected virtual void OnGroupClosed(IActivityLogGroup group, IReadOnlyList<ActivityLogGroupConclusion> conclusions) Parameters Type Name Description IActivityLogGroup group The closed group. IReadOnlyList < ActivityLogGroupConclusion > conclusions Text that conclude the group. Never null but can be empty. | Improve this Doc View Source OnGroupClosing(IActivityLogGroup, ref List<ActivityLogGroupConclusion>) Called once the user conclusions are known at the group level but before the group is actually closed: clients can update the conclusions for the group. Does nothing by default. Declaration protected virtual void OnGroupClosing(IActivityLogGroup group, ref List<ActivityLogGroupConclusion> conclusions) Parameters Type Name Description IActivityLogGroup group The closing group. List < ActivityLogGroupConclusion > conclusions Mutable conclusions associated to the closing group. This can be null if no conclusions have been added yet. It is up to the first client that wants to add a conclusion to instantiate a new List object to carry the conclusions. | Improve this Doc View Source OnOpenGroup(IActivityLogGroup) Called for each UnfilteredOpenGroup(ActivityMonitorGroupData) . Does nothing by default. Declaration protected virtual void OnOpenGroup(IActivityLogGroup group) Parameters Type Name Description IActivityLogGroup group The newly opened IActivityLogGroup . | Improve this Doc View Source OnTopicChanged(String, String, Int32) Called when Topic changed. Does nothing by default. Declaration protected virtual void OnTopicChanged(string newTopic, string fileName, int lineNumber) Parameters Type Name Description String newTopic The new topic. String fileName Source file name where SetTopic(String, String, Int32) has been called. Int32 lineNumber Source line number where IActivityMonitor.SetTopic has been called. | Improve this Doc View Source OnUnfilteredLog(ActivityMonitorLogData) Called for each UnfilteredLog(ActivityMonitorLogData) . Does nothing by default. The Exception is always null since exceptions are carried by groups. Declaration protected virtual void OnUnfilteredLog(ActivityMonitorLogData data) Parameters Type Name Description ActivityMonitorLogData data Log data. Never null. Explicit Interface Implementations | Improve this Doc View Source IActivityMonitorClient.OnAutoTagsChanged(CKTrait) Declaration void IActivityMonitorClient.OnAutoTagsChanged(CKTrait newTags) Parameters Type Name Description CK.Core.CKTrait newTags Implements IActivityMonitorClient.OnAutoTagsChanged(CKTrait) | Improve this Doc View Source IActivityMonitorClient.OnGroupClosed(IActivityLogGroup, IReadOnlyList<ActivityLogGroupConclusion>) Declaration void IActivityMonitorClient.OnGroupClosed(IActivityLogGroup group, IReadOnlyList<ActivityLogGroupConclusion> conclusions) Parameters Type Name Description IActivityLogGroup group IReadOnlyList < ActivityLogGroupConclusion > conclusions Implements IActivityMonitorClient.OnGroupClosed(IActivityLogGroup, IReadOnlyList<ActivityLogGroupConclusion>) | Improve this Doc View Source IActivityMonitorClient.OnGroupClosing(IActivityLogGroup, ref List<ActivityLogGroupConclusion>) Declaration void IActivityMonitorClient.OnGroupClosing(IActivityLogGroup group, ref List<ActivityLogGroupConclusion> conclusions) Parameters Type Name Description IActivityLogGroup group List < ActivityLogGroupConclusion > conclusions Implements IActivityMonitorClient.OnGroupClosing(IActivityLogGroup, ref List<ActivityLogGroupConclusion>) | Improve this Doc View Source IActivityMonitorClient.OnOpenGroup(IActivityLogGroup) Declaration void IActivityMonitorClient.OnOpenGroup(IActivityLogGroup group) Parameters Type Name Description IActivityLogGroup group Implements IActivityMonitorClient.OnOpenGroup(IActivityLogGroup) | Improve this Doc View Source IActivityMonitorClient.OnTopicChanged(String, String, Int32) Declaration void IActivityMonitorClient.OnTopicChanged(string newTopic, string fileName, int lineNumber) Parameters Type Name Description String newTopic String fileName Int32 lineNumber Implements IActivityMonitorClient.OnTopicChanged(String, String, Int32) | Improve this Doc View Source IActivityMonitorClient.OnUnfilteredLog(ActivityMonitorLogData) Declaration void IActivityMonitorClient.OnUnfilteredLog(ActivityMonitorLogData data) Parameters Type Name Description ActivityMonitorLogData data Implements IActivityMonitorClient.OnUnfilteredLog(ActivityMonitorLogData)"
  },
  "api/CK.Core.ActivityMonitorExtension.DependentSender.html": {
    "href": "api/CK.Core.ActivityMonitorExtension.DependentSender.html",
    "title": "Struct ActivityMonitorExtension.DependentSender | CK-Text",
    "keywords": "Struct ActivityMonitorExtension.DependentSender Offers dependent token creation and launching. Inherited Members ValueType.Equals(Object) ValueType.GetHashCode() ValueType.ToString() Object.Equals(Object, Object) Object.ReferenceEquals(Object, Object) Object.GetType() Namespace : CK.Core Assembly : CK.ActivityMonitor.dll Syntax public struct DependentSender Methods | Improve this Doc View Source CreateToken(Boolean) Creates a token for a dependent activity that will use the current monitor's topic. By default (when delayedLaunch is false), a line with CreateDependentActivity is logged that describes the creation of the token. If delayedLaunch is true, the actual launch of the dependent activity must be signaled thanks to Launch(ActivityMonitor.DependentToken) (otherwise there will be no way to bind the two activities). Declaration public ActivityMonitor.DependentToken CreateToken(bool delayedLaunch = false) Parameters Type Name Description Boolean delayedLaunch True to use Launch(ActivityMonitor.DependentToken) later to indicate the actual launch of the dependent activity. Returns Type Description ActivityMonitor.DependentToken A dependent token. | Improve this Doc View Source CreateTokenWithTopic(String, Boolean) Creates a token for a dependent activity that will be bound to a specified topic (or that will not change the dependent monitor's topic if null is specified). By default (when delayedLaunch is false), a line with CreateDependentActivity is logged that describes the creation of the token. If delayedLaunch is true, the actual launch of the dependent activity must be signaled thanks to Launch(ActivityMonitor.DependentToken) (otherwise there will be no way to bind the two activities). Declaration public ActivityMonitor.DependentToken CreateTokenWithTopic(string dependentTopic, bool delayedLaunch = false) Parameters Type Name Description String dependentTopic Topic for the dependent activity. Use null to not change the dependent monitor's topic. Boolean delayedLaunch True to use Launch(ActivityMonitor.DependentToken) later to indicate the actual launch of the dependent activity. Returns Type Description ActivityMonitor.DependentToken A dependent token. | Improve this Doc View Source Launch(ActivityMonitor.DependentToken) Signals the launch of one or more dependent activities by emitting a log line that describes the token. The token must have been created by CreateToken(Boolean) or CreateTokenWithTopic(String, Boolean) with a true delayedLaunch parameter otherwise an InvalidOperationException is thrown. Declaration public void Launch(ActivityMonitor.DependentToken token) Parameters Type Name Description ActivityMonitor.DependentToken token Dependent token. | Improve this Doc View Source Launch(Action<ActivityMonitor.DependentToken>) Launches one or more dependent activities (thanks to a delegate) that will use the current monitor's topic. This creates a new ActivityMonitor.DependentToken and opens a group that wraps the execution of the dependentLauncher . Declaration public void Launch(Action<ActivityMonitor.DependentToken> dependentLauncher) Parameters Type Name Description Action < ActivityMonitor.DependentToken > dependentLauncher Must create and launch dependent activities that should use the created token. | Improve this Doc View Source LaunchWithTopic(Action<ActivityMonitor.DependentToken>, String) Launches one or more dependent activities (thanks to a delegate) that will be bound to a specified topic (or that will not change the dependent monitor's topic if null is specified). This creates a new ActivityMonitor.DependentToken and opens a group that wraps the execution of the dependentLauncher . Declaration public void LaunchWithTopic(Action<ActivityMonitor.DependentToken> dependentLauncher, string dependentTopic) Parameters Type Name Description Action < ActivityMonitor.DependentToken > dependentLauncher Must create and launch dependent activities that should use the created token. String dependentTopic Topic for the dependent activity. When null, the dependent monitor's topic is not changed."
  },
  "api/CK.Core.ActivityMonitorSimpleCollector.html": {
    "href": "api/CK.Core.ActivityMonitorSimpleCollector.html",
    "title": "Class ActivityMonitorSimpleCollector | CK-Text",
    "keywords": "Class ActivityMonitorSimpleCollector Simple collector of log entries which level is greater or equal to MinimalFilter . Its Capacity defaults to 50 (no more than Capacity entries are kept). Used by the CollectEntries(IActivityMonitor, Action<IReadOnlyList<ActivityMonitorSimpleCollector.Entry>>, LogLevelFilter) extension method. Inheritance Object ActivityMonitorSimpleCollector Inherited Members Object.ToString() Object.Equals(Object) Object.Equals(Object, Object) Object.ReferenceEquals(Object, Object) Object.GetHashCode() Object.GetType() Object.MemberwiseClone() Namespace : CK.Core Assembly : CK.ActivityMonitor.dll Syntax public sealed class ActivityMonitorSimpleCollector : IActivityMonitorClient Constructors | Improve this Doc View Source ActivityMonitorSimpleCollector() Initializes a new collector with an initial capacity of 50 errors ( MinimalFilter is set to Error ). Declaration public ActivityMonitorSimpleCollector() Properties | Improve this Doc View Source Capacity Gets or sets the maximum numbers of ActivityMonitorSimpleCollector.Entry that must be kept in Entries . Defaults to 50. Declaration public int Capacity { get; set; } Property Value Type Description Int32 | Improve this Doc View Source Entries Gets a read only list of (at most) Capacity entries that occurred since last call to Clear() . Declaration public IReadOnlyList<ActivityMonitorSimpleCollector.Entry> Entries { get; } Property Value Type Description IReadOnlyList < ActivityMonitorSimpleCollector.Entry > | Improve this Doc View Source MinimalFilter Gets or sets the filter level. When setting, any ActivityMonitorSimpleCollector.Entry that has a level below the new minimal filter are removed from this collector. Declaration public LogLevelFilter MinimalFilter { get; set; } Property Value Type Description LogLevelFilter Methods | Improve this Doc View Source Clear() Clears the current Entries list. Declaration public void Clear() Explicit Interface Implementations | Improve this Doc View Source IActivityMonitorClient.OnAutoTagsChanged(CKTrait) Declaration void IActivityMonitorClient.OnAutoTagsChanged(CKTrait newTrait) Parameters Type Name Description CK.Core.CKTrait newTrait Implements IActivityMonitorClient.OnAutoTagsChanged(CKTrait) | Improve this Doc View Source IActivityMonitorClient.OnGroupClosed(IActivityLogGroup, IReadOnlyList<ActivityLogGroupConclusion>) Declaration void IActivityMonitorClient.OnGroupClosed(IActivityLogGroup group, IReadOnlyList<ActivityLogGroupConclusion> conclusions) Parameters Type Name Description IActivityLogGroup group IReadOnlyList < ActivityLogGroupConclusion > conclusions Implements IActivityMonitorClient.OnGroupClosed(IActivityLogGroup, IReadOnlyList<ActivityLogGroupConclusion>) | Improve this Doc View Source IActivityMonitorClient.OnGroupClosing(IActivityLogGroup, ref List<ActivityLogGroupConclusion>) Declaration void IActivityMonitorClient.OnGroupClosing(IActivityLogGroup group, ref List<ActivityLogGroupConclusion> conclusions) Parameters Type Name Description IActivityLogGroup group List < ActivityLogGroupConclusion > conclusions Implements IActivityMonitorClient.OnGroupClosing(IActivityLogGroup, ref List<ActivityLogGroupConclusion>) | Improve this Doc View Source IActivityMonitorClient.OnOpenGroup(IActivityLogGroup) Appends any group with level equal or above MinimalFilter to Entries . Declaration void IActivityMonitorClient.OnOpenGroup(IActivityLogGroup group) Parameters Type Name Description IActivityLogGroup group Log group description. Implements IActivityMonitorClient.OnOpenGroup(IActivityLogGroup) | Improve this Doc View Source IActivityMonitorClient.OnTopicChanged(String, String, Int32) Declaration void IActivityMonitorClient.OnTopicChanged(string newTopic, string fileName, int lineNumber) Parameters Type Name Description String newTopic String fileName Int32 lineNumber Implements IActivityMonitorClient.OnTopicChanged(String, String, Int32) | Improve this Doc View Source IActivityMonitorClient.OnUnfilteredLog(ActivityMonitorLogData) Appends any log with level equal or above MinimalFilter to Entries . Declaration void IActivityMonitorClient.OnUnfilteredLog(ActivityMonitorLogData data) Parameters Type Name Description ActivityMonitorLogData data Log data. Never null. Implements IActivityMonitorClient.OnUnfilteredLog(ActivityMonitorLogData)"
  },
  "api/CK.Core.ActivityMonitor.Group.html": {
    "href": "api/CK.Core.ActivityMonitor.Group.html",
    "title": "Class ActivityMonitor.Group | CK-Text",
    "keywords": "Class ActivityMonitor.Group Groups are bound to an ActivityMonitor and are linked together from the current one to the very first one (a kind of stack). Inheritance Object ActivityMonitor.Group Inherited Members Object.ToString() Object.Equals(Object) Object.Equals(Object, Object) Object.ReferenceEquals(Object, Object) Object.GetHashCode() Object.GetType() Object.MemberwiseClone() Namespace : CK.Core Assembly : CK.ActivityMonitor.dll Syntax protected sealed class Group : IActivityLogGroup, IDisposableGroup, IDisposable Fields | Improve this Doc View Source Index The raw index of the group. Declaration public readonly int Index Field Value Type Description Int32 | Improve this Doc View Source Monitor The monitor that owns this group. Declaration public readonly ActivityMonitor Monitor Field Value Type Description ActivityMonitor Properties | Improve this Doc View Source CloseLogTime Gets the log time of the group closing. It is CK.Core.DateTimeStamp.MinValue when the group is not closed yet. Declaration public DateTimeStamp CloseLogTime { get; } Property Value Type Description CK.Core.DateTimeStamp Implements IActivityLogGroup.CloseLogTime | Improve this Doc View Source Depth Gets the depth of this group in its origin monitor (1 for top level groups). Declaration public int Depth { get; } Property Value Type Description Int32 Implements IActivityLogGroup.Depth | Improve this Doc View Source Exception Gets the associated Exception if it exists. Declaration public Exception Exception { get; } Property Value Type Description Exception Implements IActivityLogGroup.Exception | Improve this Doc View Source ExceptionData Gets the CK.Core.CKExceptionData that captures exception information if it exists. Returns null if no Exception exists. Declaration public CKExceptionData ExceptionData { get; } Property Value Type Description CK.Core.CKExceptionData Implements IActivityLogGroup.ExceptionData | Improve this Doc View Source FileName Gets the file name of the source code that issued the log. Declaration public string FileName { get; } Property Value Type Description String Implements IActivityLogGroup.FileName | Improve this Doc View Source GroupLevel Gets the level associated to this group. The IsFiltered can be set here: use MaskedGroupLevel to get the actual level from Trace to Fatal . Declaration public LogLevel GroupLevel { get; } Property Value Type Description LogLevel Implements IActivityLogGroup.GroupLevel | Improve this Doc View Source GroupTags Gets the tags for the log group. Declaration public CKTrait GroupTags { get; } Property Value Type Description CK.Core.CKTrait Implements IActivityLogGroup.GroupTags | Improve this Doc View Source GroupText Gets the text with which this group has been opened. Null if and only if the group is closed. Declaration public string GroupText { get; } Property Value Type Description String Implements IActivityLogGroup.GroupText | Improve this Doc View Source IsGroupTextTheExceptionMessage Gets whether the GroupText is actually the Exception message. Declaration public bool IsGroupTextTheExceptionMessage { get; } Property Value Type Description Boolean Implements IActivityLogGroup.IsGroupTextTheExceptionMessage | Improve this Doc View Source IsRejectedGroup Gets whether the group is rejected. Declaration public bool IsRejectedGroup { get; } Property Value Type Description Boolean Implements IDisposableGroup.IsRejectedGroup | Improve this Doc View Source LineNumber Gets the line number of the FileName that issued the log. Declaration public int LineNumber { get; } Property Value Type Description Int32 Implements IActivityLogGroup.LineNumber | Improve this Doc View Source LogTime Gets the log time for the log. Declaration public DateTimeStamp LogTime { get; } Property Value Type Description CK.Core.DateTimeStamp Implements IActivityLogGroup.LogTime | Improve this Doc View Source MaskedGroupLevel Gets the actual level (from Trace to Fatal ) associated to this group without IsFiltered bit. Declaration public LogLevel MaskedGroupLevel { get; } Property Value Type Description LogLevel Implements IActivityLogGroup.MaskedGroupLevel | Improve this Doc View Source Parent Get the previous group in its origin monitor. Null if this group is a top level group. Declaration public IActivityLogGroup Parent { get; } Property Value Type Description IActivityLogGroup Implements IActivityLogGroup.Parent | Improve this Doc View Source SavedMonitorFilter Gets or sets the MinimalFilter that will be restored when group will be closed. Initialized with the current value of IActivityMonitor.Filter when the group has been opened. Declaration public LogFilter SavedMonitorFilter { get; } Property Value Type Description LogFilter Implements IActivityLogGroup.SavedMonitorFilter | Improve this Doc View Source SavedMonitorTags Gets or sets the AutoTags that will be restored when group will be closed. Initialized with the current value of IActivityMonitor.Tags when the group has been opened. Declaration public CKTrait SavedMonitorTags { get; } Property Value Type Description CK.Core.CKTrait Implements IActivityLogGroup.SavedMonitorTags Methods | Improve this Doc View Source EnsureExceptionData() Gets or creates the CK.Core.CKExceptionData that captures exception information. If Exception is null, this returns null. Declaration public CKExceptionData EnsureExceptionData() Returns Type Description CK.Core.CKExceptionData Implements IActivityLogGroup.EnsureExceptionData() Explicit Interface Implementations | Improve this Doc View Source IDisposableGroup.ConcludeWith(Func<String>) Declaration IDisposable IDisposableGroup.ConcludeWith(Func<string> getConclusionText) Parameters Type Name Description Func < String > getConclusionText Returns Type Description IDisposable Implements IDisposableGroup.ConcludeWith(Func<String>) | Improve this Doc View Source IDisposable.Dispose() Ensures that any groups opened after this one are closed before closing this one. Declaration void IDisposable.Dispose() Implements IDisposable.Dispose()"
  },
  "api/CK.Core.LogFilterMatcherExtension.html": {
    "href": "api/CK.Core.LogFilterMatcherExtension.html",
    "title": "Class LogFilterMatcherExtension | CK-Text",
    "keywords": "Class LogFilterMatcherExtension Supports LogFilter and LogLevelFilter extension methods. Inheritance Object LogFilterMatcherExtension Inherited Members Object.ToString() Object.Equals(Object) Object.Equals(Object, Object) Object.ReferenceEquals(Object, Object) Object.GetHashCode() Object.GetType() Object.MemberwiseClone() Namespace : CK.Core Assembly : CK.ActivityMonitor.dll Syntax public static class LogFilterMatcherExtension Methods | Improve this Doc View Source MatchLogFilter(StringMatcher, out LogFilter) Matches a LogFilter : it can be a predefined filter as (\"Undefined\", \"Debug\", \"Verbose\", etc.) or as {GroupLogLevelFilter,LineLogLevelFilter} pairs like \"{None,None}\", \"{Error,Trace}\". Declaration public static bool MatchLogFilter(this StringMatcher m, out LogFilter f) Parameters Type Name Description CK.Text.StringMatcher m This CK.Text.StringMatcher . LogFilter f Resulting filter. Returns Type Description Boolean True on success, false on error. | Improve this Doc View Source MatchLogLevelFilter(StringMatcher, out LogLevelFilter) Matches a LogLevelFilter . Declaration public static bool MatchLogLevelFilter(this StringMatcher this, out LogLevelFilter level) Parameters Type Name Description CK.Text.StringMatcher this This CK.Text.StringMatcher . LogLevelFilter level Resulting level. Returns Type Description Boolean True on success, false on error."
  },
  "api/CK.Core.ActivityMonitorErrorCounter.html": {
    "href": "api/CK.Core.ActivityMonitorErrorCounter.html",
    "title": "Class ActivityMonitorErrorCounter | CK-Text",
    "keywords": "Class ActivityMonitorErrorCounter Count fatal, error or warn that occurred. It can also automatically adds a conclusion to closed groups that summarizes the number of fatals, errors and warnings. Inheritance Object ActivityMonitorClient ActivityMonitorErrorCounter Inherited Members ActivityMonitorClient.Empty ActivityMonitorClient.MinimalFilter ActivityMonitorClient.OnTopicChanged(String, String, Int32) ActivityMonitorClient.OnAutoTagsChanged(CKTrait) ActivityMonitorClient.CreateMultipleRegisterOnBoundClientException(IActivityMonitorBoundClient) ActivityMonitorClient.IActivityMonitorClient.OnUnfilteredLog(ActivityMonitorLogData) ActivityMonitorClient.IActivityMonitorClient.OnOpenGroup(IActivityLogGroup) ActivityMonitorClient.IActivityMonitorClient.OnGroupClosing(IActivityLogGroup, List<ActivityLogGroupConclusion>) ActivityMonitorClient.IActivityMonitorClient.OnGroupClosed(IActivityLogGroup, IReadOnlyList<ActivityLogGroupConclusion>) ActivityMonitorClient.IActivityMonitorClient.OnTopicChanged(String, String, Int32) ActivityMonitorClient.IActivityMonitorClient.OnAutoTagsChanged(CKTrait) Object.ToString() Object.Equals(Object) Object.Equals(Object, Object) Object.ReferenceEquals(Object, Object) Object.GetHashCode() Object.GetType() Object.MemberwiseClone() Namespace : CK.Core Assembly : CK.ActivityMonitor.dll Syntax public sealed class ActivityMonitorErrorCounter : ActivityMonitorClient, IActivityMonitorBoundClient, IActivityMonitorClient Constructors | Improve this Doc View Source ActivityMonitorErrorCounter(Boolean) Initializes a new error counter with GenerateConclusion sets to false. Declaration public ActivityMonitorErrorCounter(bool generateConclusion = false) Parameters Type Name Description Boolean generateConclusion True to generate a conclusion. See GenerateConclusion . Fields | Improve this Doc View Source TagErrorCounter Gets the tag used for generated error conclusions (\"c:ErrorCounter\") when GenerateConclusion is true. Declaration public static readonly CKTrait TagErrorCounter Field Value Type Description CK.Core.CKTrait Properties | Improve this Doc View Source Current Gets the current ActivityMonitorErrorCounter.State . Declaration public ActivityMonitorErrorCounter.State Current { get; } Property Value Type Description ActivityMonitorErrorCounter.State | Improve this Doc View Source GenerateConclusion Gets or sets whether the Group conclusion must be generated. Defaults to false. Declaration public bool GenerateConclusion { get; set; } Property Value Type Description Boolean | Improve this Doc View Source Root Gets the root ActivityMonitorErrorCounter.State . Declaration public ActivityMonitorErrorCounter.State Root { get; } Property Value Type Description ActivityMonitorErrorCounter.State Methods | Improve this Doc View Source OnGroupClosed(IActivityLogGroup, IReadOnlyList<ActivityLogGroupConclusion>) Restores current to the previous one (or keep it on the root if no opened group exist). Declaration protected override void OnGroupClosed(IActivityLogGroup group, IReadOnlyList<ActivityLogGroupConclusion> conclusions) Parameters Type Name Description IActivityLogGroup group The log group. IReadOnlyList < ActivityLogGroupConclusion > conclusions Texts that conclude the group. Overrides ActivityMonitorClient.OnGroupClosed(IActivityLogGroup, IReadOnlyList<ActivityLogGroupConclusion>) | Improve this Doc View Source OnGroupClosing(IActivityLogGroup, ref List<ActivityLogGroupConclusion>) Handles group conclusion. Declaration protected override void OnGroupClosing(IActivityLogGroup group, ref List<ActivityLogGroupConclusion> conclusions) Parameters Type Name Description IActivityLogGroup group The closing group. List < ActivityLogGroupConclusion > conclusions Mutable conclusions associated to the closing group. This can be null if no conclusions have been added yet. It is up to the first client that wants to add a conclusion to instantiate a new List object to carry the conclusions. Overrides ActivityMonitorClient.OnGroupClosing(IActivityLogGroup, ref List<ActivityLogGroupConclusion>) | Improve this Doc View Source OnOpenGroup(IActivityLogGroup) Updates error counters. Declaration protected override void OnOpenGroup(IActivityLogGroup group) Parameters Type Name Description IActivityLogGroup group The newly opened IActivityLogGroup . Overrides ActivityMonitorClient.OnOpenGroup(IActivityLogGroup) | Improve this Doc View Source OnUnfilteredLog(ActivityMonitorLogData) Updates error counters. Declaration protected override void OnUnfilteredLog(ActivityMonitorLogData data) Parameters Type Name Description ActivityMonitorLogData data Log data. Never null. Overrides ActivityMonitorClient.OnUnfilteredLog(ActivityMonitorLogData) Explicit Interface Implementations | Improve this Doc View Source IActivityMonitorBoundClient.IsDead Declaration bool IActivityMonitorBoundClient.IsDead { get; } Returns Type Description Boolean Implements IActivityMonitorBoundClient.IsDead | Improve this Doc View Source IActivityMonitorBoundClient.SetMonitor(IActivityMonitorImpl, Boolean) Declaration void IActivityMonitorBoundClient.SetMonitor(IActivityMonitorImpl source, bool forceBuggyRemove) Parameters Type Name Description IActivityMonitorImpl source Boolean forceBuggyRemove Implements IActivityMonitorBoundClient.SetMonitor(IActivityMonitorImpl, Boolean)"
  },
  "api/CK.Core.ActivityMonitorSendExtension.html": {
    "href": "api/CK.Core.ActivityMonitorSendExtension.html",
    "title": "Class ActivityMonitorSendExtension | CK-Text",
    "keywords": "Class ActivityMonitorSendExtension Provides Send extension methods for IActivityMonitorGroupSender . Inheritance Object ActivityMonitorSendExtension Inherited Members Object.ToString() Object.Equals(Object) Object.Equals(Object, Object) Object.ReferenceEquals(Object, Object) Object.GetHashCode() Object.GetType() Object.MemberwiseClone() Namespace : CK.Core Assembly : CK.ActivityMonitor.StandardSender.dll Syntax public static class ActivityMonitorSendExtension Methods | Improve this Doc View Source Send(IActivityMonitorGroupSender, CKTrait, Func<String>) Sends a text obtained through a delegate with associated tags. The delegate will be called only if the log is not filtered. Declaration public static IDisposableGroup Send(this IActivityMonitorGroupSender this, CKTrait tags, Func<string> text) Parameters Type Name Description IActivityMonitorGroupSender this This IActivityMonitorGroupSender object. CK.Core.CKTrait tags Tags for the log. Func < String > text Function that returns a string. Must not be null. Returns Type Description IDisposableGroup | Improve this Doc View Source Send(IActivityMonitorGroupSender, CKTrait, String) Sends a text with associated tags. Declaration public static IDisposableGroup Send(this IActivityMonitorGroupSender this, CKTrait tags, string text) Parameters Type Name Description IActivityMonitorGroupSender this This IActivityMonitorGroupSender object. CK.Core.CKTrait tags Tags for the log. String text The text of the log. Returns Type Description IDisposableGroup | Improve this Doc View Source Send(IActivityMonitorGroupSender, CKTrait, String, Object) Sends a formatted text with associated tags. Declaration public static IDisposableGroup Send(this IActivityMonitorGroupSender this, CKTrait tags, string format, object arg0) Parameters Type Name Description IActivityMonitorGroupSender this This IActivityMonitorGroupSender object. CK.Core.CKTrait tags Tags for the log. String format The text format of the log with 1 placeholders. Object arg0 Parameter to format (placeholder {0}). Returns Type Description IDisposableGroup | Improve this Doc View Source Send(IActivityMonitorGroupSender, CKTrait, String, Object, Object) Sends a formatted text with associated tags. Declaration public static IDisposableGroup Send(this IActivityMonitorGroupSender this, CKTrait tags, string format, object arg0, object arg1) Parameters Type Name Description IActivityMonitorGroupSender this This IActivityMonitorGroupSender object. CK.Core.CKTrait tags Tags for the log. String format The text format of the log with 2 placeholders. Object arg0 Parameter to format (placeholder {0}). Object arg1 Parameter to format (placeholder {1}). Returns Type Description IDisposableGroup | Improve this Doc View Source Send(IActivityMonitorGroupSender, CKTrait, String, Object, Object, Object) Sends a formatted text with associated tags. Declaration public static IDisposableGroup Send(this IActivityMonitorGroupSender this, CKTrait tags, string format, object arg0, object arg1, object arg2) Parameters Type Name Description IActivityMonitorGroupSender this This IActivityMonitorGroupSender object. CK.Core.CKTrait tags Tags for the log. String format The text format of the log with 3 placeholders. Object arg0 Parameter to format (placeholder {0}). Object arg1 Parameter to format (placeholder {1}). Object arg2 Parameter to format (placeholder {2}). Returns Type Description IDisposableGroup | Improve this Doc View Source Send(IActivityMonitorGroupSender, CKTrait, String, Object, Object, Object, Object) Sends a formatted text with associated tags. Declaration public static IDisposableGroup Send(this IActivityMonitorGroupSender this, CKTrait tags, string format, object arg0, object arg1, object arg2, object arg3) Parameters Type Name Description IActivityMonitorGroupSender this This IActivityMonitorGroupSender object. CK.Core.CKTrait tags Tags for the log. String format The text format of the log with 4 placeholders. Object arg0 Parameter to format (placeholder {0}). Object arg1 Parameter to format (placeholder {1}). Object arg2 Parameter to format (placeholder {2}). Object arg3 Parameter to format (placeholder {3}). Returns Type Description IDisposableGroup | Improve this Doc View Source Send(IActivityMonitorGroupSender, CKTrait, String, Object[]) Sends a formatted text with associated tags. Declaration public static IDisposableGroup Send(this IActivityMonitorGroupSender this, CKTrait tags, string format, params object[] arguments) Parameters Type Name Description IActivityMonitorGroupSender this This IActivityMonitorGroupSender object. CK.Core.CKTrait tags Tags for the log. String format The text format of the log with 5 placeholders. Object [] arguments Multiple parameters to format. Returns Type Description IDisposableGroup | Improve this Doc View Source Send(IActivityMonitorGroupSender, Exception) Sends a log with an exception. Declaration public static IDisposableGroup Send(this IActivityMonitorGroupSender this, Exception ex) Parameters Type Name Description IActivityMonitorGroupSender this This IActivityMonitorGroupSender object. Exception ex The exception. Must not be null. Returns Type Description IDisposableGroup | Improve this Doc View Source Send(IActivityMonitorGroupSender, Exception, CKTrait) Sends a log with an exception and associated tags. Declaration public static IDisposableGroup Send(this IActivityMonitorGroupSender this, Exception ex, CKTrait tags) Parameters Type Name Description IActivityMonitorGroupSender this This IActivityMonitorGroupSender object. Exception ex The exception. Must not be null. CK.Core.CKTrait tags Tags for the log. Returns Type Description IDisposableGroup | Improve this Doc View Source Send(IActivityMonitorGroupSender, Exception, CKTrait, Func<String>) Sends a text obtained through a delegate with an exception and associated tags. The delegate will be called only if the log is not filtered. Declaration public static IDisposableGroup Send(this IActivityMonitorGroupSender this, Exception ex, CKTrait tags, Func<string> text) Parameters Type Name Description IActivityMonitorGroupSender this This IActivityMonitorGroupSender object. Exception ex The exception. Must not be null. CK.Core.CKTrait tags Tags for the log. Func < String > text Function that returns a string. Must not be null. Returns Type Description IDisposableGroup | Improve this Doc View Source Send(IActivityMonitorGroupSender, Exception, CKTrait, String) Sends a text with an exception and associated tags. Declaration public static IDisposableGroup Send(this IActivityMonitorGroupSender this, Exception ex, CKTrait tags, string text) Parameters Type Name Description IActivityMonitorGroupSender this This IActivityMonitorGroupSender object. Exception ex The exception. Must not be null. CK.Core.CKTrait tags Tags for the log. String text The text of the log. Returns Type Description IDisposableGroup | Improve this Doc View Source Send(IActivityMonitorGroupSender, Exception, CKTrait, String, Object) Sends a formatted text with an exception and associated tags. Declaration public static IDisposableGroup Send(this IActivityMonitorGroupSender this, Exception ex, CKTrait tags, string format, object arg0) Parameters Type Name Description IActivityMonitorGroupSender this This IActivityMonitorGroupSender object. Exception ex The exception. Must not be null. CK.Core.CKTrait tags Tags for the log. String format The text format of the log with 1 placeholders. Object arg0 Parameter to format (placeholder {0}). Returns Type Description IDisposableGroup | Improve this Doc View Source Send(IActivityMonitorGroupSender, Exception, CKTrait, String, Object, Object) Sends a formatted text with an exception and associated tags. Declaration public static IDisposableGroup Send(this IActivityMonitorGroupSender this, Exception ex, CKTrait tags, string format, object arg0, object arg1) Parameters Type Name Description IActivityMonitorGroupSender this This IActivityMonitorGroupSender object. Exception ex The exception. Must not be null. CK.Core.CKTrait tags Tags for the log. String format The text format of the log with 2 placeholders. Object arg0 Parameter to format (placeholder {0}). Object arg1 Parameter to format (placeholder {1}). Returns Type Description IDisposableGroup | Improve this Doc View Source Send(IActivityMonitorGroupSender, Exception, CKTrait, String, Object, Object, Object) Sends a formatted text with an exception and associated tags. Declaration public static IDisposableGroup Send(this IActivityMonitorGroupSender this, Exception ex, CKTrait tags, string format, object arg0, object arg1, object arg2) Parameters Type Name Description IActivityMonitorGroupSender this This IActivityMonitorGroupSender object. Exception ex The exception. Must not be null. CK.Core.CKTrait tags Tags for the log. String format The text format of the log with 3 placeholders. Object arg0 Parameter to format (placeholder {0}). Object arg1 Parameter to format (placeholder {1}). Object arg2 Parameter to format (placeholder {2}). Returns Type Description IDisposableGroup | Improve this Doc View Source Send(IActivityMonitorGroupSender, Exception, CKTrait, String, Object, Object, Object, Object) Sends a formatted text with an exception and associated tags. Declaration public static IDisposableGroup Send(this IActivityMonitorGroupSender this, Exception ex, CKTrait tags, string format, object arg0, object arg1, object arg2, object arg3) Parameters Type Name Description IActivityMonitorGroupSender this This IActivityMonitorGroupSender object. Exception ex The exception. Must not be null. CK.Core.CKTrait tags Tags for the log. String format The text format of the log with 4 placeholders. Object arg0 Parameter to format (placeholder {0}). Object arg1 Parameter to format (placeholder {1}). Object arg2 Parameter to format (placeholder {2}). Object arg3 Parameter to format (placeholder {3}). Returns Type Description IDisposableGroup | Improve this Doc View Source Send(IActivityMonitorGroupSender, Exception, CKTrait, String, Object[]) Sends a formatted text with an exception and associated tags. Declaration public static IDisposableGroup Send(this IActivityMonitorGroupSender this, Exception ex, CKTrait tags, string format, params object[] arguments) Parameters Type Name Description IActivityMonitorGroupSender this This IActivityMonitorGroupSender object. Exception ex The exception. Must not be null. CK.Core.CKTrait tags Tags for the log. String format The text format of the log with 5 placeholders. Object [] arguments Multiple parameters to format. Returns Type Description IDisposableGroup | Improve this Doc View Source Send(IActivityMonitorGroupSender, Exception, Func<String>) Sends a text obtained through a delegate with an exception. The delegate will be called only if the log is not filtered. Declaration public static IDisposableGroup Send(this IActivityMonitorGroupSender this, Exception ex, Func<string> text) Parameters Type Name Description IActivityMonitorGroupSender this This IActivityMonitorGroupSender object. Exception ex The exception. Must not be null. Func < String > text Function that returns a string. Must not be null. Returns Type Description IDisposableGroup | Improve this Doc View Source Send(IActivityMonitorGroupSender, Exception, String) Sends a text with an exception. Declaration public static IDisposableGroup Send(this IActivityMonitorGroupSender this, Exception ex, string text) Parameters Type Name Description IActivityMonitorGroupSender this This IActivityMonitorGroupSender object. Exception ex The exception. Must not be null. String text The text of the log. Returns Type Description IDisposableGroup | Improve this Doc View Source Send(IActivityMonitorGroupSender, Exception, String, Object) Sends a formatted text with an exception. Declaration public static IDisposableGroup Send(this IActivityMonitorGroupSender this, Exception ex, string format, object arg0) Parameters Type Name Description IActivityMonitorGroupSender this This IActivityMonitorGroupSender object. Exception ex The exception. Must not be null. String format The text format of the log with 1 placeholders. Object arg0 Parameter to format (placeholder {0}). Returns Type Description IDisposableGroup | Improve this Doc View Source Send(IActivityMonitorGroupSender, Exception, String, Object, Object) Sends a formatted text with an exception. Declaration public static IDisposableGroup Send(this IActivityMonitorGroupSender this, Exception ex, string format, object arg0, object arg1) Parameters Type Name Description IActivityMonitorGroupSender this This IActivityMonitorGroupSender object. Exception ex The exception. Must not be null. String format The text format of the log with 2 placeholders. Object arg0 Parameter to format (placeholder {0}). Object arg1 Parameter to format (placeholder {1}). Returns Type Description IDisposableGroup | Improve this Doc View Source Send(IActivityMonitorGroupSender, Exception, String, Object, Object, Object) Sends a formatted text with an exception. Declaration public static IDisposableGroup Send(this IActivityMonitorGroupSender this, Exception ex, string format, object arg0, object arg1, object arg2) Parameters Type Name Description IActivityMonitorGroupSender this This IActivityMonitorGroupSender object. Exception ex The exception. Must not be null. String format The text format of the log with 3 placeholders. Object arg0 Parameter to format (placeholder {0}). Object arg1 Parameter to format (placeholder {1}). Object arg2 Parameter to format (placeholder {2}). Returns Type Description IDisposableGroup | Improve this Doc View Source Send(IActivityMonitorGroupSender, Exception, String, Object, Object, Object, Object) Sends a formatted text with an exception. Declaration public static IDisposableGroup Send(this IActivityMonitorGroupSender this, Exception ex, string format, object arg0, object arg1, object arg2, object arg3) Parameters Type Name Description IActivityMonitorGroupSender this This IActivityMonitorGroupSender object. Exception ex The exception. Must not be null. String format The text format of the log with 4 placeholders. Object arg0 Parameter to format (placeholder {0}). Object arg1 Parameter to format (placeholder {1}). Object arg2 Parameter to format (placeholder {2}). Object arg3 Parameter to format (placeholder {3}). Returns Type Description IDisposableGroup | Improve this Doc View Source Send(IActivityMonitorGroupSender, Exception, String, Object[]) Sends a formatted text with an exception. Declaration public static IDisposableGroup Send(this IActivityMonitorGroupSender this, Exception ex, string format, params object[] arguments) Parameters Type Name Description IActivityMonitorGroupSender this This IActivityMonitorGroupSender object. Exception ex The exception. Must not be null. String format The text format of the log with 5 placeholders. Object [] arguments Multiple parameters to format. Returns Type Description IDisposableGroup | Improve this Doc View Source Send(IActivityMonitorGroupSender, Func<String>) Sends a text obtained through a delegate. The delegate will be called only if the log is not filtered. Declaration public static IDisposableGroup Send(this IActivityMonitorGroupSender this, Func<string> text) Parameters Type Name Description IActivityMonitorGroupSender this This IActivityMonitorGroupSender object. Func < String > text Function that returns a string. Must not be null. Returns Type Description IDisposableGroup | Improve this Doc View Source Send(IActivityMonitorGroupSender, String) Sends a text. Declaration public static IDisposableGroup Send(this IActivityMonitorGroupSender this, string text) Parameters Type Name Description IActivityMonitorGroupSender this This IActivityMonitorGroupSender object. String text The text of the log. Returns Type Description IDisposableGroup | Improve this Doc View Source Send(IActivityMonitorGroupSender, String, Object) Sends a formatted text. Declaration public static IDisposableGroup Send(this IActivityMonitorGroupSender this, string format, object arg0) Parameters Type Name Description IActivityMonitorGroupSender this This IActivityMonitorGroupSender object. String format The text format of the log with 1 placeholders. Object arg0 Parameter to format (placeholder {0}). Returns Type Description IDisposableGroup | Improve this Doc View Source Send(IActivityMonitorGroupSender, String, Object, Object) Sends a formatted text. Declaration public static IDisposableGroup Send(this IActivityMonitorGroupSender this, string format, object arg0, object arg1) Parameters Type Name Description IActivityMonitorGroupSender this This IActivityMonitorGroupSender object. String format The text format of the log with 2 placeholders. Object arg0 Parameter to format (placeholder {0}). Object arg1 Parameter to format (placeholder {1}). Returns Type Description IDisposableGroup | Improve this Doc View Source Send(IActivityMonitorGroupSender, String, Object, Object, Object) Sends a formatted text. Declaration public static IDisposableGroup Send(this IActivityMonitorGroupSender this, string format, object arg0, object arg1, object arg2) Parameters Type Name Description IActivityMonitorGroupSender this This IActivityMonitorGroupSender object. String format The text format of the log with 3 placeholders. Object arg0 Parameter to format (placeholder {0}). Object arg1 Parameter to format (placeholder {1}). Object arg2 Parameter to format (placeholder {2}). Returns Type Description IDisposableGroup | Improve this Doc View Source Send(IActivityMonitorGroupSender, String, Object, Object, Object, Object) Sends a formatted text. Declaration public static IDisposableGroup Send(this IActivityMonitorGroupSender this, string format, object arg0, object arg1, object arg2, object arg3) Parameters Type Name Description IActivityMonitorGroupSender this This IActivityMonitorGroupSender object. String format The text format of the log with 4 placeholders. Object arg0 Parameter to format (placeholder {0}). Object arg1 Parameter to format (placeholder {1}). Object arg2 Parameter to format (placeholder {2}). Object arg3 Parameter to format (placeholder {3}). Returns Type Description IDisposableGroup | Improve this Doc View Source Send(IActivityMonitorGroupSender, String, Object[]) Sends a formatted text. Declaration public static IDisposableGroup Send(this IActivityMonitorGroupSender this, string format, params object[] arguments) Parameters Type Name Description IActivityMonitorGroupSender this This IActivityMonitorGroupSender object. String format The text format of the log with 5 placeholders. Object [] arguments Multiple parameters to format. Returns Type Description IDisposableGroup | Improve this Doc View Source Send(IActivityMonitorLineSender, CKTrait, Func<String>) Sends a text obtained through a delegate with associated tags. The delegate will be called only if the log is not filtered. Declaration public static void Send(this IActivityMonitorLineSender this, CKTrait tags, Func<string> text) Parameters Type Name Description IActivityMonitorLineSender this This IActivityMonitorLineSender object. CK.Core.CKTrait tags Tags for the log. Func < String > text Function that returns a string. Must not be null. | Improve this Doc View Source Send(IActivityMonitorLineSender, CKTrait, String) Sends a text with associated tags. Declaration public static void Send(this IActivityMonitorLineSender this, CKTrait tags, string text) Parameters Type Name Description IActivityMonitorLineSender this This IActivityMonitorLineSender object. CK.Core.CKTrait tags Tags for the log. String text The text of the log. | Improve this Doc View Source Send(IActivityMonitorLineSender, CKTrait, String, Object) Sends a formatted text with associated tags. Declaration public static void Send(this IActivityMonitorLineSender this, CKTrait tags, string format, object arg0) Parameters Type Name Description IActivityMonitorLineSender this This IActivityMonitorLineSender object. CK.Core.CKTrait tags Tags for the log. String format The text format of the log with 1 placeholders. Object arg0 Parameter to format (placeholder {0}). | Improve this Doc View Source Send(IActivityMonitorLineSender, CKTrait, String, Object, Object) Sends a formatted text with associated tags. Declaration public static void Send(this IActivityMonitorLineSender this, CKTrait tags, string format, object arg0, object arg1) Parameters Type Name Description IActivityMonitorLineSender this This IActivityMonitorLineSender object. CK.Core.CKTrait tags Tags for the log. String format The text format of the log with 2 placeholders. Object arg0 Parameter to format (placeholder {0}). Object arg1 Parameter to format (placeholder {1}). | Improve this Doc View Source Send(IActivityMonitorLineSender, CKTrait, String, Object, Object, Object) Sends a formatted text with associated tags. Declaration public static void Send(this IActivityMonitorLineSender this, CKTrait tags, string format, object arg0, object arg1, object arg2) Parameters Type Name Description IActivityMonitorLineSender this This IActivityMonitorLineSender object. CK.Core.CKTrait tags Tags for the log. String format The text format of the log with 3 placeholders. Object arg0 Parameter to format (placeholder {0}). Object arg1 Parameter to format (placeholder {1}). Object arg2 Parameter to format (placeholder {2}). | Improve this Doc View Source Send(IActivityMonitorLineSender, CKTrait, String, Object[]) Sends a formatted text with associated tags. Declaration public static void Send(this IActivityMonitorLineSender this, CKTrait tags, string format, params object[] arguments) Parameters Type Name Description IActivityMonitorLineSender this This IActivityMonitorLineSender object. CK.Core.CKTrait tags Tags for the log. String format The text format of the log with 4 placeholders. Object [] arguments Multiple parameters to format. | Improve this Doc View Source Send(IActivityMonitorLineSender, Exception) Sends a log with an exception. Declaration public static void Send(this IActivityMonitorLineSender this, Exception ex) Parameters Type Name Description IActivityMonitorLineSender this This IActivityMonitorLineSender object. Exception ex The exception. Must not be null. | Improve this Doc View Source Send(IActivityMonitorLineSender, Exception, CKTrait) Sends a log with an exception and associated tags. Declaration public static void Send(this IActivityMonitorLineSender this, Exception ex, CKTrait tags) Parameters Type Name Description IActivityMonitorLineSender this This IActivityMonitorLineSender object. Exception ex The exception. Must not be null. CK.Core.CKTrait tags Tags for the log. | Improve this Doc View Source Send(IActivityMonitorLineSender, Exception, CKTrait, Func<String>) Sends a text obtained through a delegate with an exception and associated tags. The delegate will be called only if the log is not filtered. Declaration public static void Send(this IActivityMonitorLineSender this, Exception ex, CKTrait tags, Func<string> text) Parameters Type Name Description IActivityMonitorLineSender this This IActivityMonitorLineSender object. Exception ex The exception. Must not be null. CK.Core.CKTrait tags Tags for the log. Func < String > text Function that returns a string. Must not be null. | Improve this Doc View Source Send(IActivityMonitorLineSender, Exception, CKTrait, String) Sends a text with an exception and associated tags. Declaration public static void Send(this IActivityMonitorLineSender this, Exception ex, CKTrait tags, string text) Parameters Type Name Description IActivityMonitorLineSender this This IActivityMonitorLineSender object. Exception ex The exception. Must not be null. CK.Core.CKTrait tags Tags for the log. String text The text of the log. | Improve this Doc View Source Send(IActivityMonitorLineSender, Exception, CKTrait, String, Object) Sends a formatted text with an exception and associated tags. Declaration public static void Send(this IActivityMonitorLineSender this, Exception ex, CKTrait tags, string format, object arg0) Parameters Type Name Description IActivityMonitorLineSender this This IActivityMonitorLineSender object. Exception ex The exception. Must not be null. CK.Core.CKTrait tags Tags for the log. String format The text format of the log with 1 placeholders. Object arg0 Parameter to format (placeholder {0}). | Improve this Doc View Source Send(IActivityMonitorLineSender, Exception, CKTrait, String, Object, Object) Sends a formatted text with an exception and associated tags. Declaration public static void Send(this IActivityMonitorLineSender this, Exception ex, CKTrait tags, string format, object arg0, object arg1) Parameters Type Name Description IActivityMonitorLineSender this This IActivityMonitorLineSender object. Exception ex The exception. Must not be null. CK.Core.CKTrait tags Tags for the log. String format The text format of the log with 2 placeholders. Object arg0 Parameter to format (placeholder {0}). Object arg1 Parameter to format (placeholder {1}). | Improve this Doc View Source Send(IActivityMonitorLineSender, Exception, CKTrait, String, Object, Object, Object) Sends a formatted text with an exception and associated tags. Declaration public static void Send(this IActivityMonitorLineSender this, Exception ex, CKTrait tags, string format, object arg0, object arg1, object arg2) Parameters Type Name Description IActivityMonitorLineSender this This IActivityMonitorLineSender object. Exception ex The exception. Must not be null. CK.Core.CKTrait tags Tags for the log. String format The text format of the log with 3 placeholders. Object arg0 Parameter to format (placeholder {0}). Object arg1 Parameter to format (placeholder {1}). Object arg2 Parameter to format (placeholder {2}). | Improve this Doc View Source Send(IActivityMonitorLineSender, Exception, CKTrait, String, Object[]) Sends a formatted text with an exception and associated tags. Declaration public static void Send(this IActivityMonitorLineSender this, Exception ex, CKTrait tags, string format, params object[] arguments) Parameters Type Name Description IActivityMonitorLineSender this This IActivityMonitorLineSender object. Exception ex The exception. Must not be null. CK.Core.CKTrait tags Tags for the log. String format The text format of the log with 4 placeholders. Object [] arguments Multiple parameters to format. | Improve this Doc View Source Send(IActivityMonitorLineSender, Exception, Func<String>) Sends a text obtained through a delegate with an exception. The delegate will be called only if the log is not filtered. Declaration public static void Send(this IActivityMonitorLineSender this, Exception ex, Func<string> text) Parameters Type Name Description IActivityMonitorLineSender this This IActivityMonitorLineSender object. Exception ex The exception. Must not be null. Func < String > text Function that returns a string. Must not be null. | Improve this Doc View Source Send(IActivityMonitorLineSender, Exception, String) Sends a text with an exception. Declaration public static void Send(this IActivityMonitorLineSender this, Exception ex, string text) Parameters Type Name Description IActivityMonitorLineSender this This IActivityMonitorLineSender object. Exception ex The exception. Must not be null. String text The text of the log. | Improve this Doc View Source Send(IActivityMonitorLineSender, Exception, String, Object) Sends a formatted text with an exception. Declaration public static void Send(this IActivityMonitorLineSender this, Exception ex, string format, object arg0) Parameters Type Name Description IActivityMonitorLineSender this This IActivityMonitorLineSender object. Exception ex The exception. Must not be null. String format The text format of the log with 1 placeholders. Object arg0 Parameter to format (placeholder {0}). | Improve this Doc View Source Send(IActivityMonitorLineSender, Exception, String, Object, Object) Sends a formatted text with an exception. Declaration public static void Send(this IActivityMonitorLineSender this, Exception ex, string format, object arg0, object arg1) Parameters Type Name Description IActivityMonitorLineSender this This IActivityMonitorLineSender object. Exception ex The exception. Must not be null. String format The text format of the log with 2 placeholders. Object arg0 Parameter to format (placeholder {0}). Object arg1 Parameter to format (placeholder {1}). | Improve this Doc View Source Send(IActivityMonitorLineSender, Exception, String, Object, Object, Object) Sends a formatted text with an exception. Declaration public static void Send(this IActivityMonitorLineSender this, Exception ex, string format, object arg0, object arg1, object arg2) Parameters Type Name Description IActivityMonitorLineSender this This IActivityMonitorLineSender object. Exception ex The exception. Must not be null. String format The text format of the log with 3 placeholders. Object arg0 Parameter to format (placeholder {0}). Object arg1 Parameter to format (placeholder {1}). Object arg2 Parameter to format (placeholder {2}). | Improve this Doc View Source Send(IActivityMonitorLineSender, Exception, String, Object[]) Sends a formatted text with an exception. Declaration public static void Send(this IActivityMonitorLineSender this, Exception ex, string format, params object[] arguments) Parameters Type Name Description IActivityMonitorLineSender this This IActivityMonitorLineSender object. Exception ex The exception. Must not be null. String format The text format of the log with 4 placeholders. Object [] arguments Multiple parameters to format. | Improve this Doc View Source Send(IActivityMonitorLineSender, Func<String>) Sends a text obtained through a delegate. The delegate will be called only if the log is not filtered. Declaration public static void Send(this IActivityMonitorLineSender this, Func<string> text) Parameters Type Name Description IActivityMonitorLineSender this This IActivityMonitorLineSender object. Func < String > text Function that returns a string. Must not be null. | Improve this Doc View Source Send(IActivityMonitorLineSender, String) Sends a text. Declaration public static void Send(this IActivityMonitorLineSender this, string text) Parameters Type Name Description IActivityMonitorLineSender this This IActivityMonitorLineSender object. String text The text of the log. | Improve this Doc View Source Send(IActivityMonitorLineSender, String, Object) Sends a formatted text. Declaration public static void Send(this IActivityMonitorLineSender this, string format, object arg0) Parameters Type Name Description IActivityMonitorLineSender this This IActivityMonitorLineSender object. String format The text format of the log with 1 placeholders. Object arg0 Parameter to format (placeholder {0}). | Improve this Doc View Source Send(IActivityMonitorLineSender, String, Object, Object) Sends a formatted text. Declaration public static void Send(this IActivityMonitorLineSender this, string format, object arg0, object arg1) Parameters Type Name Description IActivityMonitorLineSender this This IActivityMonitorLineSender object. String format The text format of the log with 2 placeholders. Object arg0 Parameter to format (placeholder {0}). Object arg1 Parameter to format (placeholder {1}). | Improve this Doc View Source Send(IActivityMonitorLineSender, String, Object, Object, Object) Sends a formatted text. Declaration public static void Send(this IActivityMonitorLineSender this, string format, object arg0, object arg1, object arg2) Parameters Type Name Description IActivityMonitorLineSender this This IActivityMonitorLineSender object. String format The text format of the log with 3 placeholders. Object arg0 Parameter to format (placeholder {0}). Object arg1 Parameter to format (placeholder {1}). Object arg2 Parameter to format (placeholder {2}). | Improve this Doc View Source Send(IActivityMonitorLineSender, String, Object[]) Sends a formatted text. Declaration public static void Send(this IActivityMonitorLineSender this, string format, params object[] arguments) Parameters Type Name Description IActivityMonitorLineSender this This IActivityMonitorLineSender object. String format The text format of the log with 4 placeholders. Object [] arguments Multiple parameters to format. | Improve this Doc View Source Send<T>(IActivityMonitorGroupSender, CKTrait, Func<T, String>, T) Sends a text obtained through a parameterized delegate with associated tags. The delegate will be called only if the log is not filtered. Declaration public static IDisposableGroup Send<T>(this IActivityMonitorGroupSender this, CKTrait tags, Func<T, string> text, T param) Parameters Type Name Description IActivityMonitorGroupSender this This IActivityMonitorGroupSender object. CK.Core.CKTrait tags Tags for the log. Func <T, String > text Function that returns a string. Must not be null. T param Parameter of the text delegate. Returns Type Description IDisposableGroup Type Parameters Name Description T Type of the parameter that text accepts. | Improve this Doc View Source Send<T>(IActivityMonitorGroupSender, Exception, CKTrait, Func<T, String>, T) Sends a text obtained through a parameterized delegate with an exception and associated tags. The delegate will be called only if the log is not filtered. Declaration public static IDisposableGroup Send<T>(this IActivityMonitorGroupSender this, Exception ex, CKTrait tags, Func<T, string> text, T param) Parameters Type Name Description IActivityMonitorGroupSender this This IActivityMonitorGroupSender object. Exception ex The exception. Must not be null. CK.Core.CKTrait tags Tags for the log. Func <T, String > text Function that returns a string. Must not be null. T param Parameter of the text delegate. Returns Type Description IDisposableGroup Type Parameters Name Description T Type of the parameter that text accepts. | Improve this Doc View Source Send<T>(IActivityMonitorGroupSender, Exception, Func<T, String>, T) Sends a text obtained through a parameterized delegate with an exception. The delegate will be called only if the log is not filtered. Declaration public static IDisposableGroup Send<T>(this IActivityMonitorGroupSender this, Exception ex, Func<T, string> text, T param) Parameters Type Name Description IActivityMonitorGroupSender this This IActivityMonitorGroupSender object. Exception ex The exception. Must not be null. Func <T, String > text Function that returns a string. Must not be null. T param Parameter of the text delegate. Returns Type Description IDisposableGroup Type Parameters Name Description T Type of the parameter that text accepts. | Improve this Doc View Source Send<T>(IActivityMonitorGroupSender, Func<T, String>, T) Sends a text obtained through a parameterized delegate. The delegate will be called only if the log is not filtered. Declaration public static IDisposableGroup Send<T>(this IActivityMonitorGroupSender this, Func<T, string> text, T param) Parameters Type Name Description IActivityMonitorGroupSender this This IActivityMonitorGroupSender object. Func <T, String > text Function that returns a string. Must not be null. T param Parameter of the text delegate. Returns Type Description IDisposableGroup Type Parameters Name Description T Type of the parameter that text accepts. | Improve this Doc View Source Send<T>(IActivityMonitorLineSender, CKTrait, Func<T, String>, T) Sends a text obtained through a parameterized delegate with associated tags. The delegate will be called only if the log is not filtered. Declaration public static void Send<T>(this IActivityMonitorLineSender this, CKTrait tags, Func<T, string> text, T param) Parameters Type Name Description IActivityMonitorLineSender this This IActivityMonitorLineSender object. CK.Core.CKTrait tags Tags for the log. Func <T, String > text Function that returns a string. Must not be null. T param Parameter of the text delegate. Type Parameters Name Description T Type of the parameter that text accepts. | Improve this Doc View Source Send<T>(IActivityMonitorLineSender, Exception, CKTrait, Func<T, String>, T) Sends a text obtained through a parameterized delegate with an exception and associated tags. The delegate will be called only if the log is not filtered. Declaration public static void Send<T>(this IActivityMonitorLineSender this, Exception ex, CKTrait tags, Func<T, string> text, T param) Parameters Type Name Description IActivityMonitorLineSender this This IActivityMonitorLineSender object. Exception ex The exception. Must not be null. CK.Core.CKTrait tags Tags for the log. Func <T, String > text Function that returns a string. Must not be null. T param Parameter of the text delegate. Type Parameters Name Description T Type of the parameter that text accepts. | Improve this Doc View Source Send<T>(IActivityMonitorLineSender, Exception, Func<T, String>, T) Sends a text obtained through a parameterized delegate with an exception. The delegate will be called only if the log is not filtered. Declaration public static void Send<T>(this IActivityMonitorLineSender this, Exception ex, Func<T, string> text, T param) Parameters Type Name Description IActivityMonitorLineSender this This IActivityMonitorLineSender object. Exception ex The exception. Must not be null. Func <T, String > text Function that returns a string. Must not be null. T param Parameter of the text delegate. Type Parameters Name Description T Type of the parameter that text accepts. | Improve this Doc View Source Send<T>(IActivityMonitorLineSender, Func<T, String>, T) Sends a text obtained through a parameterized delegate. The delegate will be called only if the log is not filtered. Declaration public static void Send<T>(this IActivityMonitorLineSender this, Func<T, string> text, T param) Parameters Type Name Description IActivityMonitorLineSender this This IActivityMonitorLineSender object. Func <T, String > text Function that returns a string. Must not be null. T param Parameter of the text delegate. Type Parameters Name Description T Type of the parameter that text accepts. | Improve this Doc View Source Send<T1, T2>(IActivityMonitorGroupSender, CKTrait, Func<T1, T2, String>, T1, T2) Sends a text obtained through a parameterized delegate with associated tags. The delegate will be called only if the log is not filtered. Declaration public static IDisposableGroup Send<T1, T2>(this IActivityMonitorGroupSender this, CKTrait tags, Func<T1, T2, string> text, T1 param1, T2 param2) Parameters Type Name Description IActivityMonitorGroupSender this This IActivityMonitorGroupSender object. CK.Core.CKTrait tags Tags for the log. Func <T1, T2, String > text Function that returns a string. Must not be null. T1 param1 First parameter for the text delegate. T2 param2 Second parameter for the text delegate. Returns Type Description IDisposableGroup Type Parameters Name Description T1 Type of the first parameter that text accepts. T2 Type of the second parameter that text accepts. | Improve this Doc View Source Send<T1, T2>(IActivityMonitorGroupSender, Exception, CKTrait, Func<T1, T2, String>, T1, T2) Sends a text obtained through a parameterized delegate with an exception and associated tags. The delegate will be called only if the log is not filtered. Declaration public static IDisposableGroup Send<T1, T2>(this IActivityMonitorGroupSender this, Exception ex, CKTrait tags, Func<T1, T2, string> text, T1 param1, T2 param2) Parameters Type Name Description IActivityMonitorGroupSender this This IActivityMonitorGroupSender object. Exception ex The exception. Must not be null. CK.Core.CKTrait tags Tags for the log. Func <T1, T2, String > text Function that returns a string. Must not be null. T1 param1 First parameter for the text delegate. T2 param2 Second parameter for the text delegate. Returns Type Description IDisposableGroup Type Parameters Name Description T1 Type of the first parameter that text accepts. T2 Type of the second parameter that text accepts. | Improve this Doc View Source Send<T1, T2>(IActivityMonitorGroupSender, Exception, Func<T1, T2, String>, T1, T2) Sends a text obtained through a parameterized delegate with an exception. The delegate will be called only if the log is not filtered. Declaration public static IDisposableGroup Send<T1, T2>(this IActivityMonitorGroupSender this, Exception ex, Func<T1, T2, string> text, T1 param1, T2 param2) Parameters Type Name Description IActivityMonitorGroupSender this This IActivityMonitorGroupSender object. Exception ex The exception. Must not be null. Func <T1, T2, String > text Function that returns a string. Must not be null. T1 param1 First parameter for the text delegate. T2 param2 Second parameter for the text delegate. Returns Type Description IDisposableGroup Type Parameters Name Description T1 Type of the first parameter that text accepts. T2 Type of the second parameter that text accepts. | Improve this Doc View Source Send<T1, T2>(IActivityMonitorGroupSender, Func<T1, T2, String>, T1, T2) Sends a text obtained through a parameterized delegate. The delegate will be called only if the log is not filtered. Declaration public static IDisposableGroup Send<T1, T2>(this IActivityMonitorGroupSender this, Func<T1, T2, string> text, T1 param1, T2 param2) Parameters Type Name Description IActivityMonitorGroupSender this This IActivityMonitorGroupSender object. Func <T1, T2, String > text Function that returns a string. Must not be null. T1 param1 First parameter for the text delegate. T2 param2 Second parameter for the text delegate. Returns Type Description IDisposableGroup Type Parameters Name Description T1 Type of the first parameter that text accepts. T2 Type of the second parameter that text accepts. | Improve this Doc View Source Send<T1, T2>(IActivityMonitorLineSender, CKTrait, Func<T1, T2, String>, T1, T2) Sends a text obtained through a parameterized delegate with associated tags. The delegate will be called only if the log is not filtered. Declaration public static void Send<T1, T2>(this IActivityMonitorLineSender this, CKTrait tags, Func<T1, T2, string> text, T1 param1, T2 param2) Parameters Type Name Description IActivityMonitorLineSender this This IActivityMonitorLineSender object. CK.Core.CKTrait tags Tags for the log. Func <T1, T2, String > text Function that returns a string. Must not be null. T1 param1 First parameter for the text delegate. T2 param2 Second parameter for the text delegate. Type Parameters Name Description T1 Type of the first parameter that text accepts. T2 Type of the second parameter that text accepts. | Improve this Doc View Source Send<T1, T2>(IActivityMonitorLineSender, Exception, CKTrait, Func<T1, T2, String>, T1, T2) Sends a text obtained through a parameterized delegate with an exception and associated tags. The delegate will be called only if the log is not filtered. Declaration public static void Send<T1, T2>(this IActivityMonitorLineSender this, Exception ex, CKTrait tags, Func<T1, T2, string> text, T1 param1, T2 param2) Parameters Type Name Description IActivityMonitorLineSender this This IActivityMonitorLineSender object. Exception ex The exception. Must not be null. CK.Core.CKTrait tags Tags for the log. Func <T1, T2, String > text Function that returns a string. Must not be null. T1 param1 First parameter for the text delegate. T2 param2 Second parameter for the text delegate. Type Parameters Name Description T1 Type of the first parameter that text accepts. T2 Type of the second parameter that text accepts. | Improve this Doc View Source Send<T1, T2>(IActivityMonitorLineSender, Exception, Func<T1, T2, String>, T1, T2) Sends a text obtained through a parameterized delegate with an exception. The delegate will be called only if the log is not filtered. Declaration public static void Send<T1, T2>(this IActivityMonitorLineSender this, Exception ex, Func<T1, T2, string> text, T1 param1, T2 param2) Parameters Type Name Description IActivityMonitorLineSender this This IActivityMonitorLineSender object. Exception ex The exception. Must not be null. Func <T1, T2, String > text Function that returns a string. Must not be null. T1 param1 First parameter for the text delegate. T2 param2 Second parameter for the text delegate. Type Parameters Name Description T1 Type of the first parameter that text accepts. T2 Type of the second parameter that text accepts. | Improve this Doc View Source Send<T1, T2>(IActivityMonitorLineSender, Func<T1, T2, String>, T1, T2) Sends a text obtained through a parameterized delegate. The delegate will be called only if the log is not filtered. Declaration public static void Send<T1, T2>(this IActivityMonitorLineSender this, Func<T1, T2, string> text, T1 param1, T2 param2) Parameters Type Name Description IActivityMonitorLineSender this This IActivityMonitorLineSender object. Func <T1, T2, String > text Function that returns a string. Must not be null. T1 param1 First parameter for the text delegate. T2 param2 Second parameter for the text delegate. Type Parameters Name Description T1 Type of the first parameter that text accepts. T2 Type of the second parameter that text accepts. | Improve this Doc View Source Send<T1, T2, T3>(IActivityMonitorGroupSender, CKTrait, Func<T1, T2, T3, String>, T1, T2, T3) Sends a log with a text obtained through a parameterized delegate with associated tags. The delegate will be called only if the log is not filtered. Declaration public static IDisposableGroup Send<T1, T2, T3>(this IActivityMonitorGroupSender this, CKTrait tags, Func<T1, T2, T3, string> text, T1 param1, T2 param2, T3 param3) Parameters Type Name Description IActivityMonitorGroupSender this This IActivityMonitorGroupSender object. CK.Core.CKTrait tags Tags for the log. Func <T1, T2, T3, String > text Function that returns a string. Must not be null. T1 param1 First parameter for the text delegate. T2 param2 Second parameter for the text delegate. T3 param3 Third parameter for the text delegate. Returns Type Description IDisposableGroup Type Parameters Name Description T1 Type of the first parameter that text accepts. T2 Type of the second parameter that text accepts. T3 Type of the third parameter that text accepts. | Improve this Doc View Source Send<T1, T2, T3>(IActivityMonitorGroupSender, Exception, CKTrait, Func<T1, T2, T3, String>, T1, T2, T3) Sends a log with a text obtained through a parameterized delegate with an exception and associated tags. The delegate will be called only if the log is not filtered. Declaration public static IDisposableGroup Send<T1, T2, T3>(this IActivityMonitorGroupSender this, Exception ex, CKTrait tags, Func<T1, T2, T3, string> text, T1 param1, T2 param2, T3 param3) Parameters Type Name Description IActivityMonitorGroupSender this This IActivityMonitorGroupSender object. Exception ex The exception. Must not be null. CK.Core.CKTrait tags Tags for the log. Func <T1, T2, T3, String > text Function that returns a string. Must not be null. T1 param1 First parameter for the text delegate. T2 param2 Second parameter for the text delegate. T3 param3 Third parameter for the text delegate. Returns Type Description IDisposableGroup Type Parameters Name Description T1 Type of the first parameter that text accepts. T2 Type of the second parameter that text accepts. T3 Type of the third parameter that text accepts. | Improve this Doc View Source Send<T1, T2, T3>(IActivityMonitorGroupSender, Exception, Func<T1, T2, T3, String>, T1, T2, T3) Sends a log with a text obtained through a parameterized delegate with an exception. The delegate will be called only if the log is not filtered. Declaration public static IDisposableGroup Send<T1, T2, T3>(this IActivityMonitorGroupSender this, Exception ex, Func<T1, T2, T3, string> text, T1 param1, T2 param2, T3 param3) Parameters Type Name Description IActivityMonitorGroupSender this This IActivityMonitorGroupSender object. Exception ex The exception. Must not be null. Func <T1, T2, T3, String > text Function that returns a string. Must not be null. T1 param1 First parameter for the text delegate. T2 param2 Second parameter for the text delegate. T3 param3 Third parameter for the text delegate. Returns Type Description IDisposableGroup Type Parameters Name Description T1 Type of the first parameter that text accepts. T2 Type of the second parameter that text accepts. T3 Type of the third parameter that text accepts. | Improve this Doc View Source Send<T1, T2, T3>(IActivityMonitorGroupSender, Func<T1, T2, T3, String>, T1, T2, T3) Sends a log with a text obtained through a parameterized delegate. The delegate will be called only if the log is not filtered. Declaration public static IDisposableGroup Send<T1, T2, T3>(this IActivityMonitorGroupSender this, Func<T1, T2, T3, string> text, T1 param1, T2 param2, T3 param3) Parameters Type Name Description IActivityMonitorGroupSender this This IActivityMonitorGroupSender object. Func <T1, T2, T3, String > text Function that returns a string. Must not be null. T1 param1 First parameter for the text delegate. T2 param2 Second parameter for the text delegate. T3 param3 Third parameter for the text delegate. Returns Type Description IDisposableGroup Type Parameters Name Description T1 Type of the first parameter that text accepts. T2 Type of the second parameter that text accepts. T3 Type of the third parameter that text accepts. | Improve this Doc View Source Send<T1, T2, T3>(IActivityMonitorLineSender, CKTrait, Func<T1, T2, T3, String>, T1, T2, T3) Sends a log with a text obtained through a parameterized delegate with associated tags. The delegate will be called only if the log is not filtered. Declaration public static void Send<T1, T2, T3>(this IActivityMonitorLineSender this, CKTrait tags, Func<T1, T2, T3, string> text, T1 param1, T2 param2, T3 param3) Parameters Type Name Description IActivityMonitorLineSender this This IActivityMonitorLineSender object. CK.Core.CKTrait tags Tags for the log. Func <T1, T2, T3, String > text Function that returns a string. Must not be null. T1 param1 First parameter for the text delegate. T2 param2 Second parameter for the text delegate. T3 param3 Third parameter for the text delegate. Type Parameters Name Description T1 Type of the first parameter that text accepts. T2 Type of the second parameter that text accepts. T3 Type of the third parameter that text accepts. | Improve this Doc View Source Send<T1, T2, T3>(IActivityMonitorLineSender, Exception, CKTrait, Func<T1, T2, T3, String>, T1, T2, T3) Sends a log with a text obtained through a parameterized delegate with an exception and associated tags. The delegate will be called only if the log is not filtered. Declaration public static void Send<T1, T2, T3>(this IActivityMonitorLineSender this, Exception ex, CKTrait tags, Func<T1, T2, T3, string> text, T1 param1, T2 param2, T3 param3) Parameters Type Name Description IActivityMonitorLineSender this This IActivityMonitorLineSender object. Exception ex The exception. Must not be null. CK.Core.CKTrait tags Tags for the log. Func <T1, T2, T3, String > text Function that returns a string. Must not be null. T1 param1 First parameter for the text delegate. T2 param2 Second parameter for the text delegate. T3 param3 Third parameter for the text delegate. Type Parameters Name Description T1 Type of the first parameter that text accepts. T2 Type of the second parameter that text accepts. T3 Type of the third parameter that text accepts. | Improve this Doc View Source Send<T1, T2, T3>(IActivityMonitorLineSender, Exception, Func<T1, T2, T3, String>, T1, T2, T3) Sends a log with a text obtained through a parameterized delegate with an exception. The delegate will be called only if the log is not filtered. Declaration public static void Send<T1, T2, T3>(this IActivityMonitorLineSender this, Exception ex, Func<T1, T2, T3, string> text, T1 param1, T2 param2, T3 param3) Parameters Type Name Description IActivityMonitorLineSender this This IActivityMonitorLineSender object. Exception ex The exception. Must not be null. Func <T1, T2, T3, String > text Function that returns a string. Must not be null. T1 param1 First parameter for the text delegate. T2 param2 Second parameter for the text delegate. T3 param3 Third parameter for the text delegate. Type Parameters Name Description T1 Type of the first parameter that text accepts. T2 Type of the second parameter that text accepts. T3 Type of the third parameter that text accepts. | Improve this Doc View Source Send<T1, T2, T3>(IActivityMonitorLineSender, Func<T1, T2, T3, String>, T1, T2, T3) Sends a log with a text obtained through a parameterized delegate. The delegate will be called only if the log is not filtered. Declaration public static void Send<T1, T2, T3>(this IActivityMonitorLineSender this, Func<T1, T2, T3, string> text, T1 param1, T2 param2, T3 param3) Parameters Type Name Description IActivityMonitorLineSender this This IActivityMonitorLineSender object. Func <T1, T2, T3, String > text Function that returns a string. Must not be null. T1 param1 First parameter for the text delegate. T2 param2 Second parameter for the text delegate. T3 param3 Third parameter for the text delegate. Type Parameters Name Description T1 Type of the first parameter that text accepts. T2 Type of the second parameter that text accepts. T3 Type of the third parameter that text accepts."
  },
  "api/CK.Core.IActivityMonitor.html": {
    "href": "api/CK.Core.IActivityMonitor.html",
    "title": "Interface IActivityMonitor | CK-Text",
    "keywords": "Interface IActivityMonitor Defines the core Activity Monitor interface. Small is beautiful. Namespace : CK.Core Assembly : CK.ActivityMonitor.dll Syntax public interface IActivityMonitor Remarks This is not the same as a classical logging framework: the \"activity\" captures by an activity monitor is structured. It can be seen as a \"Story Writer\": its output can be displayed to an end user (even if some structured information can easily be injected). Furthermore, activities can be tracked (with the help of the developer of course) across threads, tasks or application domain. Properties | Improve this Doc View Source ActualFilter Gets the actual filter level for logs: this combines the configured MinimalFilter and the minimal requirements of any IActivityMonitorBoundClient that specifies such a minimal filter level. Declaration LogFilter ActualFilter { get; } Property Value Type Description LogFilter Remarks This does NOT take into account the static (application-domain) DefaultFilter . This global default must be used if this ActualFilter is None for Line or Group : the ShouldLogLine(IActivityMonitor, LogLevel, String, Int32) extension method takes it into account. | Improve this Doc View Source AutoTags Gets or sets the tags of this monitor: any subsequent logs will be tagged by these tags. The CK.Core.CKTrait must be registered in ActivityMonitor.Tags . Modifications to this property are scoped to the current Group since when a Group is closed, this property (and MinimalFilter ) is automatically restored to its original value (captured when the Group was opened). Declaration CKTrait AutoTags { get; set; } Property Value Type Description CK.Core.CKTrait | Improve this Doc View Source LastLogTime Gets the last CK.Core.DateTimeStamp for this monitor. Declaration DateTimeStamp LastLogTime { get; } Property Value Type Description CK.Core.DateTimeStamp | Improve this Doc View Source MinimalFilter Gets or sets a filter for the log level. Modifications to this property are scoped to the current Group since when a Group is closed, this property (and AutoTags ) is automatically restored to its original value (captured when the Group was opened). Defaults to Undefined . Declaration LogFilter MinimalFilter { get; set; } Property Value Type Description LogFilter | Improve this Doc View Source Output Gets the IActivityMonitorOutput for this monitor. Declaration IActivityMonitorOutput Output { get; } Property Value Type Description IActivityMonitorOutput | Improve this Doc View Source Topic Gets the current topic for this monitor. This can be any non null string (null topic is mapped to the empty string) that describes the current activity. It must be set with SetTopic(String, String, Int32) and unlike MinimalFilter and AutoTags , the topic is not reseted when groups are closed. Declaration string Topic { get; } Property Value Type Description String Remarks Clients are warned of the change thanks to OnTopicChanged(String, String, Int32) and an unfiltered Info log with the new topic prefixed with \"Topic:\" and tagged with MonitorTopicChanged is emitted. Methods | Improve this Doc View Source CloseGroup(DateTimeStamp, Object) Closes the current Group. Optional parameter is polymorphic. It can be a string, a ActivityLogGroupConclusion , a List<T> or an IEnumerable<T> of ActivityLogGroupConclusion, or any object with an overridden ToString() method. See remarks (especially for List<ActivityLogGroupConclusion>). Declaration bool CloseGroup(DateTimeStamp logTime, object userConclusion = null) Parameters Type Name Description CK.Core.DateTimeStamp logTime Log time of the closing of the group. You can use CK.Core.DateTimeStamp.UtcNow or NextLogTime(IActivityMonitor) extension method. Object userConclusion Optional string, ActivityLogGroupConclusion object, enumerable of ActivityLogGroupConclusion or object to conclude the group. See remarks. Returns Type Description Boolean True if a group has actually been closed, false if there is no more opened group. Remarks An untyped object is used here to easily and efficiently accommodate both string and already existing ActivityLogGroupConclusion. When a List<ActivityLogGroupConclusion> is used, it will be directly used to collect conclusion objects (new conclusions will be added to it). This is an optimization. | Improve this Doc View Source SetTopic(String, String, Int32) Sets the current topic for this monitor. This can be any non null string (null topic is mapped to the empty string) that describes the current activity. Declaration void SetTopic(string newTopic, string fileName = null, int lineNumber = 0) Parameters Type Name Description String newTopic The new topic string to associate to this monitor. String fileName The source code file name from which the topic is set. Int32 lineNumber The line number in the source from which the topic is set. | Improve this Doc View Source UnfilteredLog(ActivityMonitorLogData) Logs a line regardless of ActualFilter level (except for Off ). Declaration void UnfilteredLog(ActivityMonitorLogData data) Parameters Type Name Description ActivityMonitorLogData data Data that describes the log. Can not be null. | Improve this Doc View Source UnfilteredOpenGroup(ActivityMonitorGroupData) Opens a group regardless of ActualFilter level (except for Off ). CloseGroup(DateTimeStamp, Object) must be called in order to close the group, and/or the returned object must be disposed (both safely can be called: the group is closed on the first action, the second one is ignored). Declaration IDisposableGroup UnfilteredOpenGroup(ActivityMonitorGroupData data) Parameters Type Name Description ActivityMonitorGroupData data Data that describes the log. Can not be null. Returns Type Description IDisposableGroup A disposable object that can be used to set a function that provides a conclusion text and/or close the group. Remarks Opening a group does not change the current MinimalFilter , except when opening a Fatal or Error group: in such case, the MinimalFilter is automatically sets to Trace to capture all potential information inside the error group. Changes to the monitor's current Filter or AutoTags that occur inside a group are automatically restored to their original values when the group is closed. This behavior guaranties that a local modification (deep inside unknown called code) does not impact caller code: groups are a way to easily isolate such configuration changes. Note that this automatic configuration restoration works even if the group has been filtered. Extension Methods ActivityMonitorSimpleSenderExtension.OpenDebug(IActivityMonitor, Exception, Int32, String) ActivityMonitorSimpleSenderExtension.OpenDebug(IActivityMonitor, String, Int32, String) ActivityMonitorSimpleSenderExtension.OpenDebug(IActivityMonitor, String, Exception, Int32, String) ActivityMonitorSimpleSenderExtension.OpenDebug(IActivityMonitor, Func<String>, Int32, String) ActivityMonitorSimpleSenderExtension.OpenDebug(IActivityMonitor, Func<String>, Exception, Int32, String) ActivityMonitorSimpleSenderExtension.OpenDebug(IActivityMonitor, Exception, CKTrait, Int32, String) ActivityMonitorSimpleSenderExtension.OpenDebug(IActivityMonitor, String, CKTrait, Int32, String) ActivityMonitorSimpleSenderExtension.OpenDebug(IActivityMonitor, String, Exception, CKTrait, Int32, String) ActivityMonitorSimpleSenderExtension.OpenDebug(IActivityMonitor, Func<String>, CKTrait, Int32, String) ActivityMonitorSimpleSenderExtension.OpenDebug(IActivityMonitor, Func<String>, Exception, CKTrait, Int32, String) ActivityMonitorSimpleSenderExtension.OpenTrace(IActivityMonitor, Exception, Int32, String) ActivityMonitorSimpleSenderExtension.OpenTrace(IActivityMonitor, String, Int32, String) ActivityMonitorSimpleSenderExtension.OpenTrace(IActivityMonitor, String, Exception, Int32, String) ActivityMonitorSimpleSenderExtension.OpenTrace(IActivityMonitor, Func<String>, Int32, String) ActivityMonitorSimpleSenderExtension.OpenTrace(IActivityMonitor, Func<String>, Exception, Int32, String) ActivityMonitorSimpleSenderExtension.OpenTrace(IActivityMonitor, Exception, CKTrait, Int32, String) ActivityMonitorSimpleSenderExtension.OpenTrace(IActivityMonitor, String, CKTrait, Int32, String) ActivityMonitorSimpleSenderExtension.OpenTrace(IActivityMonitor, String, Exception, CKTrait, Int32, String) ActivityMonitorSimpleSenderExtension.OpenTrace(IActivityMonitor, Func<String>, CKTrait, Int32, String) ActivityMonitorSimpleSenderExtension.OpenTrace(IActivityMonitor, Func<String>, Exception, CKTrait, Int32, String) ActivityMonitorSimpleSenderExtension.OpenInfo(IActivityMonitor, Exception, Int32, String) ActivityMonitorSimpleSenderExtension.OpenInfo(IActivityMonitor, String, Int32, String) ActivityMonitorSimpleSenderExtension.OpenInfo(IActivityMonitor, String, Exception, Int32, String) ActivityMonitorSimpleSenderExtension.OpenInfo(IActivityMonitor, Func<String>, Int32, String) ActivityMonitorSimpleSenderExtension.OpenInfo(IActivityMonitor, Func<String>, Exception, Int32, String) ActivityMonitorSimpleSenderExtension.OpenInfo(IActivityMonitor, Exception, CKTrait, Int32, String) ActivityMonitorSimpleSenderExtension.OpenInfo(IActivityMonitor, String, CKTrait, Int32, String) ActivityMonitorSimpleSenderExtension.OpenInfo(IActivityMonitor, String, Exception, CKTrait, Int32, String) ActivityMonitorSimpleSenderExtension.OpenInfo(IActivityMonitor, Func<String>, CKTrait, Int32, String) ActivityMonitorSimpleSenderExtension.OpenInfo(IActivityMonitor, Func<String>, Exception, CKTrait, Int32, String) ActivityMonitorSimpleSenderExtension.OpenWarn(IActivityMonitor, Exception, Int32, String) ActivityMonitorSimpleSenderExtension.OpenWarn(IActivityMonitor, String, Int32, String) ActivityMonitorSimpleSenderExtension.OpenWarn(IActivityMonitor, String, Exception, Int32, String) ActivityMonitorSimpleSenderExtension.OpenWarn(IActivityMonitor, Func<String>, Int32, String) ActivityMonitorSimpleSenderExtension.OpenWarn(IActivityMonitor, Func<String>, Exception, Int32, String) ActivityMonitorSimpleSenderExtension.OpenWarn(IActivityMonitor, Exception, CKTrait, Int32, String) ActivityMonitorSimpleSenderExtension.OpenWarn(IActivityMonitor, String, CKTrait, Int32, String) ActivityMonitorSimpleSenderExtension.OpenWarn(IActivityMonitor, String, Exception, CKTrait, Int32, String) ActivityMonitorSimpleSenderExtension.OpenWarn(IActivityMonitor, Func<String>, CKTrait, Int32, String) ActivityMonitorSimpleSenderExtension.OpenWarn(IActivityMonitor, Func<String>, Exception, CKTrait, Int32, String) ActivityMonitorSimpleSenderExtension.OpenError(IActivityMonitor, Exception, Int32, String) ActivityMonitorSimpleSenderExtension.OpenError(IActivityMonitor, String, Int32, String) ActivityMonitorSimpleSenderExtension.OpenError(IActivityMonitor, String, Exception, Int32, String) ActivityMonitorSimpleSenderExtension.OpenError(IActivityMonitor, Func<String>, Int32, String) ActivityMonitorSimpleSenderExtension.OpenError(IActivityMonitor, Func<String>, Exception, Int32, String) ActivityMonitorSimpleSenderExtension.OpenError(IActivityMonitor, Exception, CKTrait, Int32, String) ActivityMonitorSimpleSenderExtension.OpenError(IActivityMonitor, String, CKTrait, Int32, String) ActivityMonitorSimpleSenderExtension.OpenError(IActivityMonitor, String, Exception, CKTrait, Int32, String) ActivityMonitorSimpleSenderExtension.OpenError(IActivityMonitor, Func<String>, CKTrait, Int32, String) ActivityMonitorSimpleSenderExtension.OpenError(IActivityMonitor, Func<String>, Exception, CKTrait, Int32, String) ActivityMonitorSimpleSenderExtension.OpenFatal(IActivityMonitor, Exception, Int32, String) ActivityMonitorSimpleSenderExtension.OpenFatal(IActivityMonitor, String, Int32, String) ActivityMonitorSimpleSenderExtension.OpenFatal(IActivityMonitor, String, Exception, Int32, String) ActivityMonitorSimpleSenderExtension.OpenFatal(IActivityMonitor, Func<String>, Int32, String) ActivityMonitorSimpleSenderExtension.OpenFatal(IActivityMonitor, Func<String>, Exception, Int32, String) ActivityMonitorSimpleSenderExtension.OpenFatal(IActivityMonitor, Exception, CKTrait, Int32, String) ActivityMonitorSimpleSenderExtension.OpenFatal(IActivityMonitor, String, CKTrait, Int32, String) ActivityMonitorSimpleSenderExtension.OpenFatal(IActivityMonitor, String, Exception, CKTrait, Int32, String) ActivityMonitorSimpleSenderExtension.OpenFatal(IActivityMonitor, Func<String>, CKTrait, Int32, String) ActivityMonitorSimpleSenderExtension.OpenFatal(IActivityMonitor, Func<String>, Exception, CKTrait, Int32, String) ActivityMonitorSimpleSenderExtension.OpenGroup(IActivityMonitor, LogLevel, Exception, Int32, String) ActivityMonitorSimpleSenderExtension.OpenGroup(IActivityMonitor, LogLevel, String, Int32, String) ActivityMonitorSimpleSenderExtension.OpenGroup(IActivityMonitor, LogLevel, String, Exception, Int32, String) ActivityMonitorSimpleSenderExtension.OpenGroup(IActivityMonitor, LogLevel, Func<String>, Int32, String) ActivityMonitorSimpleSenderExtension.OpenGroup(IActivityMonitor, LogLevel, Func<String>, Exception, Int32, String) ActivityMonitorSimpleSenderExtension.OpenGroup(IActivityMonitor, LogLevel, Exception, CKTrait, Int32, String) ActivityMonitorSimpleSenderExtension.OpenGroup(IActivityMonitor, LogLevel, String, CKTrait, Int32, String) ActivityMonitorSimpleSenderExtension.OpenGroup(IActivityMonitor, LogLevel, String, Exception, CKTrait, Int32, String) ActivityMonitorSimpleSenderExtension.OpenGroup(IActivityMonitor, LogLevel, Func<String>, CKTrait, Int32, String) ActivityMonitorSimpleSenderExtension.OpenGroup(IActivityMonitor, LogLevel, Func<String>, Exception, CKTrait, Int32, String) ActivityMonitorSimpleSenderExtension.Debug(IActivityMonitor, Exception, Int32, String) ActivityMonitorSimpleSenderExtension.Debug(IActivityMonitor, String, Int32, String) ActivityMonitorSimpleSenderExtension.Debug(IActivityMonitor, String, Exception, Int32, String) ActivityMonitorSimpleSenderExtension.Debug(IActivityMonitor, Func<String>, Int32, String) ActivityMonitorSimpleSenderExtension.Debug(IActivityMonitor, Func<String>, Exception, Int32, String) ActivityMonitorSimpleSenderExtension.Debug(IActivityMonitor, Exception, CKTrait, Int32, String) ActivityMonitorSimpleSenderExtension.Debug(IActivityMonitor, String, CKTrait, Int32, String) ActivityMonitorSimpleSenderExtension.Debug(IActivityMonitor, String, Exception, CKTrait, Int32, String) ActivityMonitorSimpleSenderExtension.Debug(IActivityMonitor, Func<String>, CKTrait, Int32, String) ActivityMonitorSimpleSenderExtension.Debug(IActivityMonitor, Func<String>, Exception, CKTrait, Int32, String) ActivityMonitorSimpleSenderExtension.Trace(IActivityMonitor, Exception, Int32, String) ActivityMonitorSimpleSenderExtension.Trace(IActivityMonitor, String, Int32, String) ActivityMonitorSimpleSenderExtension.Trace(IActivityMonitor, String, Exception, Int32, String) ActivityMonitorSimpleSenderExtension.Trace(IActivityMonitor, Func<String>, Int32, String) ActivityMonitorSimpleSenderExtension.Trace(IActivityMonitor, Func<String>, Exception, Int32, String) ActivityMonitorSimpleSenderExtension.Trace(IActivityMonitor, Exception, CKTrait, Int32, String) ActivityMonitorSimpleSenderExtension.Trace(IActivityMonitor, String, CKTrait, Int32, String) ActivityMonitorSimpleSenderExtension.Trace(IActivityMonitor, String, Exception, CKTrait, Int32, String) ActivityMonitorSimpleSenderExtension.Trace(IActivityMonitor, Func<String>, CKTrait, Int32, String) ActivityMonitorSimpleSenderExtension.Trace(IActivityMonitor, Func<String>, Exception, CKTrait, Int32, String) ActivityMonitorSimpleSenderExtension.Info(IActivityMonitor, Exception, Int32, String) ActivityMonitorSimpleSenderExtension.Info(IActivityMonitor, String, Int32, String) ActivityMonitorSimpleSenderExtension.Info(IActivityMonitor, String, Exception, Int32, String) ActivityMonitorSimpleSenderExtension.Info(IActivityMonitor, Func<String>, Int32, String) ActivityMonitorSimpleSenderExtension.Info(IActivityMonitor, Func<String>, Exception, Int32, String) ActivityMonitorSimpleSenderExtension.Info(IActivityMonitor, Exception, CKTrait, Int32, String) ActivityMonitorSimpleSenderExtension.Info(IActivityMonitor, String, CKTrait, Int32, String) ActivityMonitorSimpleSenderExtension.Info(IActivityMonitor, String, Exception, CKTrait, Int32, String) ActivityMonitorSimpleSenderExtension.Info(IActivityMonitor, Func<String>, CKTrait, Int32, String) ActivityMonitorSimpleSenderExtension.Info(IActivityMonitor, Func<String>, Exception, CKTrait, Int32, String) ActivityMonitorSimpleSenderExtension.Warn(IActivityMonitor, Exception, Int32, String) ActivityMonitorSimpleSenderExtension.Warn(IActivityMonitor, String, Int32, String) ActivityMonitorSimpleSenderExtension.Warn(IActivityMonitor, String, Exception, Int32, String) ActivityMonitorSimpleSenderExtension.Warn(IActivityMonitor, Func<String>, Int32, String) ActivityMonitorSimpleSenderExtension.Warn(IActivityMonitor, Func<String>, Exception, Int32, String) ActivityMonitorSimpleSenderExtension.Warn(IActivityMonitor, Exception, CKTrait, Int32, String) ActivityMonitorSimpleSenderExtension.Warn(IActivityMonitor, String, CKTrait, Int32, String) ActivityMonitorSimpleSenderExtension.Warn(IActivityMonitor, String, Exception, CKTrait, Int32, String) ActivityMonitorSimpleSenderExtension.Warn(IActivityMonitor, Func<String>, CKTrait, Int32, String) ActivityMonitorSimpleSenderExtension.Warn(IActivityMonitor, Func<String>, Exception, CKTrait, Int32, String) ActivityMonitorSimpleSenderExtension.Error(IActivityMonitor, Exception, Int32, String) ActivityMonitorSimpleSenderExtension.Error(IActivityMonitor, String, Int32, String) ActivityMonitorSimpleSenderExtension.Error(IActivityMonitor, String, Exception, Int32, String) ActivityMonitorSimpleSenderExtension.Error(IActivityMonitor, Func<String>, Int32, String) ActivityMonitorSimpleSenderExtension.Error(IActivityMonitor, Func<String>, Exception, Int32, String) ActivityMonitorSimpleSenderExtension.Error(IActivityMonitor, Exception, CKTrait, Int32, String) ActivityMonitorSimpleSenderExtension.Error(IActivityMonitor, String, CKTrait, Int32, String) ActivityMonitorSimpleSenderExtension.Error(IActivityMonitor, String, Exception, CKTrait, Int32, String) ActivityMonitorSimpleSenderExtension.Error(IActivityMonitor, Func<String>, CKTrait, Int32, String) ActivityMonitorSimpleSenderExtension.Error(IActivityMonitor, Func<String>, Exception, CKTrait, Int32, String) ActivityMonitorSimpleSenderExtension.Fatal(IActivityMonitor, Exception, Int32, String) ActivityMonitorSimpleSenderExtension.Fatal(IActivityMonitor, String, Int32, String) ActivityMonitorSimpleSenderExtension.Fatal(IActivityMonitor, String, Exception, Int32, String) ActivityMonitorSimpleSenderExtension.Fatal(IActivityMonitor, Func<String>, Int32, String) ActivityMonitorSimpleSenderExtension.Fatal(IActivityMonitor, Func<String>, Exception, Int32, String) ActivityMonitorSimpleSenderExtension.Fatal(IActivityMonitor, Exception, CKTrait, Int32, String) ActivityMonitorSimpleSenderExtension.Fatal(IActivityMonitor, String, CKTrait, Int32, String) ActivityMonitorSimpleSenderExtension.Fatal(IActivityMonitor, String, Exception, CKTrait, Int32, String) ActivityMonitorSimpleSenderExtension.Fatal(IActivityMonitor, Func<String>, CKTrait, Int32, String) ActivityMonitorSimpleSenderExtension.Fatal(IActivityMonitor, Func<String>, Exception, CKTrait, Int32, String) ActivityMonitorSimpleSenderExtension.Log(IActivityMonitor, LogLevel, Exception, Int32, String) ActivityMonitorSimpleSenderExtension.Log(IActivityMonitor, LogLevel, String, Int32, String) ActivityMonitorSimpleSenderExtension.Log(IActivityMonitor, LogLevel, String, Exception, Int32, String) ActivityMonitorSimpleSenderExtension.Log(IActivityMonitor, LogLevel, Func<String>, Int32, String) ActivityMonitorSimpleSenderExtension.Log(IActivityMonitor, LogLevel, Func<String>, Exception, Int32, String) ActivityMonitorSimpleSenderExtension.Log(IActivityMonitor, LogLevel, Exception, CKTrait, Int32, String) ActivityMonitorSimpleSenderExtension.Log(IActivityMonitor, LogLevel, String, CKTrait, Int32, String) ActivityMonitorSimpleSenderExtension.Log(IActivityMonitor, LogLevel, String, Exception, CKTrait, Int32, String) ActivityMonitorSimpleSenderExtension.Log(IActivityMonitor, LogLevel, Func<String>, CKTrait, Int32, String) ActivityMonitorSimpleSenderExtension.Log(IActivityMonitor, LogLevel, Func<String>, Exception, CKTrait, Int32, String) ActivityMonitorSenderExtension.Debug(IActivityMonitor, Int32, String) ActivityMonitorSenderExtension.OpenDebug(IActivityMonitor, Int32, String) ActivityMonitorSenderExtension.Trace(IActivityMonitor, Int32, String) ActivityMonitorSenderExtension.OpenTrace(IActivityMonitor, Int32, String) ActivityMonitorSenderExtension.Info(IActivityMonitor, Int32, String) ActivityMonitorSenderExtension.OpenInfo(IActivityMonitor, Int32, String) ActivityMonitorSenderExtension.Warn(IActivityMonitor, Int32, String) ActivityMonitorSenderExtension.OpenWarn(IActivityMonitor, Int32, String) ActivityMonitorSenderExtension.Error(IActivityMonitor, Int32, String) ActivityMonitorSenderExtension.OpenError(IActivityMonitor, Int32, String) ActivityMonitorSenderExtension.Fatal(IActivityMonitor, Int32, String) ActivityMonitorSenderExtension.OpenFatal(IActivityMonitor, Int32, String) ActivityMonitorExtension.NextLogTime(IActivityMonitor) ActivityMonitorExtension.MonitorEnd(IActivityMonitor, String, String, Int32) ActivityMonitorExtension.ShouldLogLine(IActivityMonitor, LogLevel, String, Int32) ActivityMonitorExtension.ShouldLogGroup(IActivityMonitor, LogLevel, String, Int32) ActivityMonitorExtension.UnfilteredLog(IActivityMonitor, CKTrait, LogLevel, String, DateTimeStamp, Exception, String, Int32) ActivityMonitorExtension.UnfilteredOpenGroup(IActivityMonitor, CKTrait, LogLevel, Func<String>, String, DateTimeStamp, Exception, String, Int32) ActivityMonitorExtension.CloseGroup(IActivityMonitor, Object) ActivityMonitorExtension.CollectEntries(IActivityMonitor, Action<IReadOnlyList<ActivityMonitorSimpleCollector.Entry>>, LogLevelFilter) ActivityMonitorExtension.OnError(IActivityMonitor, Action) ActivityMonitorExtension.OnError(IActivityMonitor, Action, Action) ActivityMonitorExtension.TemporarilySetMinimalFilter(IActivityMonitor, LogLevelFilter, LogLevelFilter) ActivityMonitorExtension.TemporarilySetMinimalFilter(IActivityMonitor, LogFilter) ActivityMonitorExtension.TemporarilySetAutoTags(IActivityMonitor, CKTrait, SetOperation) ActivityMonitorExtension.DependentActivity(IActivityMonitor, String, Int32) ActivityMonitorExtension.StartDependentActivity(IActivityMonitor, ActivityMonitor.DependentToken, String, Int32)"
  },
  "api/CK.Core.Impl.ActivityMonitorOutput.html": {
    "href": "api/CK.Core.Impl.ActivityMonitorOutput.html",
    "title": "Class ActivityMonitorOutput | CK-Text",
    "keywords": "Class ActivityMonitorOutput Implementation of IActivityMonitorOutput for Output . Inheritance Object ActivityMonitorOutput Inherited Members Object.ToString() Object.Equals(Object) Object.Equals(Object, Object) Object.ReferenceEquals(Object, Object) Object.GetHashCode() Object.GetType() Object.MemberwiseClone() Namespace : CK.Core.Impl Assembly : CK.ActivityMonitor.dll Syntax public class ActivityMonitorOutput : IActivityMonitorOutput Constructors | Improve this Doc View Source ActivityMonitorOutput(IActivityMonitorImpl) Initializes a new ActivityMonitorOutput bound to a IActivityMonitor . Declaration public ActivityMonitorOutput(IActivityMonitorImpl monitor) Parameters Type Name Description IActivityMonitorImpl monitor Properties | Improve this Doc View Source BridgeTarget Gets an entry point for other monitors: by registering ActivityMonitorBridge in other Output bound to this ActivityMonitorBridgeTarget , log streams can easily be merged. Declaration public ActivityMonitorBridgeTarget BridgeTarget { get; } Property Value Type Description ActivityMonitorBridgeTarget Implements IActivityMonitorOutput.BridgeTarget | Improve this Doc View Source Clients Gets the list of registered IActivityMonitorClient . Declaration public IReadOnlyList<IActivityMonitorClient> Clients { get; } Property Value Type Description IReadOnlyList < IActivityMonitorClient > Implements IActivityMonitorOutput.Clients | Improve this Doc View Source Monitor Gets the associated IActivityMonitor . Declaration protected IActivityMonitorImpl Monitor { get; } Property Value Type Description IActivityMonitorImpl Methods | Improve this Doc View Source RegisterClient(IActivityMonitorClient, out Boolean) Registers an IActivityMonitorClient to the Clients list. Duplicate IActivityMonitorClient are silently ignored. Declaration public IActivityMonitorClient RegisterClient(IActivityMonitorClient client, out bool added) Parameters Type Name Description IActivityMonitorClient client An IActivityMonitorClient implementation. Boolean added True if the client has been added, false if it was already registered. Returns Type Description IActivityMonitorClient The registered client. Implements IActivityMonitorOutput.RegisterClient(IActivityMonitorClient, out Boolean) | Improve this Doc View Source RegisterClient<T>(T, out Boolean) Registers a typed IActivityMonitorClient . Declaration public T RegisterClient<T>(T client, out bool added)where T : IActivityMonitorClient Parameters Type Name Description T client Clients to register. Boolean added True if the client has been added, false if it was already registered. Returns Type Description T The registered client. Type Parameters Name Description T Any type that specializes IActivityMonitorClient . Implements IActivityMonitorOutput.RegisterClient<T>(T, out Boolean) | Improve this Doc View Source RegisterUniqueClient<T>(Func<T, Boolean>, Func<T>) Registers a IActivityMonitorClient that must be unique in a sense. Declaration public T RegisterUniqueClient<T>(Func<T, bool> tester, Func<T> factory)where T : IActivityMonitorClient Parameters Type Name Description Func <T, Boolean > tester Predicate that must be satisfied for at least one registered client. Func <T> factory Factory that will be called if no existing client satisfies tester . Returns Type Description T The existing or newly created client or null if the factory returned null. Type Parameters Name Description T Implements IActivityMonitorOutput.RegisterUniqueClient<T>(Func<T, Boolean>, Func<T>) Remarks The factory function MUST return null OR a client that satisfies the tester function otherwise a InvalidOperationException is thrown. When null is returned by the factory function, nothing is added and null is returned. The factory is called only when the no client satisfies the tester function: this makes the 'added' out parameter useless. | Improve this Doc View Source UnregisterClient(IActivityMonitorClient) Unregisters the given IActivityMonitorClient from the Clients list. Silently ignores unregistered client. Declaration public IActivityMonitorClient UnregisterClient(IActivityMonitorClient client) Parameters Type Name Description IActivityMonitorClient client An IActivityMonitorClient implementation. Returns Type Description IActivityMonitorClient The unregistered client or null if it has not been found. Implements IActivityMonitorOutput.UnregisterClient(IActivityMonitorClient) Extension Methods ActivityMonitorExtension.FindBridgeTo(IActivityMonitorOutput, ActivityMonitorBridgeTarget) ActivityMonitorExtension.CreateBridgeTo(IActivityMonitorOutput, ActivityMonitorBridgeTarget) ActivityMonitorExtension.CreateStrongBridgeTo(IActivityMonitorOutput, ActivityMonitorBridgeTarget) ActivityMonitorExtension.UnbridgeTo(IActivityMonitorOutput, ActivityMonitorBridgeTarget) ActivityMonitorExtension.RegisterClient(IActivityMonitorOutput, IActivityMonitorClient) ActivityMonitorExtension.RegisterClient<T>(IActivityMonitorOutput, T) ActivityMonitorExtension.RegisterClients(IActivityMonitorOutput, IEnumerable<IActivityMonitorClient>) ActivityMonitorExtension.RegisterClients(IActivityMonitorOutput, IActivityMonitorClient[]) ActivityMonitorExtension.RegisterUniqueClient<T>(IActivityMonitorOutput) ActivityMonitorExtension.UnregisterClient<T>(IActivityMonitorOutput, Func<T, Boolean>)"
  },
  "api/CK.Core.html": {
    "href": "api/CK.Core.html",
    "title": "Namespace CK.Core | CK-Text",
    "keywords": "Namespace CK.Core Classes ActivityMonitor Concrete implementation of IActivityMonitor . ActivityMonitor.DependentToken Describes the origin of a dependent activity: it is created by DependentActivity(IActivityMonitor, String, Int32) (extension methods). ActivityMonitor.Group Groups are bound to an ActivityMonitor and are linked together from the current one to the very first one (a kind of stack). ActivityMonitor.SourceFilter Manages source filtering. This default implementation ( DefaultFilter(ref String, ref Int32) ) handles file scope only. ActivityMonitor.Tags Thread-safe context for tags used to categorize log entries (and group conclusions). All tags used in monitoring must be Register(String) ed here. ActivityMonitorBridge A IActivityMonitorClient that relays what happens in a monitor to another monitor. ActivityMonitorBridgeTarget This class used with ActivityMonitorBridge , enables IActivityMonitor to relay logs. Each activity monitor exposes such a bridge target on its output thanks to BridgeTarget . ActivityMonitorClient Base class that explicitly implements IActivityMonitorClient (to hide it from public interface, except its MinimalFilter ). ActivityMonitorConsoleClient Displays the activity to the console. ActivityMonitorErrorCounter Count fatal, error or warn that occurred. It can also automatically adds a conclusion to closed groups that summarizes the number of fatals, errors and warnings. ActivityMonitorErrorCounter.State Encapsulates error information. The ToString() method displays the conclusion in a default text format. ActivityMonitorExtension Provides extension methods for IActivityMonitor and other types from the Activity monitor framework. ActivityMonitorGroupData Data required by UnfilteredOpenGroup(ActivityMonitorGroupData) . ActivityMonitorLogData Data required by UnfilteredLog(ActivityMonitorLogData) . This is also the base class for ActivityMonitorGroupData . ActivityMonitorPathCatcher The \"Path Catcher\" captures the current path of the opened groups and the last, current, line and exposes it thanks to a read only list of ActivityMonitorPathCatcher.PathElement (the DynamicPath property), plus two other specific paths, the LastErrorPath and the LastWarnOrErrorPath . ActivityMonitorPathCatcher.PathElement Element of the DynamicPath , LastErrorPath , or LastWarnOrErrorPath . ActivityMonitorSenderExtension Provides OpenXXX and XXX (Trace, Info,...Fatal) extension methods for IActivityMonitor . ActivityMonitorSendExtension Provides Send extension methods for IActivityMonitorGroupSender . ActivityMonitorSimpleCollector Simple collector of log entries which level is greater or equal to MinimalFilter . Its Capacity defaults to 50 (no more than Capacity entries are kept). Used by the CollectEntries(IActivityMonitor, Action<IReadOnlyList<ActivityMonitorSimpleCollector.Entry>>, LogLevelFilter) extension method. ActivityMonitorSimpleCollector.Entry Element of the Entries . ActivityMonitorSimpleSenderExtension Provides OpenXXX and XXX (Debug, Trace, Info,...Fatal) extension methods for IActivityMonitor . ActivityMonitorTextHelperClient Base class for IActivityMonitorClient that tracks groups and level changes in order to ease text-based renderer. ActivityMonitorTextWriterClient Formats the activity and pushes piece of texts to an Action<T> where T is a string. LogFilterMatcherExtension Supports LogFilter and LogLevelFilter extension methods. SystemActivityMonitor This ActivityMonitor logs errors in a directory (if the static RootLogPath property is not null) and raises OnError events. Its main goal is to be internally used by the Monitor framework but can be used as a \"normal\" monitor (if you believe it is a good idea). If RootLogPath is not set, Critical errors will NOT be logged. SystemActivityMonitor.LowLevelErrorEventArgs Defines the event argument of OnError . Structs ActivityLogGroupConclusion Describes the conclusion of a group. Conclusions are simply Text Tag ged with a CK.Core.CKTrait . ActivityMonitorExtension.DependentSender Offers dependent token creation and launching. LogFilter Immutable capture of a double LogLevelFilter . One for Line and one for Group . This value type exposes predefined configured couples: Debug , Trace (full trace), Verbose , Monitor , Terse , Release and Off (no log at all). SourceLogFilter Immutable encapsulation of the two source filters: this enables overriding or filtering per source file. Interfaces IActivityLogGroup Exposes all the relevant information for a currently opened group. Groups are linked together from the current one to the very first one thanks to the Parent property. IActivityMonitor Defines the core Activity Monitor interface. Small is beautiful. IActivityMonitorBoundClient Specialized IActivityMonitorClient that is bound to one IActivityMonitor . Clients that can not be registered into multiple outputs (and receive logs from multiple monitors at the same time) should implement this interface in order to control their registration/un-registration. IActivityMonitorClient Listener for IActivityMonitor registered in a IActivityMonitorOutput . IActivityMonitorGroupSender The interface that carries Send extension methods for groups. IActivityMonitorLineSender The interface that carries Send extension methods. IActivityMonitorOutput Offers IActivityMonitorClient registration/unregistration and exposes a BridgeTarget (an ActivityMonitorBridgeTarget ) that can be used to accept logs from other monitors. IDisposableGroup Interface obtained once a Group has been opened. IUniqueId Minimal interface that enables any type (specially reference type) to expose a Guid . Enums LogLevel Five standard log levels in increasing order used by IActivityMonitor . LogLevelFilter Defines filters for LogLevel . Delegates ActivityMonitor.SourceFilter.FilterSourceDelegate Delegate type that can be assigned to FilterSource static property to enable filter override based on the caller source location."
  },
  "api/CK.Core.LogLevel.html": {
    "href": "api/CK.Core.LogLevel.html",
    "title": "Enum LogLevel | CK-Text",
    "keywords": "Enum LogLevel Five standard log levels in increasing order used by IActivityMonitor . Namespace : CK.Core Assembly : CK.ActivityMonitor.dll Syntax [Flags] public enum LogLevel Fields Name Description Debug Debug logging level (the most verbose level). Error An error logging level: denotes an error for the current activity. This error does not necessarily abort the activity. Fatal A fatal error logging level: denotes an error that breaks (aborts) the current activity. This kind of error may have important side effects on the system. Info An info logging level. IsFiltered Flag that denotes a log level that has been filtered. When this flag is not set, the UnfilteredOpenGroup(ActivityMonitorGroupData) or UnfilteredLog(ActivityMonitorLogData) has been called directly. When set, the log has typically been emitted through the extension methods that challenge the monitor's ActualFilter and DefaultFilter static configuration. Mask Mask that covers actual levels to easily ignore IsFiltered bit. None No logging level. NumberOfBits Number of bits actually covered by this bit flag. Trace A trace logging level (quite verbose level). Warn A warn logging level."
  },
  "api/CK.Core.ActivityMonitor.html": {
    "href": "api/CK.Core.ActivityMonitor.html",
    "title": "Class ActivityMonitor | CK-Text",
    "keywords": "Class ActivityMonitor Concrete implementation of IActivityMonitor . Inheritance Object ActivityMonitor SystemActivityMonitor Inherited Members Object.ToString() Object.Equals(Object) Object.Equals(Object, Object) Object.ReferenceEquals(Object, Object) Object.GetHashCode() Object.GetType() Object.MemberwiseClone() Namespace : CK.Core Assembly : CK.ActivityMonitor.dll Syntax public class ActivityMonitor : IActivityMonitorImpl, IActivityMonitor, IUniqueId Constructors | Improve this Doc View Source ActivityMonitor() Initializes a new ActivityMonitor that applies all AutoConfiguration and has no Topic initially set. Declaration public ActivityMonitor() | Improve this Doc View Source ActivityMonitor(ActivityMonitorOutput, CKTrait, Boolean) Initializes a new ActivityMonitor with a specific Output or null to postpone the setting of Output by using SetOutput(ActivityMonitorOutput) . Declaration protected ActivityMonitor(ActivityMonitorOutput output, CKTrait tags = null, bool applyAutoConfigurations = true) Parameters Type Name Description ActivityMonitorOutput output The output to use. Can be null. CK.Core.CKTrait tags Initial tags. Boolean applyAutoConfigurations Whether AutoConfiguration should be applied. | Improve this Doc View Source ActivityMonitor(Boolean, String) Initializes a new ActivityMonitor that optionally applies AutoConfiguration and with an initial topic. Declaration public ActivityMonitor(bool applyAutoConfigurations, string topic = null) Parameters Type Name Description Boolean applyAutoConfigurations Whether AutoConfiguration should be applied. String topic Optional initial topic (can be null). | Improve this Doc View Source ActivityMonitor(String) Initializes a new ActivityMonitor that applies all AutoConfiguration and has an initial Topic set. Declaration public ActivityMonitor(string topic) Parameters Type Name Description String topic Initial topic (can be null). Fields | Improve this Doc View Source AutoConfiguration The automatic configuration actions. Registers actions via += (or Combine(Delegate, Delegate) if you like pain), unregister with -= operator (or Remove(Delegate, Delegate) ). Simply sets it to null to clear all currently registered actions (this, of course, only from tests and not in real code). Declaration public static Action<IActivityMonitor> AutoConfiguration Field Value Type Description Action < IActivityMonitor > | Improve this Doc View Source CriticalErrorCollector The monitoring error collector. Any error that occurs while dispatching logs to IActivityMonitorClient are collected and the culprit is removed from Output . See CriticalErrorCollector . Declaration public static readonly CriticalErrorCollector CriticalErrorCollector Field Value Type Description CK.Core.CriticalErrorCollector | Improve this Doc View Source NoLogText The no-log text replaces any null or empty log text. Declaration public static readonly string NoLogText Field Value Type Description String | Improve this Doc View Source ParkLevel String to use to break the current LogLevel (as if a different LogLevel was used). Declaration public static readonly string ParkLevel Field Value Type Description String | Improve this Doc View Source SetTopicPrefix Prefix used by SetTopic(String, String, Int32) is \"Topic: \". Declaration public static readonly string SetTopicPrefix Field Value Type Description String Properties | Improve this Doc View Source ActualFilter Gets the actual filter level for logs: this combines the configured MinimalFilter and the minimal requirements of any IActivityMonitorBoundClient that specifies such a minimal filter level. Declaration public LogFilter ActualFilter { get; } Property Value Type Description LogFilter Implements IActivityMonitor.ActualFilter Remarks This does NOT take into account the static (application-domain) DefaultFilter . This global default must be used if this ActualFilter is Undefined for Line or Group : the ShouldLogLine(IActivityMonitor, LogLevel, String, Int32) extension method takes it into account. | Improve this Doc View Source AutoTags Gets or sets the tags of this monitor: any subsequent logs will be tagged by these tags. The CK.Core.CKTrait must be registered in ActivityMonitor.Tags . Modifications to this property are scoped to the current Group since when a Group is closed, this property (like MinimalFilter ) is automatically restored to its original value (captured when the Group was opened). Declaration public CKTrait AutoTags { get; set; } Property Value Type Description CK.Core.CKTrait Implements IActivityMonitor.AutoTags | Improve this Doc View Source CurrentGroup Gets the currently opened group. Null when no group is currently opened. Declaration protected IActivityLogGroup CurrentGroup { get; } Property Value Type Description IActivityLogGroup | Improve this Doc View Source DefaultFilter Gets or sets the default filter that should be used when the ActualFilter is Undefined . This configuration is per application domain (the backing field is static). It defaults to Trace . Declaration public static LogFilter DefaultFilter { get; set; } Property Value Type Description LogFilter | Improve this Doc View Source LastLogTime Gets the last CK.Core.DateTimeStamp for this monitor. Declaration public DateTimeStamp LastLogTime { get; } Property Value Type Description CK.Core.DateTimeStamp Implements IActivityMonitor.LastLogTime | Improve this Doc View Source MinimalFilter Gets or sets a filter based for the log level. Modifications to this property are scoped to the current Group since when a Group is closed, this property (like AutoTags ) is automatically restored to its original value (captured when the Group was opened). Declaration public LogFilter MinimalFilter { get; set; } Property Value Type Description LogFilter Implements IActivityMonitor.MinimalFilter | Improve this Doc View Source Output Gets the IActivityMonitorOutput for this monitor. Declaration public IActivityMonitorOutput Output { get; } Property Value Type Description IActivityMonitorOutput Implements IActivityMonitor.Output | Improve this Doc View Source Topic Gets the current topic for this monitor. This can be any non null string (null topic is mapped to the empty string) that describes the current activity. It must be set with SetTopic(String, String, Int32) and unlike MinimalFilter and AutoTags , the topic is not reseted when groups are closed. Declaration public string Topic { get; } Property Value Type Description String Implements IActivityMonitor.Topic | Improve this Doc View Source UniqueId Gets the unique identifier for this monitor. It is a NewGuid() by default but specialized implementations can set it via the protected SetUniqueId(Guid) if a unique identifier exists in the context that can more easily identify this activity. Declaration protected Guid UniqueId { get; } Property Value Type Description Guid Methods | Improve this Doc View Source CloseGroup(DateTimeStamp, Object) Closes the current ActivityMonitor.Group . Optional parameter is polymorphic. It can be a string, a ActivityLogGroupConclusion , a List<T> or an IEnumerable<T> of ActivityLogGroupConclusion, or any object with an overridden ToString() method. See remarks (especially for List<ActivityLogGroupConclusion>). Declaration public virtual bool CloseGroup(DateTimeStamp logTime, object userConclusion = null) Parameters Type Name Description CK.Core.DateTimeStamp logTime Times-tamp of the group closing. Object userConclusion Optional string, enumerable of ActivityLogGroupConclusion ) or object to conclude the group. See remarks. Returns Type Description Boolean Implements IActivityMonitor.CloseGroup(DateTimeStamp, Object) Remarks An untyped object is used here to easily and efficiently accommodate both string and already existing ActivityLogGroupConclusion. When a List<ActivityLogGroupConclusion> is used, it will be directly used to collect conclusion objects (new conclusions will be added to it). This is an optimization. | Improve this Doc View Source ReentrancyAndConcurrencyLock() Gets a disposable object that checks for reentrant and concurrent calls. Declaration protected IDisposable ReentrancyAndConcurrencyLock() Returns Type Description IDisposable A disposable object (that must be disposed). | Improve this Doc View Source SetOutput(ActivityMonitorOutput) Sets the Output . Declaration protected void SetOutput(ActivityMonitorOutput output) Parameters Type Name Description ActivityMonitorOutput output Can not be null. | Improve this Doc View Source SetTopic(String, String, Int32) Sets the current topic for this monitor. This can be any non null string (null topic is mapped to the empty string) that describes the current activity. Declaration public void SetTopic(string newTopic, string fileName = null, int lineNumber = 0) Parameters Type Name Description String newTopic String fileName Int32 lineNumber Implements IActivityMonitor.SetTopic(String, String, Int32) | Improve this Doc View Source SetUniqueId(Guid) Sets the unique identifier of this activity monitor. This must be used only during monitor construction or initialization, before the monitor is actually used. Declaration protected void SetUniqueId(Guid uniqueId) Parameters Type Name Description Guid uniqueId New unique identifier. | Improve this Doc View Source UnfilteredLog(ActivityMonitorLogData) Logs a text regardless of MinimalFilter level (except for Off ). Each call to log is considered as a unit of text: depending on the rendering engine, a line or a paragraph separator (or any appropriate separator) should be appended between each text if the level is the same as the previous one. See remarks. Declaration public void UnfilteredLog(ActivityMonitorLogData data) Parameters Type Name Description ActivityMonitorLogData data Data that describes the log. When null or when MaskedLevel is None , nothing happens (whereas for group, a rejected group is recorded and returned). Implements IActivityMonitor.UnfilteredLog(ActivityMonitorLogData) Remarks A null or empty Text is logged as NoLogText . If needed, the special text ParkLevel (\"PARK-LEVEL\") breaks the current LogLevel and resets it: the next log, even with the same LogLevel, will be treated as if a different LogLevel is used. | Improve this Doc View Source UnfilteredOpenGroup(ActivityMonitorGroupData) Opens a group regardless of ActualFilter level (except for Off ). CloseGroup(DateTimeStamp, Object) must be called in order to close the group, and/or the returned object must be disposed (both can be called safely: the group is closed on the first action, any other attempt to close it again is ignored). Declaration public virtual IDisposableGroup UnfilteredOpenGroup(ActivityMonitorGroupData data) Parameters Type Name Description ActivityMonitorGroupData data Data that describes the log. When null or when MaskedLevel is None a rejected group is recorded and returned and must be closed. Returns Type Description IDisposableGroup A disposable object that can be used to set a function that provides a conclusion text and/or close the group. Implements IActivityMonitor.UnfilteredOpenGroup(ActivityMonitorGroupData) Remarks Opening a group does not change the current MinimalFilter , except when opening a Fatal or Error group: in such case, the MinimalFilter is automatically sets to Debug to capture all potential information inside the error group. Changes to the monitor's current Filter or AutoTags that occur inside a group are automatically restored to their original values when the group is closed. This behavior guaranties that a local modification (deep inside unknown called code) does not impact caller code: groups are a way to easily isolate such configuration changes. Note that this automatic configuration restoration works even if the group has been filtered and rejected. Explicit Interface Implementations | Improve this Doc View Source IActivityMonitorImpl.CurrentGroup Declaration IActivityLogGroup IActivityMonitorImpl.CurrentGroup { get; } Returns Type Description IActivityLogGroup Implements IActivityMonitorImpl.CurrentGroup | Improve this Doc View Source IActivityMonitorImpl.InitializeTopicAndAutoTags(String, CKTrait, String, Int32) Called by IActivityMonitorBoundClient clients to initialize Topic and AutoTag from inside their SetMonitor or any other methods provided that a reentrant and concurrent lock has been obtained (otherwise an InvalidOperationException is thrown). Declaration void IActivityMonitorImpl.InitializeTopicAndAutoTags(string newTopic, CKTrait newTags, string fileName, int lineNumber) Parameters Type Name Description String newTopic CK.Core.CKTrait newTags String fileName Int32 lineNumber Implements IActivityMonitorImpl.InitializeTopicAndAutoTags(String, CKTrait, String, Int32) | Improve this Doc View Source IActivityMonitorImpl.OnClientMinimalFilterChanged(LogFilter, LogFilter) Declaration void IActivityMonitorImpl.OnClientMinimalFilterChanged(LogFilter oldLevel, LogFilter newLevel) Parameters Type Name Description LogFilter oldLevel LogFilter newLevel Implements IActivityMonitorImpl.OnClientMinimalFilterChanged(LogFilter, LogFilter) | Improve this Doc View Source IActivityMonitorImpl.ReentrancyAndConcurrencyLock() Declaration IDisposable IActivityMonitorImpl.ReentrancyAndConcurrencyLock() Returns Type Description IDisposable Implements IActivityMonitorImpl.ReentrancyAndConcurrencyLock() | Improve this Doc View Source IActivityMonitorImpl.SignalChange() Declaration void IActivityMonitorImpl.SignalChange() Implements IActivityMonitorImpl.SignalChange() | Improve this Doc View Source IUniqueId.UniqueId Declaration Guid IUniqueId.UniqueId { get; } Returns Type Description Guid Implements IUniqueId.UniqueId Extension Methods ActivityMonitorSimpleSenderExtension.OpenDebug(IActivityMonitor, Exception, Int32, String) ActivityMonitorSimpleSenderExtension.OpenDebug(IActivityMonitor, String, Int32, String) ActivityMonitorSimpleSenderExtension.OpenDebug(IActivityMonitor, String, Exception, Int32, String) ActivityMonitorSimpleSenderExtension.OpenDebug(IActivityMonitor, Func<String>, Int32, String) ActivityMonitorSimpleSenderExtension.OpenDebug(IActivityMonitor, Func<String>, Exception, Int32, String) ActivityMonitorSimpleSenderExtension.OpenDebug(IActivityMonitor, Exception, CKTrait, Int32, String) ActivityMonitorSimpleSenderExtension.OpenDebug(IActivityMonitor, String, CKTrait, Int32, String) ActivityMonitorSimpleSenderExtension.OpenDebug(IActivityMonitor, String, Exception, CKTrait, Int32, String) ActivityMonitorSimpleSenderExtension.OpenDebug(IActivityMonitor, Func<String>, CKTrait, Int32, String) ActivityMonitorSimpleSenderExtension.OpenDebug(IActivityMonitor, Func<String>, Exception, CKTrait, Int32, String) ActivityMonitorSimpleSenderExtension.OpenTrace(IActivityMonitor, Exception, Int32, String) ActivityMonitorSimpleSenderExtension.OpenTrace(IActivityMonitor, String, Int32, String) ActivityMonitorSimpleSenderExtension.OpenTrace(IActivityMonitor, String, Exception, Int32, String) ActivityMonitorSimpleSenderExtension.OpenTrace(IActivityMonitor, Func<String>, Int32, String) ActivityMonitorSimpleSenderExtension.OpenTrace(IActivityMonitor, Func<String>, Exception, Int32, String) ActivityMonitorSimpleSenderExtension.OpenTrace(IActivityMonitor, Exception, CKTrait, Int32, String) ActivityMonitorSimpleSenderExtension.OpenTrace(IActivityMonitor, String, CKTrait, Int32, String) ActivityMonitorSimpleSenderExtension.OpenTrace(IActivityMonitor, String, Exception, CKTrait, Int32, String) ActivityMonitorSimpleSenderExtension.OpenTrace(IActivityMonitor, Func<String>, CKTrait, Int32, String) ActivityMonitorSimpleSenderExtension.OpenTrace(IActivityMonitor, Func<String>, Exception, CKTrait, Int32, String) ActivityMonitorSimpleSenderExtension.OpenInfo(IActivityMonitor, Exception, Int32, String) ActivityMonitorSimpleSenderExtension.OpenInfo(IActivityMonitor, String, Int32, String) ActivityMonitorSimpleSenderExtension.OpenInfo(IActivityMonitor, String, Exception, Int32, String) ActivityMonitorSimpleSenderExtension.OpenInfo(IActivityMonitor, Func<String>, Int32, String) ActivityMonitorSimpleSenderExtension.OpenInfo(IActivityMonitor, Func<String>, Exception, Int32, String) ActivityMonitorSimpleSenderExtension.OpenInfo(IActivityMonitor, Exception, CKTrait, Int32, String) ActivityMonitorSimpleSenderExtension.OpenInfo(IActivityMonitor, String, CKTrait, Int32, String) ActivityMonitorSimpleSenderExtension.OpenInfo(IActivityMonitor, String, Exception, CKTrait, Int32, String) ActivityMonitorSimpleSenderExtension.OpenInfo(IActivityMonitor, Func<String>, CKTrait, Int32, String) ActivityMonitorSimpleSenderExtension.OpenInfo(IActivityMonitor, Func<String>, Exception, CKTrait, Int32, String) ActivityMonitorSimpleSenderExtension.OpenWarn(IActivityMonitor, Exception, Int32, String) ActivityMonitorSimpleSenderExtension.OpenWarn(IActivityMonitor, String, Int32, String) ActivityMonitorSimpleSenderExtension.OpenWarn(IActivityMonitor, String, Exception, Int32, String) ActivityMonitorSimpleSenderExtension.OpenWarn(IActivityMonitor, Func<String>, Int32, String) ActivityMonitorSimpleSenderExtension.OpenWarn(IActivityMonitor, Func<String>, Exception, Int32, String) ActivityMonitorSimpleSenderExtension.OpenWarn(IActivityMonitor, Exception, CKTrait, Int32, String) ActivityMonitorSimpleSenderExtension.OpenWarn(IActivityMonitor, String, CKTrait, Int32, String) ActivityMonitorSimpleSenderExtension.OpenWarn(IActivityMonitor, String, Exception, CKTrait, Int32, String) ActivityMonitorSimpleSenderExtension.OpenWarn(IActivityMonitor, Func<String>, CKTrait, Int32, String) ActivityMonitorSimpleSenderExtension.OpenWarn(IActivityMonitor, Func<String>, Exception, CKTrait, Int32, String) ActivityMonitorSimpleSenderExtension.OpenError(IActivityMonitor, Exception, Int32, String) ActivityMonitorSimpleSenderExtension.OpenError(IActivityMonitor, String, Int32, String) ActivityMonitorSimpleSenderExtension.OpenError(IActivityMonitor, String, Exception, Int32, String) ActivityMonitorSimpleSenderExtension.OpenError(IActivityMonitor, Func<String>, Int32, String) ActivityMonitorSimpleSenderExtension.OpenError(IActivityMonitor, Func<String>, Exception, Int32, String) ActivityMonitorSimpleSenderExtension.OpenError(IActivityMonitor, Exception, CKTrait, Int32, String) ActivityMonitorSimpleSenderExtension.OpenError(IActivityMonitor, String, CKTrait, Int32, String) ActivityMonitorSimpleSenderExtension.OpenError(IActivityMonitor, String, Exception, CKTrait, Int32, String) ActivityMonitorSimpleSenderExtension.OpenError(IActivityMonitor, Func<String>, CKTrait, Int32, String) ActivityMonitorSimpleSenderExtension.OpenError(IActivityMonitor, Func<String>, Exception, CKTrait, Int32, String) ActivityMonitorSimpleSenderExtension.OpenFatal(IActivityMonitor, Exception, Int32, String) ActivityMonitorSimpleSenderExtension.OpenFatal(IActivityMonitor, String, Int32, String) ActivityMonitorSimpleSenderExtension.OpenFatal(IActivityMonitor, String, Exception, Int32, String) ActivityMonitorSimpleSenderExtension.OpenFatal(IActivityMonitor, Func<String>, Int32, String) ActivityMonitorSimpleSenderExtension.OpenFatal(IActivityMonitor, Func<String>, Exception, Int32, String) ActivityMonitorSimpleSenderExtension.OpenFatal(IActivityMonitor, Exception, CKTrait, Int32, String) ActivityMonitorSimpleSenderExtension.OpenFatal(IActivityMonitor, String, CKTrait, Int32, String) ActivityMonitorSimpleSenderExtension.OpenFatal(IActivityMonitor, String, Exception, CKTrait, Int32, String) ActivityMonitorSimpleSenderExtension.OpenFatal(IActivityMonitor, Func<String>, CKTrait, Int32, String) ActivityMonitorSimpleSenderExtension.OpenFatal(IActivityMonitor, Func<String>, Exception, CKTrait, Int32, String) ActivityMonitorSimpleSenderExtension.OpenGroup(IActivityMonitor, LogLevel, Exception, Int32, String) ActivityMonitorSimpleSenderExtension.OpenGroup(IActivityMonitor, LogLevel, String, Int32, String) ActivityMonitorSimpleSenderExtension.OpenGroup(IActivityMonitor, LogLevel, String, Exception, Int32, String) ActivityMonitorSimpleSenderExtension.OpenGroup(IActivityMonitor, LogLevel, Func<String>, Int32, String) ActivityMonitorSimpleSenderExtension.OpenGroup(IActivityMonitor, LogLevel, Func<String>, Exception, Int32, String) ActivityMonitorSimpleSenderExtension.OpenGroup(IActivityMonitor, LogLevel, Exception, CKTrait, Int32, String) ActivityMonitorSimpleSenderExtension.OpenGroup(IActivityMonitor, LogLevel, String, CKTrait, Int32, String) ActivityMonitorSimpleSenderExtension.OpenGroup(IActivityMonitor, LogLevel, String, Exception, CKTrait, Int32, String) ActivityMonitorSimpleSenderExtension.OpenGroup(IActivityMonitor, LogLevel, Func<String>, CKTrait, Int32, String) ActivityMonitorSimpleSenderExtension.OpenGroup(IActivityMonitor, LogLevel, Func<String>, Exception, CKTrait, Int32, String) ActivityMonitorSimpleSenderExtension.Debug(IActivityMonitor, Exception, Int32, String) ActivityMonitorSimpleSenderExtension.Debug(IActivityMonitor, String, Int32, String) ActivityMonitorSimpleSenderExtension.Debug(IActivityMonitor, String, Exception, Int32, String) ActivityMonitorSimpleSenderExtension.Debug(IActivityMonitor, Func<String>, Int32, String) ActivityMonitorSimpleSenderExtension.Debug(IActivityMonitor, Func<String>, Exception, Int32, String) ActivityMonitorSimpleSenderExtension.Debug(IActivityMonitor, Exception, CKTrait, Int32, String) ActivityMonitorSimpleSenderExtension.Debug(IActivityMonitor, String, CKTrait, Int32, String) ActivityMonitorSimpleSenderExtension.Debug(IActivityMonitor, String, Exception, CKTrait, Int32, String) ActivityMonitorSimpleSenderExtension.Debug(IActivityMonitor, Func<String>, CKTrait, Int32, String) ActivityMonitorSimpleSenderExtension.Debug(IActivityMonitor, Func<String>, Exception, CKTrait, Int32, String) ActivityMonitorSimpleSenderExtension.Trace(IActivityMonitor, Exception, Int32, String) ActivityMonitorSimpleSenderExtension.Trace(IActivityMonitor, String, Int32, String) ActivityMonitorSimpleSenderExtension.Trace(IActivityMonitor, String, Exception, Int32, String) ActivityMonitorSimpleSenderExtension.Trace(IActivityMonitor, Func<String>, Int32, String) ActivityMonitorSimpleSenderExtension.Trace(IActivityMonitor, Func<String>, Exception, Int32, String) ActivityMonitorSimpleSenderExtension.Trace(IActivityMonitor, Exception, CKTrait, Int32, String) ActivityMonitorSimpleSenderExtension.Trace(IActivityMonitor, String, CKTrait, Int32, String) ActivityMonitorSimpleSenderExtension.Trace(IActivityMonitor, String, Exception, CKTrait, Int32, String) ActivityMonitorSimpleSenderExtension.Trace(IActivityMonitor, Func<String>, CKTrait, Int32, String) ActivityMonitorSimpleSenderExtension.Trace(IActivityMonitor, Func<String>, Exception, CKTrait, Int32, String) ActivityMonitorSimpleSenderExtension.Info(IActivityMonitor, Exception, Int32, String) ActivityMonitorSimpleSenderExtension.Info(IActivityMonitor, String, Int32, String) ActivityMonitorSimpleSenderExtension.Info(IActivityMonitor, String, Exception, Int32, String) ActivityMonitorSimpleSenderExtension.Info(IActivityMonitor, Func<String>, Int32, String) ActivityMonitorSimpleSenderExtension.Info(IActivityMonitor, Func<String>, Exception, Int32, String) ActivityMonitorSimpleSenderExtension.Info(IActivityMonitor, Exception, CKTrait, Int32, String) ActivityMonitorSimpleSenderExtension.Info(IActivityMonitor, String, CKTrait, Int32, String) ActivityMonitorSimpleSenderExtension.Info(IActivityMonitor, String, Exception, CKTrait, Int32, String) ActivityMonitorSimpleSenderExtension.Info(IActivityMonitor, Func<String>, CKTrait, Int32, String) ActivityMonitorSimpleSenderExtension.Info(IActivityMonitor, Func<String>, Exception, CKTrait, Int32, String) ActivityMonitorSimpleSenderExtension.Warn(IActivityMonitor, Exception, Int32, String) ActivityMonitorSimpleSenderExtension.Warn(IActivityMonitor, String, Int32, String) ActivityMonitorSimpleSenderExtension.Warn(IActivityMonitor, String, Exception, Int32, String) ActivityMonitorSimpleSenderExtension.Warn(IActivityMonitor, Func<String>, Int32, String) ActivityMonitorSimpleSenderExtension.Warn(IActivityMonitor, Func<String>, Exception, Int32, String) ActivityMonitorSimpleSenderExtension.Warn(IActivityMonitor, Exception, CKTrait, Int32, String) ActivityMonitorSimpleSenderExtension.Warn(IActivityMonitor, String, CKTrait, Int32, String) ActivityMonitorSimpleSenderExtension.Warn(IActivityMonitor, String, Exception, CKTrait, Int32, String) ActivityMonitorSimpleSenderExtension.Warn(IActivityMonitor, Func<String>, CKTrait, Int32, String) ActivityMonitorSimpleSenderExtension.Warn(IActivityMonitor, Func<String>, Exception, CKTrait, Int32, String) ActivityMonitorSimpleSenderExtension.Error(IActivityMonitor, Exception, Int32, String) ActivityMonitorSimpleSenderExtension.Error(IActivityMonitor, String, Int32, String) ActivityMonitorSimpleSenderExtension.Error(IActivityMonitor, String, Exception, Int32, String) ActivityMonitorSimpleSenderExtension.Error(IActivityMonitor, Func<String>, Int32, String) ActivityMonitorSimpleSenderExtension.Error(IActivityMonitor, Func<String>, Exception, Int32, String) ActivityMonitorSimpleSenderExtension.Error(IActivityMonitor, Exception, CKTrait, Int32, String) ActivityMonitorSimpleSenderExtension.Error(IActivityMonitor, String, CKTrait, Int32, String) ActivityMonitorSimpleSenderExtension.Error(IActivityMonitor, String, Exception, CKTrait, Int32, String) ActivityMonitorSimpleSenderExtension.Error(IActivityMonitor, Func<String>, CKTrait, Int32, String) ActivityMonitorSimpleSenderExtension.Error(IActivityMonitor, Func<String>, Exception, CKTrait, Int32, String) ActivityMonitorSimpleSenderExtension.Fatal(IActivityMonitor, Exception, Int32, String) ActivityMonitorSimpleSenderExtension.Fatal(IActivityMonitor, String, Int32, String) ActivityMonitorSimpleSenderExtension.Fatal(IActivityMonitor, String, Exception, Int32, String) ActivityMonitorSimpleSenderExtension.Fatal(IActivityMonitor, Func<String>, Int32, String) ActivityMonitorSimpleSenderExtension.Fatal(IActivityMonitor, Func<String>, Exception, Int32, String) ActivityMonitorSimpleSenderExtension.Fatal(IActivityMonitor, Exception, CKTrait, Int32, String) ActivityMonitorSimpleSenderExtension.Fatal(IActivityMonitor, String, CKTrait, Int32, String) ActivityMonitorSimpleSenderExtension.Fatal(IActivityMonitor, String, Exception, CKTrait, Int32, String) ActivityMonitorSimpleSenderExtension.Fatal(IActivityMonitor, Func<String>, CKTrait, Int32, String) ActivityMonitorSimpleSenderExtension.Fatal(IActivityMonitor, Func<String>, Exception, CKTrait, Int32, String) ActivityMonitorSimpleSenderExtension.Log(IActivityMonitor, LogLevel, Exception, Int32, String) ActivityMonitorSimpleSenderExtension.Log(IActivityMonitor, LogLevel, String, Int32, String) ActivityMonitorSimpleSenderExtension.Log(IActivityMonitor, LogLevel, String, Exception, Int32, String) ActivityMonitorSimpleSenderExtension.Log(IActivityMonitor, LogLevel, Func<String>, Int32, String) ActivityMonitorSimpleSenderExtension.Log(IActivityMonitor, LogLevel, Func<String>, Exception, Int32, String) ActivityMonitorSimpleSenderExtension.Log(IActivityMonitor, LogLevel, Exception, CKTrait, Int32, String) ActivityMonitorSimpleSenderExtension.Log(IActivityMonitor, LogLevel, String, CKTrait, Int32, String) ActivityMonitorSimpleSenderExtension.Log(IActivityMonitor, LogLevel, String, Exception, CKTrait, Int32, String) ActivityMonitorSimpleSenderExtension.Log(IActivityMonitor, LogLevel, Func<String>, CKTrait, Int32, String) ActivityMonitorSimpleSenderExtension.Log(IActivityMonitor, LogLevel, Func<String>, Exception, CKTrait, Int32, String) ActivityMonitorSenderExtension.Debug(IActivityMonitor, Int32, String) ActivityMonitorSenderExtension.OpenDebug(IActivityMonitor, Int32, String) ActivityMonitorSenderExtension.Trace(IActivityMonitor, Int32, String) ActivityMonitorSenderExtension.OpenTrace(IActivityMonitor, Int32, String) ActivityMonitorSenderExtension.Info(IActivityMonitor, Int32, String) ActivityMonitorSenderExtension.OpenInfo(IActivityMonitor, Int32, String) ActivityMonitorSenderExtension.Warn(IActivityMonitor, Int32, String) ActivityMonitorSenderExtension.OpenWarn(IActivityMonitor, Int32, String) ActivityMonitorSenderExtension.Error(IActivityMonitor, Int32, String) ActivityMonitorSenderExtension.OpenError(IActivityMonitor, Int32, String) ActivityMonitorSenderExtension.Fatal(IActivityMonitor, Int32, String) ActivityMonitorSenderExtension.OpenFatal(IActivityMonitor, Int32, String) ActivityMonitorExtension.NextLogTime(IActivityMonitor) ActivityMonitorExtension.MonitorEnd(IActivityMonitor, String, String, Int32) ActivityMonitorExtension.ShouldLogLine(IActivityMonitor, LogLevel, String, Int32) ActivityMonitorExtension.ShouldLogGroup(IActivityMonitor, LogLevel, String, Int32) ActivityMonitorExtension.UnfilteredLog(IActivityMonitor, CKTrait, LogLevel, String, DateTimeStamp, Exception, String, Int32) ActivityMonitorExtension.UnfilteredOpenGroup(IActivityMonitor, CKTrait, LogLevel, Func<String>, String, DateTimeStamp, Exception, String, Int32) ActivityMonitorExtension.CloseGroup(IActivityMonitor, Object) ActivityMonitorExtension.CollectEntries(IActivityMonitor, Action<IReadOnlyList<ActivityMonitorSimpleCollector.Entry>>, LogLevelFilter) ActivityMonitorExtension.OnError(IActivityMonitor, Action) ActivityMonitorExtension.OnError(IActivityMonitor, Action, Action) ActivityMonitorExtension.TemporarilySetMinimalFilter(IActivityMonitor, LogLevelFilter, LogLevelFilter) ActivityMonitorExtension.TemporarilySetMinimalFilter(IActivityMonitor, LogFilter) ActivityMonitorExtension.TemporarilySetAutoTags(IActivityMonitor, CKTrait, SetOperation) ActivityMonitorExtension.DependentActivity(IActivityMonitor, String, Int32) ActivityMonitorExtension.StartDependentActivity(IActivityMonitor, ActivityMonitor.DependentToken, String, Int32)"
  },
  "api/CK.Core.ActivityMonitorPathCatcher.html": {
    "href": "api/CK.Core.ActivityMonitorPathCatcher.html",
    "title": "Class ActivityMonitorPathCatcher | CK-Text",
    "keywords": "Class ActivityMonitorPathCatcher The \"Path Catcher\" captures the current path of the opened groups and the last, current, line and exposes it thanks to a read only list of ActivityMonitorPathCatcher.PathElement (the DynamicPath property), plus two other specific paths, the LastErrorPath and the LastWarnOrErrorPath . Inheritance Object ActivityMonitorClient ActivityMonitorPathCatcher Inherited Members ActivityMonitorClient.Empty ActivityMonitorClient.MinimalFilter ActivityMonitorClient.OnGroupClosing(IActivityLogGroup, List<ActivityLogGroupConclusion>) ActivityMonitorClient.OnTopicChanged(String, String, Int32) ActivityMonitorClient.OnAutoTagsChanged(CKTrait) ActivityMonitorClient.CreateMultipleRegisterOnBoundClientException(IActivityMonitorBoundClient) ActivityMonitorClient.IActivityMonitorClient.OnUnfilteredLog(ActivityMonitorLogData) ActivityMonitorClient.IActivityMonitorClient.OnOpenGroup(IActivityLogGroup) ActivityMonitorClient.IActivityMonitorClient.OnGroupClosing(IActivityLogGroup, List<ActivityLogGroupConclusion>) ActivityMonitorClient.IActivityMonitorClient.OnGroupClosed(IActivityLogGroup, IReadOnlyList<ActivityLogGroupConclusion>) ActivityMonitorClient.IActivityMonitorClient.OnTopicChanged(String, String, Int32) ActivityMonitorClient.IActivityMonitorClient.OnAutoTagsChanged(CKTrait) Object.ToString() Object.Equals(Object) Object.Equals(Object, Object) Object.ReferenceEquals(Object, Object) Object.GetHashCode() Object.GetType() Object.MemberwiseClone() Namespace : CK.Core Assembly : CK.ActivityMonitor.dll Syntax public sealed class ActivityMonitorPathCatcher : ActivityMonitorClient, IActivityMonitorBoundClient, IActivityMonitorClient Constructors | Improve this Doc View Source ActivityMonitorPathCatcher() Initializes a new ActivityMonitorPathCatcher . Declaration public ActivityMonitorPathCatcher() Properties | Improve this Doc View Source DynamicPath Gets the current (mutable) path. You may use ToArray or ToList methods to take a snapshot of this list. Use the extension method ToStringPath(IEnumerable<ActivityMonitorPathCatcher.PathElement>, String, String, String, String, String, String, String, String, String, String) to easily format this path. Declaration public IReadOnlyList<ActivityMonitorPathCatcher.PathElement> DynamicPath { get; } Property Value Type Description IReadOnlyList < ActivityMonitorPathCatcher.PathElement > | Improve this Doc View Source IsLocked Gets or sets whether this ActivityMonitorPathCatcher can be removed from its monitor. Defaults to false. When setting this to true, UnregisterClient(IActivityMonitorClient) does not remove it. Declaration public bool IsLocked { get; set; } Property Value Type Description Boolean | Improve this Doc View Source LastErrorPath Gets the last DynamicPath where an Error or a Fatal occurred. Null if no error nor fatal occurred. Use the extension method ToStringPath(IEnumerable<ActivityMonitorPathCatcher.PathElement>, String, String, String, String, String, String, String, String, String, String) to easily format this path. Declaration public IReadOnlyList<ActivityMonitorPathCatcher.PathElement> LastErrorPath { get; } Property Value Type Description IReadOnlyList < ActivityMonitorPathCatcher.PathElement > | Improve this Doc View Source LastWarnOrErrorPath Gets the last path with a Fatal , Error or a Warn . Null if no error, fatal nor warn occurred. Use the extension method ToStringPath(IEnumerable<ActivityMonitorPathCatcher.PathElement>, String, String, String, String, String, String, String, String, String, String) to easily format this path. Declaration public IReadOnlyList<ActivityMonitorPathCatcher.PathElement> LastWarnOrErrorPath { get; } Property Value Type Description IReadOnlyList < ActivityMonitorPathCatcher.PathElement > Methods | Improve this Doc View Source ClearLastErrorPath() Clears current LastErrorPath (sets it to null). Declaration public void ClearLastErrorPath() | Improve this Doc View Source ClearLastWarnPath(Boolean) Clears current LastWarnOrErrorPath (sets it to null), and optionally clears LastErrorPath . Declaration public void ClearLastWarnPath(bool clearLastErrorPath = false) Parameters Type Name Description Boolean clearLastErrorPath | Improve this Doc View Source OnGroupClosed(IActivityLogGroup, IReadOnlyList<ActivityLogGroupConclusion>) Removes one or two last ActivityMonitorPathCatcher.PathElement of DynamicPath . Declaration protected override void OnGroupClosed(IActivityLogGroup group, IReadOnlyList<ActivityLogGroupConclusion> conclusions) Parameters Type Name Description IActivityLogGroup group The closed group. IReadOnlyList < ActivityLogGroupConclusion > conclusions Texts that conclude the group. Never null but can be empty. Overrides ActivityMonitorClient.OnGroupClosed(IActivityLogGroup, IReadOnlyList<ActivityLogGroupConclusion>) | Improve this Doc View Source OnOpenGroup(IActivityLogGroup) Appends or updates the last ActivityMonitorPathCatcher.PathElement of DynamicPath and handles errors or warning. Declaration protected override void OnOpenGroup(IActivityLogGroup group) Parameters Type Name Description IActivityLogGroup group The newly opened IActivityLogGroup . Overrides ActivityMonitorClient.OnOpenGroup(IActivityLogGroup) | Improve this Doc View Source OnUnfilteredLog(ActivityMonitorLogData) Appends or updates the last ActivityMonitorPathCatcher.PathElement of DynamicPath and handles errors or warning. Declaration protected override void OnUnfilteredLog(ActivityMonitorLogData data) Parameters Type Name Description ActivityMonitorLogData data Log data. Never null. Overrides ActivityMonitorClient.OnUnfilteredLog(ActivityMonitorLogData) Explicit Interface Implementations | Improve this Doc View Source IActivityMonitorBoundClient.IsDead Declaration bool IActivityMonitorBoundClient.IsDead { get; } Returns Type Description Boolean Implements IActivityMonitorBoundClient.IsDead | Improve this Doc View Source IActivityMonitorBoundClient.SetMonitor(IActivityMonitorImpl, Boolean) Declaration void IActivityMonitorBoundClient.SetMonitor(IActivityMonitorImpl source, bool forceBuggyRemove) Parameters Type Name Description IActivityMonitorImpl source Boolean forceBuggyRemove Implements IActivityMonitorBoundClient.SetMonitor(IActivityMonitorImpl, Boolean)"
  },
  "api/CK.Core.ActivityMonitorPathCatcher.PathElement.html": {
    "href": "api/CK.Core.ActivityMonitorPathCatcher.PathElement.html",
    "title": "Class ActivityMonitorPathCatcher.PathElement | CK-Text",
    "keywords": "Class ActivityMonitorPathCatcher.PathElement Element of the DynamicPath , LastErrorPath , or LastWarnOrErrorPath . Inheritance Object ActivityMonitorPathCatcher.PathElement Inherited Members Object.Equals(Object) Object.Equals(Object, Object) Object.ReferenceEquals(Object, Object) Object.GetHashCode() Object.GetType() Object.MemberwiseClone() Namespace : CK.Core Assembly : CK.ActivityMonitor.dll Syntax public class PathElement Properties | Improve this Doc View Source GroupConclusion Gets the conclusions associated to a group. Null if this element does not correspond to a group. Declaration public IReadOnlyList<ActivityLogGroupConclusion> GroupConclusion { get; } Property Value Type Description IReadOnlyList < ActivityLogGroupConclusion > | Improve this Doc View Source MaskedLevel Gets the log level of the log entry. Declaration public LogLevel MaskedLevel { get; } Property Value Type Description LogLevel | Improve this Doc View Source Tags Gets the tags of the log entry. Declaration public CKTrait Tags { get; } Property Value Type Description CK.Core.CKTrait | Improve this Doc View Source Text Gets the text of the log entry. Declaration public string Text { get; } Property Value Type Description String Methods | Improve this Doc View Source ToString() Overridden to return the Text of this element. Declaration public override string ToString() Returns Type Description String This Text property. Overrides Object.ToString()"
  },
  "api/CK.Core.ActivityMonitorSimpleCollector.Entry.html": {
    "href": "api/CK.Core.ActivityMonitorSimpleCollector.Entry.html",
    "title": "Class ActivityMonitorSimpleCollector.Entry | CK-Text",
    "keywords": "Class ActivityMonitorSimpleCollector.Entry Element of the Entries . Inheritance Object ActivityMonitorSimpleCollector.Entry Inherited Members Object.Equals(Object) Object.Equals(Object, Object) Object.ReferenceEquals(Object, Object) Object.GetHashCode() Object.GetType() Object.MemberwiseClone() Namespace : CK.Core Assembly : CK.ActivityMonitor.dll Syntax public class Entry Fields | Improve this Doc View Source Exception The exception of the log entry if any. Declaration public readonly Exception Exception Field Value Type Description Exception | Improve this Doc View Source LogTime Time of the log entry. Declaration public readonly DateTimeStamp LogTime Field Value Type Description CK.Core.DateTimeStamp | Improve this Doc View Source MaskedLevel The log level of the log entry. Declaration public readonly LogLevel MaskedLevel Field Value Type Description LogLevel | Improve this Doc View Source Tags The tags of the log entry. Declaration public readonly CKTrait Tags Field Value Type Description CK.Core.CKTrait | Improve this Doc View Source Text The text of the log entry. Declaration public readonly string Text Field Value Type Description String Methods | Improve this Doc View Source ToString() Overridden to return the Text of this element. Declaration public override string ToString() Returns Type Description String This Text property. Overrides Object.ToString()"
  },
  "api/CK.Core.IActivityMonitorBoundClient.html": {
    "href": "api/CK.Core.IActivityMonitorBoundClient.html",
    "title": "Interface IActivityMonitorBoundClient | CK-Text",
    "keywords": "Interface IActivityMonitorBoundClient Specialized IActivityMonitorClient that is bound to one IActivityMonitor . Clients that can not be registered into multiple outputs (and receive logs from multiple monitors at the same time) should implement this interface in order to control their registration/un-registration. Inherited Members IActivityMonitorClient.OnUnfilteredLog(ActivityMonitorLogData) IActivityMonitorClient.OnOpenGroup(IActivityLogGroup) IActivityMonitorClient.OnGroupClosing(IActivityLogGroup, List<ActivityLogGroupConclusion>) IActivityMonitorClient.OnGroupClosed(IActivityLogGroup, IReadOnlyList<ActivityLogGroupConclusion>) IActivityMonitorClient.OnTopicChanged(String, String, Int32) IActivityMonitorClient.OnAutoTagsChanged(CKTrait) Namespace : CK.Core Assembly : CK.ActivityMonitor.dll Syntax public interface IActivityMonitorBoundClient : IActivityMonitorClient Properties | Improve this Doc View Source IsDead Gets whether this client is dead: it should be removed from the source activity monitor's clients. It should obviously defaults to false (and once true should remain true). Implementations should call SignalChange() to on its current source to trigger the removal. Declaration bool IsDead { get; } Property Value Type Description Boolean | Improve this Doc View Source MinimalFilter Gets the minimal log level that this Client expects. Should default to Undefined if this client has no filtering requirements. Declaration LogFilter MinimalFilter { get; } Property Value Type Description LogFilter Methods | Improve this Doc View Source SetMonitor(IActivityMonitorImpl, Boolean) Called by IActivityMonitorOutput when registering or unregistering this client. Declaration void SetMonitor(IActivityMonitorImpl source, bool forceBuggyRemove) Parameters Type Name Description IActivityMonitorImpl source The monitor that will send log. Boolean forceBuggyRemove True if this client must be removed because one of its method thrown an exception. The source is null."
  },
  "api/CK.Core.Impl.html": {
    "href": "api/CK.Core.Impl.html",
    "title": "Namespace CK.Core.Impl | CK-Text",
    "keywords": "Namespace CK.Core.Impl Classes ActivityMonitorOutput Implementation of IActivityMonitorOutput for Output . ActivityMonitorResources String values for errors and messages. Interfaces IActivityMonitorImpl Defines required aspects that an actual monitor implementation must support."
  },
  "api/CK.Core.IActivityMonitorGroupSender.html": {
    "href": "api/CK.Core.IActivityMonitorGroupSender.html",
    "title": "Interface IActivityMonitorGroupSender | CK-Text",
    "keywords": "Interface IActivityMonitorGroupSender The interface that carries Send extension methods for groups. Namespace : CK.Core Assembly : CK.ActivityMonitor.StandardSender.dll Syntax public interface IActivityMonitorGroupSender Properties | Improve this Doc View Source IsRejected Gets whether the log has been rejected. Declaration bool IsRejected { get; } Property Value Type Description Boolean Extension Methods ActivityMonitorSendExtension.Send(IActivityMonitorGroupSender, String) ActivityMonitorSendExtension.Send(IActivityMonitorGroupSender, String, Object) ActivityMonitorSendExtension.Send(IActivityMonitorGroupSender, String, Object, Object) ActivityMonitorSendExtension.Send(IActivityMonitorGroupSender, String, Object, Object, Object) ActivityMonitorSendExtension.Send(IActivityMonitorGroupSender, String, Object, Object, Object, Object) ActivityMonitorSendExtension.Send(IActivityMonitorGroupSender, String, Object[]) ActivityMonitorSendExtension.Send(IActivityMonitorGroupSender, Func<String>) ActivityMonitorSendExtension.Send<T>(IActivityMonitorGroupSender, Func<T, String>, T) ActivityMonitorSendExtension.Send<T1, T2>(IActivityMonitorGroupSender, Func<T1, T2, String>, T1, T2) ActivityMonitorSendExtension.Send<T1, T2, T3>(IActivityMonitorGroupSender, Func<T1, T2, T3, String>, T1, T2, T3) ActivityMonitorSendExtension.Send(IActivityMonitorGroupSender, CKTrait, String) ActivityMonitorSendExtension.Send(IActivityMonitorGroupSender, CKTrait, String, Object) ActivityMonitorSendExtension.Send(IActivityMonitorGroupSender, CKTrait, String, Object, Object) ActivityMonitorSendExtension.Send(IActivityMonitorGroupSender, CKTrait, String, Object, Object, Object) ActivityMonitorSendExtension.Send(IActivityMonitorGroupSender, CKTrait, String, Object, Object, Object, Object) ActivityMonitorSendExtension.Send(IActivityMonitorGroupSender, CKTrait, String, Object[]) ActivityMonitorSendExtension.Send(IActivityMonitorGroupSender, CKTrait, Func<String>) ActivityMonitorSendExtension.Send<T>(IActivityMonitorGroupSender, CKTrait, Func<T, String>, T) ActivityMonitorSendExtension.Send<T1, T2>(IActivityMonitorGroupSender, CKTrait, Func<T1, T2, String>, T1, T2) ActivityMonitorSendExtension.Send<T1, T2, T3>(IActivityMonitorGroupSender, CKTrait, Func<T1, T2, T3, String>, T1, T2, T3) ActivityMonitorSendExtension.Send(IActivityMonitorGroupSender, Exception) ActivityMonitorSendExtension.Send(IActivityMonitorGroupSender, Exception, String) ActivityMonitorSendExtension.Send(IActivityMonitorGroupSender, Exception, String, Object) ActivityMonitorSendExtension.Send(IActivityMonitorGroupSender, Exception, String, Object, Object) ActivityMonitorSendExtension.Send(IActivityMonitorGroupSender, Exception, String, Object, Object, Object) ActivityMonitorSendExtension.Send(IActivityMonitorGroupSender, Exception, String, Object, Object, Object, Object) ActivityMonitorSendExtension.Send(IActivityMonitorGroupSender, Exception, String, Object[]) ActivityMonitorSendExtension.Send(IActivityMonitorGroupSender, Exception, Func<String>) ActivityMonitorSendExtension.Send<T>(IActivityMonitorGroupSender, Exception, Func<T, String>, T) ActivityMonitorSendExtension.Send<T1, T2>(IActivityMonitorGroupSender, Exception, Func<T1, T2, String>, T1, T2) ActivityMonitorSendExtension.Send<T1, T2, T3>(IActivityMonitorGroupSender, Exception, Func<T1, T2, T3, String>, T1, T2, T3) ActivityMonitorSendExtension.Send(IActivityMonitorGroupSender, Exception, CKTrait) ActivityMonitorSendExtension.Send(IActivityMonitorGroupSender, Exception, CKTrait, String) ActivityMonitorSendExtension.Send(IActivityMonitorGroupSender, Exception, CKTrait, String, Object) ActivityMonitorSendExtension.Send(IActivityMonitorGroupSender, Exception, CKTrait, String, Object, Object) ActivityMonitorSendExtension.Send(IActivityMonitorGroupSender, Exception, CKTrait, String, Object, Object, Object) ActivityMonitorSendExtension.Send(IActivityMonitorGroupSender, Exception, CKTrait, String, Object, Object, Object, Object) ActivityMonitorSendExtension.Send(IActivityMonitorGroupSender, Exception, CKTrait, String, Object[]) ActivityMonitorSendExtension.Send(IActivityMonitorGroupSender, Exception, CKTrait, Func<String>) ActivityMonitorSendExtension.Send<T>(IActivityMonitorGroupSender, Exception, CKTrait, Func<T, String>, T) ActivityMonitorSendExtension.Send<T1, T2>(IActivityMonitorGroupSender, Exception, CKTrait, Func<T1, T2, String>, T1, T2) ActivityMonitorSendExtension.Send<T1, T2, T3>(IActivityMonitorGroupSender, Exception, CKTrait, Func<T1, T2, T3, String>, T1, T2, T3)"
  },
  "api/CK.Core.Impl.ActivityMonitorResources.html": {
    "href": "api/CK.Core.Impl.ActivityMonitorResources.html",
    "title": "Class ActivityMonitorResources | CK-Text",
    "keywords": "Class ActivityMonitorResources String values for errors and messages. Inheritance Object ActivityMonitorResources Inherited Members Object.ToString() Object.Equals(Object) Object.Equals(Object, Object) Object.ReferenceEquals(Object, Object) Object.GetHashCode() Object.GetType() Object.MemberwiseClone() Namespace : CK.Core.Impl Assembly : CK.ActivityMonitor.dll Syntax public class ActivityMonitorResources Fields | Improve this Doc View Source ActivityMonitorBoundClientMultipleRegister Declaration public static readonly string ActivityMonitorBoundClientMultipleRegister Field Value Type Description String | Improve this Doc View Source ActivityMonitorConcurrentThreadAccess Declaration public static readonly string ActivityMonitorConcurrentThreadAccess Field Value Type Description String | Improve this Doc View Source ActivityMonitorDependentTokenMustBeDelayedLaunch Declaration public static readonly string ActivityMonitorDependentTokenMustBeDelayedLaunch Field Value Type Description String | Improve this Doc View Source ActivityMonitorErrorWhileGetConclusionText Declaration public static readonly string ActivityMonitorErrorWhileGetConclusionText Field Value Type Description String | Improve this Doc View Source ActivityMonitorInvalidLogLevel Declaration public static readonly string ActivityMonitorInvalidLogLevel Field Value Type Description String | Improve this Doc View Source ActivityMonitorReentrancyCallOnly Declaration public static readonly string ActivityMonitorReentrancyCallOnly Field Value Type Description String | Improve this Doc View Source ActivityMonitorReentrancyError Declaration public static readonly string ActivityMonitorReentrancyError Field Value Type Description String | Improve this Doc View Source ActivityMonitorReentrancyReleaseError Declaration public static readonly string ActivityMonitorReentrancyReleaseError Field Value Type Description String | Improve this Doc View Source ActivityMonitorTagMustBeRegistered Declaration public static readonly string ActivityMonitorTagMustBeRegistered Field Value Type Description String | Improve this Doc View Source ClosedByBridgeRemoved Declaration public static readonly string ClosedByBridgeRemoved Field Value Type Description String | Improve this Doc View Source InvalidRootLogPath Declaration public static readonly string InvalidRootLogPath Field Value Type Description String | Improve this Doc View Source PossibleWrongOverloadUseWithException Declaration public static readonly string PossibleWrongOverloadUseWithException Field Value Type Description String | Improve this Doc View Source RootLogPathMustBeSet Declaration public static readonly string RootLogPathMustBeSet Field Value Type Description String | Improve this Doc View Source SystemActivityMonitorRootLogPathSetOnlyOnce Declaration public static readonly string SystemActivityMonitorRootLogPathSetOnlyOnce Field Value Type Description String"
  },
  "api/CK.Core.LogLevelFilter.html": {
    "href": "api/CK.Core.LogLevelFilter.html",
    "title": "Enum LogLevelFilter | CK-Text",
    "keywords": "Enum LogLevelFilter Defines filters for LogLevel . Namespace : CK.Core Assembly : CK.ActivityMonitor.dll Syntax public enum LogLevelFilter : short Remarks LogFilter capture two levels: one for lines and one for groups. Fields Name Description Debug Everything is logged ( Debug ). Error Only Error and above is logged. Fatal Only Fatal is logged. Info Only Info and above is logged. Invalid Invalid filter can be use to designate an unknown filter. Since its value is -1, in the worst case it will not filter anything. None No filter: can have the same effect as Trace but SHOULD indicate an unknown or undefined filter that, when combined with other level filters to compute the final (minimal) filter level to take into account, must be ignored. Off Do not log anything. Trace Trace and above is logged.. Warn Only Warn and above is logged."
  },
  "api/CK.Core.IDisposableGroup.html": {
    "href": "api/CK.Core.IDisposableGroup.html",
    "title": "Interface IDisposableGroup | CK-Text",
    "keywords": "Interface IDisposableGroup Interface obtained once a Group has been opened. Inherited Members IDisposable.Dispose() Namespace : CK.Core Assembly : CK.ActivityMonitor.dll Syntax public interface IDisposableGroup : IDisposable Properties | Improve this Doc View Source IsRejectedGroup Gets whether the groups has been filtered. It must be closed as usual but it's opening and closing will not be recorded. Declaration bool IsRejectedGroup { get; } Property Value Type Description Boolean Methods | Improve this Doc View Source ConcludeWith(Func<String>) Sets a function that will be called on group closing to generate a conclusion. When IsRejectedGroup is true, this function does nothing. Declaration IDisposable ConcludeWith(Func<string> getConclusionText) Parameters Type Name Description Func < String > getConclusionText Function that generates a group conclusion. Returns Type Description IDisposable A disposable object that can be used to close the group."
  },
  "api/CK.Core.ActivityMonitorBridge.html": {
    "href": "api/CK.Core.ActivityMonitorBridge.html",
    "title": "Class ActivityMonitorBridge | CK-Text",
    "keywords": "Class ActivityMonitorBridge A IActivityMonitorClient that relays what happens in a monitor to another monitor. Inheritance Object ActivityMonitorBridge Inherited Members Object.ToString() Object.Equals(Object) Object.Equals(Object, Object) Object.ReferenceEquals(Object, Object) Object.GetHashCode() Object.GetType() Object.MemberwiseClone() Namespace : CK.Core Assembly : CK.ActivityMonitor.dll Syntax public sealed class ActivityMonitorBridge : IActivityMonitorBoundClient, IActivityMonitorClient, IActivityMonitorBridgeCallback Constructors | Improve this Doc View Source ActivityMonitorBridge(ActivityMonitorBridgeTarget, Boolean, Boolean, Boolean) Initialize a new ActivityMonitorBridge bound to an existing ActivityMonitorBridgeTarget This Client should be registered in the Output of a local monitor. Declaration public ActivityMonitorBridge(ActivityMonitorBridgeTarget bridge, bool pullTargetTopicAndAutoTagsFromTarget, bool pushTopicAndAutoTagsToTarget, bool applyTargetFilterToUnfilteredLogs = false) Parameters Type Name Description ActivityMonitorBridgeTarget bridge The target bridge. Boolean pullTargetTopicAndAutoTagsFromTarget When true, the Topic and AutoTags are automaticaly updated whenever they change on the target monitor. Boolean pushTopicAndAutoTagsToTarget When true, any change to Topic or AutoTags are applied to the target monitor. Boolean applyTargetFilterToUnfilteredLogs True to avoid sending logs with level below the target MinimalFilter (when HonorMonitorFilter is true and it is an unfiltered line or group log). This is an optimization that can be used to send less data to the target monitor but breaks the UnfilteredLog/UnfilteredOpenGroup contract. Fields | Improve this Doc View Source TagBridgePrematureClose Tags group conclusions emitted because of premature (unbalanced) removing of a bridge from a source monitor. Declaration public static readonly CKTrait TagBridgePrematureClose Field Value Type Description CK.Core.CKTrait Properties | Improve this Doc View Source BridgeTarget Gets the target bridge of the TargetMonitor . Declaration public ActivityMonitorBridgeTarget BridgeTarget { get; } Property Value Type Description ActivityMonitorBridgeTarget | Improve this Doc View Source PullTopicAndAutoTagsFromTarget Gets whether this bridge updates the Topic and AutoTags of its monitor whenever they change on the target monitor. Declaration public bool PullTopicAndAutoTagsFromTarget { get; } Property Value Type Description Boolean | Improve this Doc View Source TargetMonitor Gets the target monitor. Declaration public IActivityMonitor TargetMonitor { get; } Property Value Type Description IActivityMonitor Explicit Interface Implementations | Improve this Doc View Source IActivityMonitorBoundClient.IsDead Declaration bool IActivityMonitorBoundClient.IsDead { get; } Returns Type Description Boolean Implements IActivityMonitorBoundClient.IsDead | Improve this Doc View Source IActivityMonitorBoundClient.MinimalFilter Declaration LogFilter IActivityMonitorBoundClient.MinimalFilter { get; } Returns Type Description LogFilter Implements IActivityMonitorBoundClient.MinimalFilter | Improve this Doc View Source IActivityMonitorBoundClient.SetMonitor(IActivityMonitorImpl, Boolean) forceBuggyRemove is not used here since this client is not lockable. Declaration void IActivityMonitorBoundClient.SetMonitor(IActivityMonitorImpl source, bool forceBuggyRemove) Parameters Type Name Description IActivityMonitorImpl source Boolean forceBuggyRemove Implements IActivityMonitorBoundClient.SetMonitor(IActivityMonitorImpl, Boolean) | Improve this Doc View Source IActivityMonitorClient.OnAutoTagsChanged(CKTrait) Declaration void IActivityMonitorClient.OnAutoTagsChanged(CKTrait newTags) Parameters Type Name Description CK.Core.CKTrait newTags Implements IActivityMonitorClient.OnAutoTagsChanged(CKTrait) | Improve this Doc View Source IActivityMonitorClient.OnGroupClosed(IActivityLogGroup, IReadOnlyList<ActivityLogGroupConclusion>) Declaration void IActivityMonitorClient.OnGroupClosed(IActivityLogGroup group, IReadOnlyList<ActivityLogGroupConclusion> conclusions) Parameters Type Name Description IActivityLogGroup group IReadOnlyList < ActivityLogGroupConclusion > conclusions Implements IActivityMonitorClient.OnGroupClosed(IActivityLogGroup, IReadOnlyList<ActivityLogGroupConclusion>) | Improve this Doc View Source IActivityMonitorClient.OnGroupClosing(IActivityLogGroup, ref List<ActivityLogGroupConclusion>) Declaration void IActivityMonitorClient.OnGroupClosing(IActivityLogGroup group, ref List<ActivityLogGroupConclusion> conclusions) Parameters Type Name Description IActivityLogGroup group List < ActivityLogGroupConclusion > conclusions Implements IActivityMonitorClient.OnGroupClosing(IActivityLogGroup, ref List<ActivityLogGroupConclusion>) | Improve this Doc View Source IActivityMonitorClient.OnOpenGroup(IActivityLogGroup) Declaration void IActivityMonitorClient.OnOpenGroup(IActivityLogGroup group) Parameters Type Name Description IActivityLogGroup group Implements IActivityMonitorClient.OnOpenGroup(IActivityLogGroup) | Improve this Doc View Source IActivityMonitorClient.OnTopicChanged(String, String, Int32) Declaration void IActivityMonitorClient.OnTopicChanged(string newTopic, string fileName, int lineNumber) Parameters Type Name Description String newTopic String fileName Int32 lineNumber Implements IActivityMonitorClient.OnTopicChanged(String, String, Int32) | Improve this Doc View Source IActivityMonitorClient.OnUnfilteredLog(ActivityMonitorLogData) Declaration void IActivityMonitorClient.OnUnfilteredLog(ActivityMonitorLogData data) Parameters Type Name Description ActivityMonitorLogData data Implements IActivityMonitorClient.OnUnfilteredLog(ActivityMonitorLogData)"
  },
  "api/CK.Core.ActivityMonitorExtension.html": {
    "href": "api/CK.Core.ActivityMonitorExtension.html",
    "title": "Class ActivityMonitorExtension | CK-Text",
    "keywords": "Class ActivityMonitorExtension Provides extension methods for IActivityMonitor and other types from the Activity monitor framework. Inheritance Object ActivityMonitorExtension Inherited Members Object.ToString() Object.Equals(Object) Object.Equals(Object, Object) Object.ReferenceEquals(Object, Object) Object.GetHashCode() Object.GetType() Object.MemberwiseClone() Namespace : CK.Core Assembly : CK.ActivityMonitor.dll Syntax public static class ActivityMonitorExtension Methods | Improve this Doc View Source CloseGroup(IActivityMonitor, Object) Closes the current Group. Optional parameter is polymorphic. It can be a string, a ActivityLogGroupConclusion , a List<T> or an IEnumerable<T> of ActivityLogGroupConclusion, or any object with an overridden ToString() method. See remarks (especially for List<ActivityLogGroupConclusion>). Declaration public static bool CloseGroup(this IActivityMonitor this, object userConclusion = null) Parameters Type Name Description IActivityMonitor this This IActivityMonitor . Object userConclusion Optional string, ActivityLogGroupConclusion object, enumerable of ActivityLogGroupConclusion or object to conclude the group. See remarks. Returns Type Description Boolean Remarks An untyped object is used here to easily and efficiently accommodate both string and already existing ActivityLogGroupConclusion. When a List<ActivityLogGroupConclusion> is used, it will be directly used to collect conclusion objects (new conclusions will be added to it). This is an optimization. | Improve this Doc View Source CollectEntries(IActivityMonitor, Action<IReadOnlyList<ActivityMonitorSimpleCollector.Entry>>, LogLevelFilter) Enables simple \"using\" syntax to easily collect any LogLevel (or above) entries (defaults to Error ) around operations. The callback is called when the the returned IDisposable is disposed and there are at least one collected entry. Declaration public static IDisposable CollectEntries(this IActivityMonitor this, Action<IReadOnlyList<ActivityMonitorSimpleCollector.Entry>> errorHandler, LogLevelFilter level = LogLevelFilter.Error) Parameters Type Name Description IActivityMonitor this This IActivityMonitor . Action < IReadOnlyList < ActivityMonitorSimpleCollector.Entry >> errorHandler An action that accepts a list of fatal or error ActivityMonitorSimpleCollector.Entry . LogLevelFilter level Defines the level of the collected entries (by default fatal or error entries). Returns Type Description IDisposable A IDisposable object used to manage the scope of this handler. | Improve this Doc View Source CreateBridgeTo(IActivityMonitorOutput, ActivityMonitorBridgeTarget) Creates a bridge to another monitor's ActivityMonitorBridgeTarget . Only one bridge to the same monitor can exist at a time: if FindBridgeTo(IActivityMonitorOutput, ActivityMonitorBridgeTarget) is not null, this throws a InvalidOperationException . This bridge does not synchronize AutoTags and Topic (see CreateStrongBridgeTo(IActivityMonitorOutput, ActivityMonitorBridgeTarget) ). Declaration public static IDisposable CreateBridgeTo(this IActivityMonitorOutput this, ActivityMonitorBridgeTarget targetBridge) Parameters Type Name Description IActivityMonitorOutput this This IActivityMonitorOutput . ActivityMonitorBridgeTarget targetBridge The target bridge that will receive our logs. Returns Type Description IDisposable A IDisposable object that can be disposed to automatically call UnbridgeTo(IActivityMonitorOutput, ActivityMonitorBridgeTarget) . | Improve this Doc View Source CreateStrongBridgeTo(IActivityMonitorOutput, ActivityMonitorBridgeTarget) Creates a strong bridge to another monitor's ActivityMonitorBridgeTarget . Only one bridge to the same monitor can exist at a time: if FindBridgeTo(IActivityMonitorOutput, ActivityMonitorBridgeTarget) is not null, this throws a InvalidOperationException . A strong bridge synchronizes AutoTags and Topic between the two monitors. When created, the 2 properties of the local monitor are set to the ones of the target monitor. Declaration public static IDisposable CreateStrongBridgeTo(this IActivityMonitorOutput this, ActivityMonitorBridgeTarget targetBridge) Parameters Type Name Description IActivityMonitorOutput this This IActivityMonitorOutput . ActivityMonitorBridgeTarget targetBridge The target bridge that will receive our logs. Returns Type Description IDisposable A IDisposable object that can be disposed to automatically call UnbridgeTo(IActivityMonitorOutput, ActivityMonitorBridgeTarget) . | Improve this Doc View Source DependentActivity(IActivityMonitor, String, Int32) Enables dependent activities token creation and activities launch. Use StartDependentActivity(IActivityMonitor, ActivityMonitor.DependentToken, String, Int32) to declare the start of a dependent activity on the target monitor. Declaration public static ActivityMonitorExtension.DependentSender DependentActivity(this IActivityMonitor this, string fileName = null, int lineNumber = 0) Parameters Type Name Description IActivityMonitor this This IActivityMonitor . String fileName Source file name of the emitter (automatically injected by C# compiler but can be explicitly set). Int32 lineNumber Line number in the source file (automatically injected by C# compiler but can be explicitly set). Returns Type Description ActivityMonitorExtension.DependentSender Sender object. | Improve this Doc View Source FindBridgeTo(IActivityMonitorOutput, ActivityMonitorBridgeTarget) Finds an existing bridge to another monitor. Declaration public static ActivityMonitorBridge FindBridgeTo(this IActivityMonitorOutput this, ActivityMonitorBridgeTarget targetBridge) Parameters Type Name Description IActivityMonitorOutput this This IActivityMonitorOutput . ActivityMonitorBridgeTarget targetBridge The target bridge that receives our logs. Returns Type Description ActivityMonitorBridge The existing ActivityMonitorBridge or null if no such bridge exists. | Improve this Doc View Source MonitorEnd(IActivityMonitor, String, String, Int32) Closes all opened groups and sends an unfiltered MonitorEnd log. Declaration public static void MonitorEnd(this IActivityMonitor this, string text = null, string fileName = null, int lineNumber = 0) Parameters Type Name Description IActivityMonitor this This IActivityMonitor . String text Optional log text (defaults to \"Done.\"). String fileName Source file name of the emitter (automatically injected by C# compiler but can be explicitly set). Int32 lineNumber Line number in the source file (automatically injected by C# compiler but can be explicitly set). | Improve this Doc View Source NextLogTime(IActivityMonitor) Returns a valid CK.Core.DateTimeStamp that will be used for a log: it is based on UtcNow and has a CK.Core.DateTimeStamp.Uniquifier that will not be changed when emitting the next log. Declaration public static DateTimeStamp NextLogTime(this IActivityMonitor this) Parameters Type Name Description IActivityMonitor this This IActivityMonitor . Returns Type Description CK.Core.DateTimeStamp The next log time for the monitor. | Improve this Doc View Source OnError(IActivityMonitor, Action) Enables simple \"using\" syntax to easily detect Fatal or Error . Declaration public static IDisposable OnError(this IActivityMonitor this, Action onFatalOrError) Parameters Type Name Description IActivityMonitor this This IActivityMonitor . Action onFatalOrError An action that is called whenever an Error or Fatal error occurs. Returns Type Description IDisposable A IDisposable object used to manage the scope of this handler. | Improve this Doc View Source OnError(IActivityMonitor, Action, Action) Enables simple \"using\" syntax to easily detect Fatal or Error . Declaration public static IDisposable OnError(this IActivityMonitor this, Action onFatal, Action onError) Parameters Type Name Description IActivityMonitor this This IActivityMonitor . Action onFatal An action that is called whenever a Fatal error occurs. Action onError An action that is called whenever an Error occurs. Returns Type Description IDisposable A IDisposable object used to manage the scope of this handler. | Improve this Doc View Source RegisterClient(IActivityMonitorOutput, IActivityMonitorClient) Registers an IActivityMonitorClient to the Clients list. Duplicates IActivityMonitorClient are silently ignored. Declaration public static IActivityMonitorClient RegisterClient(this IActivityMonitorOutput this, IActivityMonitorClient client) Parameters Type Name Description IActivityMonitorOutput this This IActivityMonitorOutput object. IActivityMonitorClient client An IActivityMonitorClient implementation. Returns Type Description IActivityMonitorClient The registered client. | Improve this Doc View Source RegisterClient<T>(IActivityMonitorOutput, T) Registers a typed IActivityMonitorClient . Duplicate IActivityMonitorClient instances are ignored. Declaration public static T RegisterClient<T>(this IActivityMonitorOutput this, T client)where T : IActivityMonitorClient Parameters Type Name Description IActivityMonitorOutput this This IActivityMonitorOutput object. T client Client to register. Returns Type Description T The registered client. Type Parameters Name Description T Any type that specializes IActivityMonitorClient . | Improve this Doc View Source RegisterClients(IActivityMonitorOutput, IActivityMonitorClient[]) Registers multiple IActivityMonitorClient . Duplicate IActivityMonitorClient instances are ignored. Declaration public static IActivityMonitorOutput RegisterClients(this IActivityMonitorOutput this, params IActivityMonitorClient[] clients) Parameters Type Name Description IActivityMonitorOutput this This IActivityMonitorOutput object. IActivityMonitorClient [] clients Multiple clients to register. Returns Type Description IActivityMonitorOutput This registrar to enable fluent syntax. | Improve this Doc View Source RegisterClients(IActivityMonitorOutput, IEnumerable<IActivityMonitorClient>) Registers multiple IActivityMonitorClient . Duplicate IActivityMonitorClient instances are ignored. Declaration public static IActivityMonitorOutput RegisterClients(this IActivityMonitorOutput this, IEnumerable<IActivityMonitorClient> clients) Parameters Type Name Description IActivityMonitorOutput this This IActivityMonitorOutput object. IEnumerable < IActivityMonitorClient > clients Multiple clients to register. Returns Type Description IActivityMonitorOutput This registrar to enable fluent syntax. | Improve this Doc View Source RegisterUniqueClient<T>(IActivityMonitorOutput) Registers a unique client for a type that must have a public default constructor. CreateInstance<T>() is called if necessary. Declaration public static T RegisterUniqueClient<T>(this IActivityMonitorOutput this)where T : IActivityMonitorClient, new () Parameters Type Name Description IActivityMonitorOutput this Returns Type Description T The found or newly created client. Type Parameters Name Description T | Improve this Doc View Source ShouldLogGroup(IActivityMonitor, LogLevel, String, Int32) Challenges source filters based on FileName/LineNumber, ActualFilter and application domain's DefaultFilter filters to test whether a log group should actually be emitted. Declaration public static bool ShouldLogGroup(this IActivityMonitor this, LogLevel level, string fileName = null, int lineNumber = 0) Parameters Type Name Description IActivityMonitor this This IActivityMonitor . LogLevel level Log level. String fileName Source file name of the emitter (automatically injected by C# compiler but can be explicitly set). Int32 lineNumber Line number in the source file (automatically injected by C# compiler but can be explicitly set). Returns Type Description Boolean True if the log should be emitted. | Improve this Doc View Source ShouldLogLine(IActivityMonitor, LogLevel, String, Int32) Challenges source filters based on FileName/LineNumber, ActualFilter and application domain's DefaultFilter filters to test whether a log line should actually be emitted. Declaration public static bool ShouldLogLine(this IActivityMonitor this, LogLevel level, string fileName = null, int lineNumber = 0) Parameters Type Name Description IActivityMonitor this This IActivityMonitor . LogLevel level Log level. String fileName Source file name of the emitter (automatically injected by C# compiler but can be explicitly set). Int32 lineNumber Line number in the source file (automatically injected by C# compiler but can be explicitly set). Returns Type Description Boolean True if the log should be emitted. | Improve this Doc View Source StartDependentActivity(IActivityMonitor, ActivityMonitor.DependentToken, String, Int32) Starts a dependent activity. This sets the Topic if it is not null and opens a group tagged with StartDependentActivity with a message that can be parsed back thanks to TryParseStartMessage(String, out Guid, out DateTimeStamp) . Declaration public static IDisposable StartDependentActivity(this IActivityMonitor this, ActivityMonitor.DependentToken token, string fileName = null, int lineNumber = 0) Parameters Type Name Description IActivityMonitor this This IActivityMonitor . ActivityMonitor.DependentToken token Token that describes the origin of the activity. String fileName Source file name of the emitter (automatically injected by C# compiler but can be explicitly set). Int32 lineNumber Line number in the source file (automatically injected by C# compiler but can be explicitly set). Returns Type Description IDisposable A disposable object. It must be disposed at the end of the activity. | Improve this Doc View Source TemporarilySetAutoTags(IActivityMonitor, CKTrait, SetOperation) Alter tags of this IActivityMonitor . Current AutoTags will be automatically restored when the returned IDisposable will be disposed. Even if, when a Group is closed, the IActivityMonitor.AutoTags is automatically restored to its original value (captured when the Group was opened), this may be useful to locally change the tags level without bothering to restore the initial value (this is close to what OpenGroup/CloseGroup do with both the MinimalFilter and the AutoTags). Declaration public static IDisposable TemporarilySetAutoTags(this IActivityMonitor this, CKTrait tags, SetOperation operation = SetOperation.Union) Parameters Type Name Description IActivityMonitor this This IActivityMonitor object. CK.Core.CKTrait tags Tags to combine with the current one. CK.Core.SetOperation operation Defines the way the new tags must be combined with current ones. Returns Type Description IDisposable A IDisposable object that will restore the current tag when disposed. | Improve this Doc View Source TemporarilySetMinimalFilter(IActivityMonitor, LogFilter) Sets a filter level on this IActivityMonitor . The current MinimalFilter will be automatically restored when the returned IDisposable will be disposed. Even if, when a Group is closed, the IActivityMonitor.Filter is automatically restored to its original value (captured when the Group was opened), this may be useful to locally change the filter level without bothering to restore the initial value (this is what OpenGroup/CloseGroup do with both the Filter and the AutoTags). Declaration public static IDisposable TemporarilySetMinimalFilter(this IActivityMonitor this, LogFilter f) Parameters Type Name Description IActivityMonitor this This IActivityMonitor object. LogFilter f The new filter. Returns Type Description IDisposable A IDisposable object that will restore the current level. | Improve this Doc View Source TemporarilySetMinimalFilter(IActivityMonitor, LogLevelFilter, LogLevelFilter) Sets filter levels on this IActivityMonitor . The current MinimalFilter will be automatically restored when the returned IDisposable will be disposed. Note that even if closing a Group automatically restores the IActivityMonitor.MinimalFilter to its original value (captured when the Group was opened), this may be useful to locally change the filter level without bothering to restore the initial value (this is what OpenGroup/CloseGroup do with both the Filter and the AutoTags). Declaration public static IDisposable TemporarilySetMinimalFilter(this IActivityMonitor this, LogLevelFilter group, LogLevelFilter line) Parameters Type Name Description IActivityMonitor this This IActivityMonitor object. LogLevelFilter group The new filter level for group. LogLevelFilter line The new filter level for log line. Returns Type Description IDisposable A IDisposable object that will restore the current level. | Improve this Doc View Source ToStringGroupConclusion(IEnumerable<ActivityLogGroupConclusion>, String) Gets this Group conclusions as a readable string. Declaration public static string ToStringGroupConclusion(this IEnumerable<ActivityLogGroupConclusion> this, string conclusionSeparator = \" - \") Parameters Type Name Description IEnumerable < ActivityLogGroupConclusion > this This group conclusion. Can be null. String conclusionSeparator Conclusion separator. Returns Type Description String A lovely concatenated string of conclusions. | Improve this Doc View Source ToStringPath(IEnumerable<ActivityMonitorPathCatcher.PathElement>, String, String, String, String, String, String, String, String, String, String) Gets the path as a readable string. Declaration public static string ToStringPath(this IEnumerable<ActivityMonitorPathCatcher.PathElement> this, string elementSeparator = \"> \", string withoutConclusionFormat = \"{0}{1} \", string withConclusionFormat = \"{0}{1} -{{ {2} }}\", string conclusionSeparator = \" - \", string fatal = \"[Fatal]- \", string error = \"[Error]- \", string warn = \"[Warning]- \", string info = \"[Info]- \", string trace = \"\", string debug = \"[Debug]- \") Parameters Type Name Description IEnumerable < ActivityMonitorPathCatcher.PathElement > this This path. Can be null. String elementSeparator Between elements. String withoutConclusionFormat There must be 3 placeholders {0} for the level, {1} for the text and {2} for the conclusion. String withConclusionFormat There must be 2 placeholders {0} for the level and {1} for the text. String conclusionSeparator Conclusion separator. String fatal For Fatal errors. String error For Errors. String warn For Warnings. String info For Infos. String trace For Traces. String debug For Debugs. Returns Type Description String A lovely path. | Improve this Doc View Source UnbridgeTo(IActivityMonitorOutput, ActivityMonitorBridgeTarget) Removes an existing ActivityMonitorBridge to another monitor if it exists (silently ignores it if not found). Declaration public static ActivityMonitorBridge UnbridgeTo(this IActivityMonitorOutput this, ActivityMonitorBridgeTarget targetBridge) Parameters Type Name Description IActivityMonitorOutput this This IActivityMonitorOutput . ActivityMonitorBridgeTarget targetBridge The target bridge that will no more receive our logs. Returns Type Description ActivityMonitorBridge The unregistered ActivityMonitorBridge if found, null otherwise. | Improve this Doc View Source UnfilteredLog(IActivityMonitor, CKTrait, LogLevel, String, DateTimeStamp, Exception, String, Int32) Logs a text regardless of ActualFilter level. Declaration public static void UnfilteredLog(this IActivityMonitor this, CKTrait tags, LogLevel level, string text, DateTimeStamp logTime, Exception ex, string fileName = null, int lineNumber = 0) Parameters Type Name Description IActivityMonitor this This IActivityMonitor . CK.Core.CKTrait tags Tags (from ActivityMonitor.Tags ) to associate to the log. These tags will be union-ed with the current AutoTags . LogLevel level Log level. Must not be None . String text Text to log. Must not be null or empty. CK.Core.DateTimeStamp logTime Time-stamp of the log entry. You can use CK.Core.DateTimeStamp.UtcNow or NextLogTime(IActivityMonitor) extension method. Exception ex Optional exception associated to the log. When not null, a Group is automatically created. String fileName The source code file name from which the log is emitted. Int32 lineNumber The line number in the source from which the log is emitted. Remarks The text can not be null or empty. Each call to log is considered as a unit of text: depending on the rendering engine, a line or a paragraph separator (or any appropriate separator) should be appended between each text if the level is the same as the previous one. If needed, the special text ParkLevel (\"PARK-LEVEL\") can be used as a convention to break the current LogLevel and resets it: the next log, even with the same LogLevel, should be treated as if a different LogLevel is used. | Improve this Doc View Source UnfilteredOpenGroup(IActivityMonitor, CKTrait, LogLevel, Func<String>, String, DateTimeStamp, Exception, String, Int32) Opens a group regardless of ActualFilter level. CloseGroup(IActivityMonitor, Object) must be called in order to close the group, and/or the returned object must be disposed (both safely can be called: the group is closed on the first action, the second one is ignored). Declaration public static IDisposable UnfilteredOpenGroup(this IActivityMonitor this, CKTrait tags, LogLevel level, Func<string> getConclusionText, string text, DateTimeStamp logTime, Exception ex, string fileName = null, int lineNumber = 0) Parameters Type Name Description IActivityMonitor this This IActivityMonitor . CK.Core.CKTrait tags Tags (from ActivityMonitor.Tags ) to associate to the log. It will be union-ed with current AutoTags . LogLevel level Log level. The None level is used to open a filtered group. See remarks. Func < String > getConclusionText Optional function that will be called on group closing. String text Text to log (the title of the group). Null text is valid and considered as Empty or assigned to the Message if it exists. CK.Core.DateTimeStamp logTime Time of the log entry. You can use CK.Core.DateTimeStamp.UtcNow or NextLogTime(IActivityMonitor) extension method. Exception ex Optional exception associated to the group. String fileName The source code file name from which the group is opened. Int32 lineNumber The line number in the source from which the group is opened. Returns Type Description IDisposable A disposable object that can be used to close the group. Remarks Opening a group does not change the current MinimalFilter , except when opening a Fatal or Error group: in such case, the Filter is automatically sets to Trace to capture all potential information inside the error group. Changes to the monitor's current Filter or AutoTags that occur inside a group are automatically restored to their original values when the group is closed. This behavior guaranties that a local modification (deep inside unknown called code) does not impact caller code: groups are a way to easily isolate such configuration changes. Note that this automatic configuration restoration works even if the group is filtered (when the level is None). | Improve this Doc View Source UnregisterClient<T>(IActivityMonitorOutput, Func<T, Boolean>) Unregisters the first IActivityMonitorClient from the Clients list that satisfies the predicate. Declaration public static T UnregisterClient<T>(this IActivityMonitorOutput this, Func<T, bool> predicate)where T : IActivityMonitorClient Parameters Type Name Description IActivityMonitorOutput this This IActivityMonitorOutput . Func <T, Boolean > predicate A predicate that will be used to determine the first client to unregister. Returns Type Description T The unregistered client, or null if no client has been found. Type Parameters Name Description T"
  },
  "api/CK.Core.ActivityMonitorSenderExtension.html": {
    "href": "api/CK.Core.ActivityMonitorSenderExtension.html",
    "title": "Class ActivityMonitorSenderExtension | CK-Text",
    "keywords": "Class ActivityMonitorSenderExtension Provides OpenXXX and XXX (Trace, Info,...Fatal) extension methods for IActivityMonitor . Inheritance Object ActivityMonitorSenderExtension Inherited Members Object.ToString() Object.Equals(Object) Object.Equals(Object, Object) Object.ReferenceEquals(Object, Object) Object.GetHashCode() Object.GetType() Object.MemberwiseClone() Namespace : CK.Core Assembly : CK.ActivityMonitor.StandardSender.dll Syntax public static class ActivityMonitorSenderExtension Methods | Improve this Doc View Source Debug(IActivityMonitor, Int32, String) Filters Debug logs. FileName end LineNumber may be also used to determine whether the log should eventually be emitted. Declaration public static IActivityMonitorLineSender Debug(this IActivityMonitor this, int lineNumber = 0, string fileName = null) Parameters Type Name Description IActivityMonitor this This IActivityMonitor . Int32 lineNumber Line number in the source file (automatically injected by C# compiler). String fileName Source file name of the emitter (automatically injected by C# compiler). Returns Type Description IActivityMonitorLineSender A CK.Core.ActivityMonitorLineSender or null if the log must not be emitted. | Improve this Doc View Source Error(IActivityMonitor, Int32, String) Filters Error logs. FileName end LineNumber may be also used to determine whether the log should eventually be emitted. Declaration public static IActivityMonitorLineSender Error(this IActivityMonitor this, int lineNumber = 0, string fileName = null) Parameters Type Name Description IActivityMonitor this This IActivityMonitor . Int32 lineNumber Line number in the source file (automatically injected by C# compiler). String fileName Source file name of the emitter (automatically injected by C# compiler). Returns Type Description IActivityMonitorLineSender A CK.Core.ActivityMonitorLineSender or null if the log must not be emitted. | Improve this Doc View Source Fatal(IActivityMonitor, Int32, String) Filters Fatal logs. FileName end LineNumber may be also used to determine whether the log should eventually be emitted. Declaration public static IActivityMonitorLineSender Fatal(this IActivityMonitor this, int lineNumber = 0, string fileName = null) Parameters Type Name Description IActivityMonitor this This IActivityMonitor . Int32 lineNumber Line number in the source file (automatically injected by C# compiler). String fileName Source file name of the emitter (automatically injected by C# compiler). Returns Type Description IActivityMonitorLineSender A CK.Core.ActivityMonitorLineSender or null if the log must not be emitted. | Improve this Doc View Source Info(IActivityMonitor, Int32, String) Filters Info logs. FileName end LineNumber may be also used to determine whether the log should eventually be emitted. Declaration public static IActivityMonitorLineSender Info(this IActivityMonitor this, int lineNumber = 0, string fileName = null) Parameters Type Name Description IActivityMonitor this This IActivityMonitor . Int32 lineNumber Line number in the source file (automatically injected by C# compiler). String fileName Source file name of the emitter (automatically injected by C# compiler). Returns Type Description IActivityMonitorLineSender A CK.Core.ActivityMonitorLineSender or null if the log must not be emitted. | Improve this Doc View Source OpenDebug(IActivityMonitor, Int32, String) Filtered Debug group opening. FileName end LineNumber may be also used to determine whether the log should eventually be emitted. Declaration public static IActivityMonitorGroupSender OpenDebug(this IActivityMonitor this, int lineNumber = 0, string fileName = null) Parameters Type Name Description IActivityMonitor this This IActivityMonitor . Int32 lineNumber Line number in the source file (automatically injected by C# compiler). String fileName Source file name of the emitter (automatically injected by C# compiler). Returns Type Description IActivityMonitorGroupSender A CK.Core.ActivityMonitorGroupSender or null if the group must not be emitted. | Improve this Doc View Source OpenError(IActivityMonitor, Int32, String) Filtered Error group opening. FileName end LineNumber may be also used to determine whether the log should eventually be emitted. Declaration public static IActivityMonitorGroupSender OpenError(this IActivityMonitor this, int lineNumber = 0, string fileName = null) Parameters Type Name Description IActivityMonitor this This IActivityMonitor . Int32 lineNumber Line number in the source file (automatically injected by C# compiler). String fileName Source file name of the emitter (automatically injected by C# compiler). Returns Type Description IActivityMonitorGroupSender A CK.Core.ActivityMonitorGroupSender or null if the group must not be emitted. | Improve this Doc View Source OpenFatal(IActivityMonitor, Int32, String) Filtered Fatal group opening. FileName end LineNumber may be also used to determine whether the log should eventually be emitted. Declaration public static IActivityMonitorGroupSender OpenFatal(this IActivityMonitor this, int lineNumber = 0, string fileName = null) Parameters Type Name Description IActivityMonitor this This IActivityMonitor . Int32 lineNumber Line number in the source file (automatically injected by C# compiler). String fileName Source file name of the emitter (automatically injected by C# compiler). Returns Type Description IActivityMonitorGroupSender A CK.Core.ActivityMonitorGroupSender or null if the group must not be emitted. | Improve this Doc View Source OpenInfo(IActivityMonitor, Int32, String) Filtered Info group opening. FileName end LineNumber may be also used to determine whether the log should eventually be emitted. Declaration public static IActivityMonitorGroupSender OpenInfo(this IActivityMonitor this, int lineNumber = 0, string fileName = null) Parameters Type Name Description IActivityMonitor this This IActivityMonitor . Int32 lineNumber Line number in the source file (automatically injected by C# compiler). String fileName Source file name of the emitter (automatically injected by C# compiler). Returns Type Description IActivityMonitorGroupSender A CK.Core.ActivityMonitorGroupSender or null if the group must not be emitted. | Improve this Doc View Source OpenTrace(IActivityMonitor, Int32, String) Filtered Trace group opening. FileName end LineNumber may be also used to determine whether the log should eventually be emitted. Declaration public static IActivityMonitorGroupSender OpenTrace(this IActivityMonitor this, int lineNumber = 0, string fileName = null) Parameters Type Name Description IActivityMonitor this This IActivityMonitor . Int32 lineNumber Line number in the source file (automatically injected by C# compiler). String fileName Source file name of the emitter (automatically injected by C# compiler). Returns Type Description IActivityMonitorGroupSender A CK.Core.ActivityMonitorGroupSender or null if the group must not be emitted. | Improve this Doc View Source OpenWarn(IActivityMonitor, Int32, String) Filtered Warn group opening. FileName end LineNumber may be also used to determine whether the log should eventually be emitted. Declaration public static IActivityMonitorGroupSender OpenWarn(this IActivityMonitor this, int lineNumber = 0, string fileName = null) Parameters Type Name Description IActivityMonitor this This IActivityMonitor . Int32 lineNumber Line number in the source file (automatically injected by C# compiler). String fileName Source file name of the emitter (automatically injected by C# compiler). Returns Type Description IActivityMonitorGroupSender A CK.Core.ActivityMonitorGroupSender or null if the group must not be emitted. | Improve this Doc View Source Trace(IActivityMonitor, Int32, String) Filters Trace logs. FileName end LineNumber may be also used to determine whether the log should eventually be emitted. Declaration public static IActivityMonitorLineSender Trace(this IActivityMonitor this, int lineNumber = 0, string fileName = null) Parameters Type Name Description IActivityMonitor this This IActivityMonitor . Int32 lineNumber Line number in the source file (automatically injected by C# compiler). String fileName Source file name of the emitter (automatically injected by C# compiler). Returns Type Description IActivityMonitorLineSender A CK.Core.ActivityMonitorLineSender or null if the log must not be emitted. | Improve this Doc View Source Warn(IActivityMonitor, Int32, String) Filters Warn logs. FileName end LineNumber may be also used to determine whether the log should eventually be emitted. Declaration public static IActivityMonitorLineSender Warn(this IActivityMonitor this, int lineNumber = 0, string fileName = null) Parameters Type Name Description IActivityMonitor this This IActivityMonitor . Int32 lineNumber Line number in the source file (automatically injected by C# compiler). String fileName Source file name of the emitter (automatically injected by C# compiler). Returns Type Description IActivityMonitorLineSender A CK.Core.ActivityMonitorLineSender or null if the log must not be emitted."
  },
  "api/CK.Core.IActivityLogGroup.html": {
    "href": "api/CK.Core.IActivityLogGroup.html",
    "title": "Interface IActivityLogGroup | CK-Text",
    "keywords": "Interface IActivityLogGroup Exposes all the relevant information for a currently opened group. Groups are linked together from the current one to the very first one thanks to the Parent property. Namespace : CK.Core Assembly : CK.ActivityMonitor.dll Syntax public interface IActivityLogGroup Properties | Improve this Doc View Source CloseLogTime Gets the log time of the group closing. It is CK.Core.DateTimeStamp.MinValue when the group is not closed yet. Declaration DateTimeStamp CloseLogTime { get; } Property Value Type Description CK.Core.DateTimeStamp | Improve this Doc View Source Depth Gets the depth of this group in its origin monitor. (1 for top level groups). Declaration int Depth { get; } Property Value Type Description Int32 | Improve this Doc View Source Exception Gets the associated Exception if it exists. Declaration Exception Exception { get; } Property Value Type Description Exception | Improve this Doc View Source ExceptionData Gets the CK.Core.CKExceptionData that captures exception information if it exists. Returns null if no Exception exists. Declaration CKExceptionData ExceptionData { get; } Property Value Type Description CK.Core.CKExceptionData | Improve this Doc View Source FileName Gets the file name of the source code that issued the log. Declaration string FileName { get; } Property Value Type Description String | Improve this Doc View Source GroupLevel Gets the level associated to this group. The IsFiltered can be set here: use MaskedGroupLevel to get the actual level from Trace to Fatal . Declaration LogLevel GroupLevel { get; } Property Value Type Description LogLevel | Improve this Doc View Source GroupTags Gets the tags for the log group. Declaration CKTrait GroupTags { get; } Property Value Type Description CK.Core.CKTrait | Improve this Doc View Source GroupText Gets the text associated to this group. Declaration string GroupText { get; } Property Value Type Description String | Improve this Doc View Source IsGroupTextTheExceptionMessage Gets whether the GroupText is actually the Exception message. Declaration bool IsGroupTextTheExceptionMessage { get; } Property Value Type Description Boolean | Improve this Doc View Source LineNumber Gets the line number of the FileName that issued the log. Declaration int LineNumber { get; } Property Value Type Description Int32 | Improve this Doc View Source LogTime Gets the log time for the log. Declaration DateTimeStamp LogTime { get; } Property Value Type Description CK.Core.DateTimeStamp | Improve this Doc View Source MaskedGroupLevel Gets the actual level ( Trace to Fatal ) associated to this group without IsFiltered bit. Declaration LogLevel MaskedGroupLevel { get; } Property Value Type Description LogLevel | Improve this Doc View Source Parent Get the previous group in its origin monitor. Null if this group is a top level group. Declaration IActivityLogGroup Parent { get; } Property Value Type Description IActivityLogGroup | Improve this Doc View Source SavedMonitorFilter Gets the MinimalFilter that will be restored when group will be closed. Initialized with the current value of IActivityMonitor.Filter when the group has been opened. Declaration LogFilter SavedMonitorFilter { get; } Property Value Type Description LogFilter | Improve this Doc View Source SavedMonitorTags Gets the AutoTags that will be restored when group will be closed. Initialized with the current value of IActivityMonitor.Tags when the group has been opened. Declaration CKTrait SavedMonitorTags { get; } Property Value Type Description CK.Core.CKTrait Methods | Improve this Doc View Source EnsureExceptionData() Gets or creates the CK.Core.CKExceptionData that captures exception information. If Exception is null, this method returns null. Declaration CKExceptionData EnsureExceptionData() Returns Type Description CK.Core.CKExceptionData"
  },
  "api/CK.Core.ActivityMonitor.Tags.html": {
    "href": "api/CK.Core.ActivityMonitor.Tags.html",
    "title": "Class ActivityMonitor.Tags | CK-Text",
    "keywords": "Class ActivityMonitor.Tags Thread-safe context for tags used to categorize log entries (and group conclusions). All tags used in monitoring must be Register(String) ed here. Inheritance Object ActivityMonitor.Tags Inherited Members Object.ToString() Object.Equals(Object) Object.Equals(Object, Object) Object.ReferenceEquals(Object, Object) Object.GetHashCode() Object.GetType() Object.MemberwiseClone() Namespace : CK.Core Assembly : CK.ActivityMonitor.dll Syntax public static class Tags Remarks Tags used for conclusions should start with \"c:\". Fields | Improve this Doc View Source Context The central, unique, context of all monitoring related tags used in the application domain. Declaration public static readonly CKTraitContext Context Field Value Type Description CK.Core.CKTraitContext | Improve this Doc View Source CreateDependentActivity Creation of dependent activities are marked with \"dep:CreateActivity\". Declaration public static readonly CKTrait CreateDependentActivity Field Value Type Description CK.Core.CKTrait | Improve this Doc View Source Empty Shortcut to CK.Core.CKTraitContext.EmptyTrait . Declaration public static readonly CKTrait Empty Field Value Type Description CK.Core.CKTrait | Improve this Doc View Source GetTextConclusion Conclusions returned by the optional function when a group is opened (see UnfilteredOpenGroup(ActivityMonitorGroupData) ) are marked with \"c:GetText\". Declaration public static readonly CKTrait GetTextConclusion Field Value Type Description CK.Core.CKTrait | Improve this Doc View Source MonitorEnd A \"MonitorEnd\" tag is emitted by MonitorEnd(IActivityMonitor, String, String, Int32) . This indicates the logical end of life of the monitor. It should not be used anymore (but technically can be used). Declaration public static readonly CKTrait MonitorEnd Field Value Type Description CK.Core.CKTrait | Improve this Doc View Source MonitorTopicChanged Whenever Topic changed, a Info is emitted marked with \"MonitorTopicChanged\". Declaration public static readonly CKTrait MonitorTopicChanged Field Value Type Description CK.Core.CKTrait | Improve this Doc View Source StartDependentActivity Start of dependent activities are marked with \"dep:StartActivity\". Declaration public static readonly CKTrait StartDependentActivity Field Value Type Description CK.Core.CKTrait | Improve this Doc View Source UserConclusion Conclusions provided to IActivityMonitor.Close(string) are marked with \"c:User\". Declaration public static readonly CKTrait UserConclusion Field Value Type Description CK.Core.CKTrait Methods | Improve this Doc View Source Register(String) Simple shortcut to CK.Core.CKTraitContext.FindOrCreate(System.String) . Declaration public static CKTrait Register(string tags) Parameters Type Name Description String tags Atomic tag or multiple tags separated by pipes (|). Returns Type Description CK.Core.CKTrait Registered tags."
  },
  "api/CK.Core.ActivityMonitorTextWriterClient.html": {
    "href": "api/CK.Core.ActivityMonitorTextWriterClient.html",
    "title": "Class ActivityMonitorTextWriterClient | CK-Text",
    "keywords": "Class ActivityMonitorTextWriterClient Formats the activity and pushes piece of texts to an Action<T> where T is a string. Inheritance Object ActivityMonitorTextHelperClient ActivityMonitorTextWriterClient ActivityMonitorConsoleClient Inherited Members ActivityMonitorTextHelperClient.IActivityMonitorClient.OnUnfilteredLog(ActivityMonitorLogData) ActivityMonitorTextHelperClient.IActivityMonitorClient.OnOpenGroup(IActivityLogGroup) ActivityMonitorTextHelperClient.IActivityMonitorClient.OnGroupClosing(IActivityLogGroup, List<ActivityLogGroupConclusion>) ActivityMonitorTextHelperClient.IActivityMonitorClient.OnGroupClosed(IActivityLogGroup, IReadOnlyList<ActivityLogGroupConclusion>) ActivityMonitorTextHelperClient.IActivityMonitorClient.OnTopicChanged(String, String, Int32) ActivityMonitorTextHelperClient.IActivityMonitorClient.OnAutoTagsChanged(CKTrait) ActivityMonitorTextHelperClient.Filter ActivityMonitorTextHelperClient.IActivityMonitorBoundClient.MinimalFilter ActivityMonitorTextHelperClient.IActivityMonitorBoundClient.SetMonitor(IActivityMonitorImpl, Boolean) ActivityMonitorTextHelperClient.IActivityMonitorBoundClient.IsDead Object.ToString() Object.Equals(Object) Object.Equals(Object, Object) Object.ReferenceEquals(Object, Object) Object.GetHashCode() Object.GetType() Object.MemberwiseClone() Namespace : CK.Core Assembly : CK.ActivityMonitor.dll Syntax public class ActivityMonitorTextWriterClient : ActivityMonitorTextHelperClient, IActivityMonitorBoundClient, IActivityMonitorClient Constructors | Improve this Doc View Source ActivityMonitorTextWriterClient(Action<String>) Initializes a new ActivityMonitorTextWriterClient bound to a function that must write a string. Declaration public ActivityMonitorTextWriterClient(Action<string> writer) Parameters Type Name Description Action < String > writer Function that writes the content. | Improve this Doc View Source ActivityMonitorTextWriterClient(Action<String>, LogFilter) Initializes a new ActivityMonitorTextWriterClient bound to a function that must write a string, with a filter. Declaration public ActivityMonitorTextWriterClient(Action<string> writer, LogFilter filter) Parameters Type Name Description Action < String > writer Function that writes the content. LogFilter filter Filter to apply Methods | Improve this Doc View Source DumpException(StringBuilder, String, Boolean, Exception) Recursively dumps an Exception as readable text. Declaration public static void DumpException(StringBuilder w, string prefix, bool displayMessage, Exception ex) Parameters Type Name Description StringBuilder w The TextWriter to write to. String prefix Prefix that will start all lines. Boolean displayMessage Whether the exception message must be displayed or skip. Exception ex The exception to display. | Improve this Doc View Source OnContinueOnSameLevel(ActivityMonitorLogData) Writes all information. Declaration protected override void OnContinueOnSameLevel(ActivityMonitorLogData data) Parameters Type Name Description ActivityMonitorLogData data Log data. Overrides ActivityMonitorTextHelperClient.OnContinueOnSameLevel(ActivityMonitorLogData) | Improve this Doc View Source OnEnterLevel(ActivityMonitorLogData) Writes all the information. Declaration protected override void OnEnterLevel(ActivityMonitorLogData data) Parameters Type Name Description ActivityMonitorLogData data Log data. Overrides ActivityMonitorTextHelperClient.OnEnterLevel(ActivityMonitorLogData) | Improve this Doc View Source OnGroupClose(IActivityLogGroup, IReadOnlyList<ActivityLogGroupConclusion>) Writes group conclusion and updates internally managed line prefix. Declaration protected override void OnGroupClose(IActivityLogGroup g, IReadOnlyList<ActivityLogGroupConclusion> conclusions) Parameters Type Name Description IActivityLogGroup g Group that must be closed. IReadOnlyList < ActivityLogGroupConclusion > conclusions Conclusions for the group. Overrides ActivityMonitorTextHelperClient.OnGroupClose(IActivityLogGroup, IReadOnlyList<ActivityLogGroupConclusion>) | Improve this Doc View Source OnGroupOpen(IActivityLogGroup) Writes a group opening. Declaration protected override void OnGroupOpen(IActivityLogGroup g) Parameters Type Name Description IActivityLogGroup g Group information. Overrides ActivityMonitorTextHelperClient.OnGroupOpen(IActivityLogGroup) | Improve this Doc View Source OnLeaveLevel(LogLevel) Updates the internally maintained prefix for lines. Declaration protected override void OnLeaveLevel(LogLevel level) Parameters Type Name Description LogLevel level Previous level. Overrides ActivityMonitorTextHelperClient.OnLeaveLevel(LogLevel)"
  },
  "api/CK.Core.IActivityMonitorOutput.html": {
    "href": "api/CK.Core.IActivityMonitorOutput.html",
    "title": "Interface IActivityMonitorOutput | CK-Text",
    "keywords": "Interface IActivityMonitorOutput Offers IActivityMonitorClient registration/unregistration and exposes a BridgeTarget (an ActivityMonitorBridgeTarget ) that can be used to accept logs from other monitors. Namespace : CK.Core Assembly : CK.ActivityMonitor.dll Syntax public interface IActivityMonitorOutput Properties | Improve this Doc View Source BridgeTarget Gets an entry point for other monitors: by registering ActivityMonitorBridge in other Output bound to this ActivityMonitorBridgeTarget , log streams can easily be merged. Declaration ActivityMonitorBridgeTarget BridgeTarget { get; } Property Value Type Description ActivityMonitorBridgeTarget | Improve this Doc View Source Clients Gets the list of registered IActivityMonitorClient . Declaration IReadOnlyList<IActivityMonitorClient> Clients { get; } Property Value Type Description IReadOnlyList < IActivityMonitorClient > Methods | Improve this Doc View Source RegisterClient(IActivityMonitorClient, out Boolean) Registers an IActivityMonitorClient to the Clients list. Duplicate IActivityMonitorClient instances are ignored. Declaration IActivityMonitorClient RegisterClient(IActivityMonitorClient client, out bool added) Parameters Type Name Description IActivityMonitorClient client An IActivityMonitorClient implementation. Boolean added True if the client has been added, false if it was already registered. Returns Type Description IActivityMonitorClient The registered client. | Improve this Doc View Source RegisterClient<T>(T, out Boolean) Registers a typed IActivityMonitorClient . Duplicate IActivityMonitorClient instances are ignored. Declaration T RegisterClient<T>(T client, out bool added)where T : IActivityMonitorClient Parameters Type Name Description T client Client to register. Boolean added True if the client has been added, false if it was already registered. Returns Type Description T The registered client. Type Parameters Name Description T Any type that specializes IActivityMonitorClient . | Improve this Doc View Source RegisterUniqueClient<T>(Func<T, Boolean>, Func<T>) Registers a IActivityMonitorClient that must be unique in a sense. Declaration T RegisterUniqueClient<T>(Func<T, bool> tester, Func<T> factory)where T : IActivityMonitorClient Parameters Type Name Description Func <T, Boolean > tester Predicate that must be satisfied for at least one registered client. Func <T> factory Factory that will be called if no existing client satisfies tester . Returns Type Description T The found or newly created client. Type Parameters Name Description T Remarks The factory function MUST return a client that satisfies the tester function otherwise a InvalidOperationException is thrown. The factory is called only when the no client satisfies the tester function: this makes the 'added' out parameter useless. | Improve this Doc View Source UnregisterClient(IActivityMonitorClient) Unregisters the given IActivityMonitorClient from the Clients list. Silently ignores an unregistered client. Declaration IActivityMonitorClient UnregisterClient(IActivityMonitorClient client) Parameters Type Name Description IActivityMonitorClient client An IActivityMonitorClient implementation. Returns Type Description IActivityMonitorClient The unregistered client or null if it has not been found. Extension Methods ActivityMonitorExtension.FindBridgeTo(IActivityMonitorOutput, ActivityMonitorBridgeTarget) ActivityMonitorExtension.CreateBridgeTo(IActivityMonitorOutput, ActivityMonitorBridgeTarget) ActivityMonitorExtension.CreateStrongBridgeTo(IActivityMonitorOutput, ActivityMonitorBridgeTarget) ActivityMonitorExtension.UnbridgeTo(IActivityMonitorOutput, ActivityMonitorBridgeTarget) ActivityMonitorExtension.RegisterClient(IActivityMonitorOutput, IActivityMonitorClient) ActivityMonitorExtension.RegisterClient<T>(IActivityMonitorOutput, T) ActivityMonitorExtension.RegisterClients(IActivityMonitorOutput, IEnumerable<IActivityMonitorClient>) ActivityMonitorExtension.RegisterClients(IActivityMonitorOutput, IActivityMonitorClient[]) ActivityMonitorExtension.RegisterUniqueClient<T>(IActivityMonitorOutput) ActivityMonitorExtension.UnregisterClient<T>(IActivityMonitorOutput, Func<T, Boolean>)"
  },
  "api/CK.Core.LogFilter.html": {
    "href": "api/CK.Core.LogFilter.html",
    "title": "Struct LogFilter | CK-Text",
    "keywords": "Struct LogFilter Immutable capture of a double LogLevelFilter . One for Line and one for Group . This value type exposes predefined configured couples: Debug , Trace (full trace), Verbose , Monitor , Terse , Release and Off (no log at all). Inherited Members Object.Equals(Object, Object) Object.ReferenceEquals(Object, Object) Object.GetType() Namespace : CK.Core Assembly : CK.ActivityMonitor.dll Syntax [Serializable] public struct LogFilter Constructors | Improve this Doc View Source LogFilter(LogLevelFilter, LogLevelFilter) Initializes a new LogFilter with a level for Group s and Line logs. Declaration public LogFilter(LogLevelFilter group, LogLevelFilter line) Parameters Type Name Description LogLevelFilter group Filter for groups. LogLevelFilter line Filter for lines. Fields | Improve this Doc View Source Debug Debug filter enables full Trace for both Line and Group . Declaration public static readonly LogFilter Debug Field Value Type Description LogFilter | Improve this Doc View Source Group The filter that applies to groups. Declaration public readonly LogLevelFilter Group Field Value Type Description LogLevelFilter | Improve this Doc View Source Invalid Invalid must be used as a special value. It is Invalid for both Line and Group . Declaration public static readonly LogFilter Invalid Field Value Type Description LogFilter | Improve this Doc View Source Line The filter that applies to log lines (Debug, Trace, Info, Warn, Error and Fatal). Declaration public readonly LogLevelFilter Line Field Value Type Description LogLevelFilter | Improve this Doc View Source Monitor While monitoring, only errors and warnings are captured (Warn), whereas all Group s appear (Trace) to get the detailed structure of the activity. Declaration public static readonly LogFilter Monitor Field Value Type Description LogFilter | Improve this Doc View Source Off Off filter does not capture anything. Declaration public static readonly LogFilter Off Field Value Type Description LogFilter | Improve this Doc View Source Release Release filter captures only Error s for both Line and Group . Declaration public static readonly LogFilter Release Field Value Type Description LogFilter | Improve this Doc View Source Terse Terse filter captures only errors for Line and limits Group s to Info level. Declaration public static readonly LogFilter Terse Field Value Type Description LogFilter | Improve this Doc View Source Trace Trace filter enables full Trace for both Line and Group . Declaration public static readonly LogFilter Trace Field Value Type Description LogFilter | Improve this Doc View Source Undefined Undefined filter is None for both Line and Group . This is the same as using the default constructor for this structure (it is exposed here for clarity). Declaration public static readonly LogFilter Undefined Field Value Type Description LogFilter | Improve this Doc View Source Verbose Verbose Trace all Group s but limits Line to Info level. Declaration public static readonly LogFilter Verbose Field Value Type Description LogFilter Methods | Improve this Doc View Source Combine(LogFilter) Combines this filter with another one. Line and Group level filters are combined with Combine(LogLevelFilter, LogLevelFilter) . Declaration public LogFilter Combine(LogFilter other) Parameters Type Name Description LogFilter other The other filter to combine with this one. Returns Type Description LogFilter The resulting filter. | Improve this Doc View Source Combine(LogLevelFilter, LogLevelFilter) Combines two enums LogLevelFilter into one. The resulting filter is the more verbose one (the smallest level). Invalid is considered as None (it has no impact). This operation is commutative and associative: different order of combination always give the same result. Declaration public static LogLevelFilter Combine(LogLevelFilter x, LogLevelFilter y) Parameters Type Name Description LogLevelFilter x First filter level. LogLevelFilter y Second filter level. Returns Type Description LogLevelFilter The resulting level. | Improve this Doc View Source CombineNoneOnly(LogFilter) Combines this filter with another one only if Line or Group is None . Declaration public LogFilter CombineNoneOnly(LogFilter other) Parameters Type Name Description LogFilter other The other filter to combine with this one. Returns Type Description LogFilter The resulting filter. | Improve this Doc View Source Equals(Object) Overridden to compare Line and Group . Declaration public override bool Equals(object obj) Parameters Type Name Description Object obj Other object. Returns Type Description Boolean True if Line and Group are equal. Overrides ValueType.Equals(Object) | Improve this Doc View Source GetHashCode() Overridden to compute hash based on Line and Group values. Declaration public override int GetHashCode() Returns Type Description Int32 The hash code. Overrides ValueType.GetHashCode() | Improve this Doc View Source HasImpactOn(LogFilter) Tests if Combine(LogFilter) this and x will result in a different filter than x. Declaration public bool HasImpactOn(LogFilter x) Parameters Type Name Description LogFilter x The other filter. Returns Type Description Boolean True if combining this filter and x will change x. | Improve this Doc View Source Parse(String) Parses the filter: it can be a predefined filter as (\"Undefined\", \"Debug\", \"Trace\", \"Verbose\", etc.) or as {GroupLogLevelFilter,LineLogLevelFilter} pairs like \"{None,None}\", \"{Error,Debug}\". Declaration public static LogFilter Parse(string filter) Parameters Type Name Description String filter Predefined filter as (Undefined, Debug, Verbose, etc.) or as {LineLogLevelFilter,GroupLogLevelFilter} like {None,None}, {Error,Trace}. Returns Type Description LogFilter The filter. | Improve this Doc View Source SetGroup(LogLevelFilter) Returns a LogFilter with a given LogLevelFilter for the Group . Declaration public LogFilter SetGroup(LogLevelFilter group) Parameters Type Name Description LogLevelFilter group Filter for the group. Returns Type Description LogFilter The filter with the group level. | Improve this Doc View Source SetLine(LogLevelFilter) Returns a LogFilter with a given LogLevelFilter for the Line . Declaration public LogFilter SetLine(LogLevelFilter line) Parameters Type Name Description LogLevelFilter line Filter for the line. Returns Type Description LogFilter The filter with the line level. | Improve this Doc View Source ToString() Overridden to show the group and the line level. Declaration public override string ToString() Returns Type Description String A {group,line} string. Overrides ValueType.ToString() | Improve this Doc View Source TryParse(String, out LogFilter) Tries to parse a LogFilter : it can be a predefined filter as (\"Undefined\", \"Debug\", \"Verbose\", etc.) or as {GroupLogLevelFilter,LineLogLevelFilter} pairs like \"{None,None}\", \"{Error,Trace}\". Declaration public static bool TryParse(string s, out LogFilter f) Parameters Type Name Description String s Filter to parse. LogFilter f Resulting filter. Returns Type Description Boolean True on success, false on error. Operators | Improve this Doc View Source Equality(LogFilter, LogFilter) Equality operator. Declaration public static bool operator ==(LogFilter x, LogFilter y) Parameters Type Name Description LogFilter x First filter. LogFilter y Second filter. Returns Type Description Boolean True if Line and Group are the same for the two filters. | Improve this Doc View Source Inequality(LogFilter, LogFilter) Inequality operator. Declaration public static bool operator !=(LogFilter x, LogFilter y) Parameters Type Name Description LogFilter x First filter. LogFilter y Second filter. Returns Type Description Boolean True if Line and Group are the same for the two filters."
  },
  "api/index.html": {
    "href": "api/index.html",
    "title": "Project API documentation | CK-Text",
    "keywords": "Project API documentation Browse the project namespaces and APIs with the Table of Contents. Notable classes CK.Core.ActivityMonitor"
  },
  "articles/getting-started.html": {
    "href": "articles/getting-started.html",
    "title": "Getting started | CK-Text",
    "keywords": "Getting started Here are some instructions to get you set up. Install the NuGet packages As of CK.ActivityMonitor 8, you only need to add CK.ActivityMonitor.SimpleSender in the project where you want to call the ActivityMonitor without configuring the output (e.g. in a library used by something else that does configure the output). Install-Package CK.ActivityMonitor.SimpleSender -Pre If you also want to configure the logging output (e.g. you are in an application host, or a website project, and not just a library), you also need CK.Monitoring . Install-Package CK.Monitoring -Pre Configure the ActivityMonitor output The ActivityMonitor output needs to be configured at the start of your application or website: using CK.Core; using CK.Monitoring; using CK.Monitoring.Handlers; class Startup { public Startup() { // Output all CK.Monitoring files in C:\\Logs\\ // Note: The path must be absolute. Relative paths are not supported SystemActivityMonitor.RootLogPath = @\"C:\\Logs\"; // Prepare GrandOutput handlers GrandOutputConfiguration grandOutputConfig = new GrandOutputConfiguration(); // TextFile handler: 10 000 lines per file, saved in C:\\Logs\\TextFile\\ grandOutputConfig.AddHandler( new TextFileConfiguration() { MaxCountPerFile = 10000, Path = \"TextFile\", // Relative to SystemActivityMonitor.RootLogPath } ); GrandOutput.EnsureActiveDefault( grandOutputConfig ); } } This initialization (and the CK.Monitoring package) is usually not necessary if your package is a simple library, but the host that uses your library will have to configure it. The default GrandOutput configured here is a big sink in which all new ActivityMonitor instances will output. Create an ActivityMonitor Just create a new instance of the ActivityMonitor class as you would for any other class, and use that. using CK.Core; namespace My.App { public class MyClass { public void MyMethod() { IActivityMonitor m = new ActivityMonitor(); m.Info(\"Hello world\"); } } } You can add a topic to a particular monitor by calling the constructor with a message: public void MyMethod() { IActivityMonitor m = new ActivityMonitor(\"My topic\"); } You can change the topic of a monitor by calling the SetTopic(message) method on ActivityMonitor . The topic is merely a log line with a special tag, sent when constructing the monitor or changing it. More on tags below. Log levels The ActivityMonitor has six log levels: Debug Trace Info Warn Error Fatal Use any of the named extension methods to send a log line to the ActivityMonitor : public void MyMethod() { IActivityMonitor m = new ActivityMonitor(); m.Debug(\"Debug line\"); m.Trace(\"Trace line\"); m.Info(\"Info line\"); m.Warn(\"Warn line\"); m.Error(\"Error line\"); m.Fatal(\"Fatal line\"); } Logging exceptions The ActivityMonitor will serialize any exception that you give it, including its contents and inner exceptions. public void MyMethod() { IActivityMonitor m = new ActivityMonitor(); try { throw new DivideByZeroException(); } catch (DivideByZeroException e) { m.Error(\"Something bad happened\", e); } } Adding tags to log lines You can add tags ( CKTrait objects) to log lines to categorize or filter them later on. The tag must be registered once, but can be kept: public static CKTrait LogTag = ActivityMonitor.Tags.Register(\"MY_LOG_TAG\"); public void MyMethod() { IActivityMonitor m = new ActivityMonitor(); m.Info(\"Line with tag\", LogTag); } The same tag can be registered multiple times: they will always point to the same object. More information about CKTrait can be found directly in the source code of CK-Core . Combining tags You can combine tags by separating them with a pipe ( | ) when registering them: public static CKTrait CombinedTag = ActivityMonitor.Tags.Register(\"TAG_ONE|TAG_TWO\"); public void MyMethod() { IActivityMonitor m = new ActivityMonitor(); m.Info(\"Line with TAG_ONE and TAG_TWO\", CombinedTag); } Groups You can structure logs sections by using the the Open* methods, which return IDisposable groups: public void MyMethod() { IActivityMonitor m = new ActivityMonitor(); using(m.OpenInfo(\"Info group\")) { m.Info(\"Line structured inside group\"); } } Groups are mostly like regular log lines: they have the same log levels ( Debug , Trace , Info , Warn , Error , Fatal ), and you can call Open* with exceptions and/or tags, and put groups inside groups."
  },
  "articles/index.html": {
    "href": "articles/index.html",
    "title": "Documentation | CK-Text",
    "keywords": "Documentation This section contains articles to help you use and understand CK-ActivityMonitor. To start using it right away, check out the Getting started page."
  },
  "articles/advanced-features.html": {
    "href": "articles/advanced-features.html",
    "title": "Advanced features | CK-Text",
    "keywords": "Advanced features Some features can help when trying to improve output or performance issues. Custom outputs on one ActivityMonitor You can add your own output handler for a single ActivityMonitor by creating an IActivityMonitorClient and registering it by calling monitor.Output.RegisterClient(client) . The following example adds an ActivityMonitorConsoleClient to one monitor: public void MyMethod() { IActivityMonitor m = new ActivityMonitor(); IActivityMonitorClient client = new ActivityMonitorConsoleClient(); m.Output.RegisterClient(client); } Apply a custom configuration to all new ActivityMonitors You can set up some code that will be executed every time an ActivityMonitor is created using the static ActivityMonitor.AutoConfiguration event. The following example adds an ActivityMonitorConsoleClient to every new monitor after it: public void Startup() { ActivityMonitor.AutoConfiguration += (monitor) => { IActivityMonitorClient client = new ActivityMonitorConsoleClient(); monitor.Output.RegisterClient(client); }; } Filtering ActivityMonitor logs ActivityMonitor instances obey a LogFilter to decide which logs to process and output. This filter can be set by the monitors' custom outputs; the GrandOutput does not set it.. You can set the default LogFilter on the static property ActivityMonitor.LogFilter . It can be overridden on every monitor, either permanently by setting its MinimalFilter property, or temporarily by calling TemporarilySetMinimalFilter() , which returns an IDisposable . A LogFilter is made of two LogLevel s: one for log lines , one for log groups . Groups that do not pass the filter are still opened: lines inside these groups are processed and outputted as if the group was never opened. All log levels are processed by default. Lambda log messages A log message can be replaced by a lambda that returns it; if the log does not pass the filter, this lambda will not be executed. This can be handy when using logs to perform IO calls like database queries. public void MyMethod() { IActivityMonitor m = new ActivityMonitor(); m.MinimalFilter = LogFilter.Off; m.Error(() => \"My error message\"); } Automatic tags An ActivityMonitor can be configured to have tags sent automatically, without having to add them to every log call. public static CKTrait LogTag = ActivityMonitor.Tags.Register(\"MY_LOG_TAG\"); public void MyMethod() { IActivityMonitor m = new ActivityMonitor(); m.AutoTags = LogTag; m.Info(\"Log message with tags\"); } You can temporarily set automatic tags by calling TemporarilySetAutoTags() , which returns an IDisposable ."
  }
}